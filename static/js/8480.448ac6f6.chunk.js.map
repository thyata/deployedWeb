{"version":3,"file":"static/js/8480.448ac6f6.chunk.js","mappings":"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","sources":["components/confirm-dialog/ConfirmDialog.tsx","components/empty-content/EmptyContent.tsx","components/table/utils.ts","components/table/useTable.ts","components/table/TableNoData.tsx","components/table/TableEmptyRows.tsx","components/table/TableHeadCustom.tsx","components/table/TableSelectedAction.tsx","components/table/TablePaginationCustom.tsx","components/text-max-line/useTypography.ts","components/text-max-line/TextMaxLine.tsx","hooks/useCopyToClipboard.ts","hooks/useDoubleClick.ts","sections/@dashboard/file/FileInvitedItem.tsx","sections/@dashboard/file/portal/FileShareDialog.tsx","sections/@dashboard/file/portal/FileDetailsDrawer.tsx","sections/@dashboard/file/item/FileCard.tsx","sections/@dashboard/file/item/FileTableRow.tsx","sections/@dashboard/file/portal/FileNewFolderDialog.tsx","sections/@dashboard/file/item/FileFolderCard.tsx","sections/@dashboard/file/filter/FileFilterName.tsx","sections/@dashboard/file/filter/FileFilterButton.tsx","sections/@dashboard/file/filter/FileFilterType.tsx","sections/@dashboard/file/portal/FileActionSelected.tsx","sections/@dashboard/file/view/FileListView.tsx","sections/@dashboard/file/FilePanel.tsx","sections/@dashboard/file/view/FileGridView.tsx","sections/@dashboard/file/FileChangeViewButton.tsx"],"sourcesContent":["// @mui\nimport { Dialog, Button, DialogTitle, DialogActions, DialogContent } from '@mui/material';\n//\nimport { ConfirmDialogProps } from './types';\n\n// ----------------------------------------------------------------------\n\nexport default function ConfirmDialog({\n  title,\n  content,\n  action,\n  open,\n  onClose,\n  ...other\n}: ConfirmDialogProps) {\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose} {...other}>\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\n\n      {content && <DialogContent sx={{ typography: 'body2' }}> {content} </DialogContent>}\n\n      <DialogActions>\n        {action}\n\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","// @mui\nimport { Typography, Stack, StackProps } from '@mui/material';\n//\nimport Image from '../image';\n\n// ----------------------------------------------------------------------\n\ninterface EmptyContentProps extends StackProps {\n  title: string;\n  img?: string;\n  description?: string;\n}\n\nexport default function EmptyContent({ title, description, img, sx, ...other }: EmptyContentProps) {\n  return (\n    <Stack\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      sx={{\n        height: 1,\n        textAlign: 'center',\n        p: (theme) => theme.spacing(8, 2),\n        ...sx,\n      }}\n      {...other}\n    >\n      <Image\n        disabledEffect\n        alt=\"empty content\"\n        src={img || '/assets/illustrations/illustration_empty_content.svg'}\n        sx={{ height: 240, mb: 3 }}\n      />\n\n      <Typography variant=\"h5\" gutterBottom>\n        {title}\n      </Typography>\n\n      {description && (\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n          {description}\n        </Typography>\n      )}\n    </Stack>\n  );\n}\n","// ----------------------------------------------------------------------\n\nexport function emptyRows(page: number, rowsPerPage: number, arrayLength: number) {\n  return page > 0 ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function getComparator<Key extends keyof any>(\n  order: 'asc' | 'desc',\n  orderBy: Key\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n","import { useState, useCallback } from 'react';\n//\nimport { TableProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype ReturnType = TableProps;\n\nexport type UseTableProps = {\n  defaultDense?: boolean;\n  defaultOrder?: 'asc' | 'desc';\n  defaultOrderBy?: string;\n  defaultSelected?: string[];\n  defaultRowsPerPage?: number;\n  defaultCurrentPage?: number;\n};\n\nexport default function useTable(props?: UseTableProps): ReturnType {\n  const [dense, setDense] = useState(!!props?.defaultDense);\n\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\n\n  const [order, setOrder] = useState<'asc' | 'desc'>(props?.defaultOrder || 'asc');\n\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\n\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\n\n  const [selected, setSelected] = useState<string[]>(props?.defaultSelected || []);\n\n  const onSort = useCallback(\n    (id: string) => {\n      const isAsc = orderBy === id && order === 'asc';\n      if (id !== '') {\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(id);\n      }\n    },\n    [order, orderBy]\n  );\n\n  const onSelectRow = useCallback(\n    (id: string) => {\n      const selectedIndex = selected.indexOf(id);\n\n      let newSelected: string[] = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(\n          selected.slice(0, selectedIndex),\n          selected.slice(selectedIndex + 1)\n        );\n      }\n      setSelected(newSelected);\n    },\n    [selected]\n  );\n\n  const onSelectAllRows = useCallback((checked: boolean, newSelecteds: string[]) => {\n    if (checked) {\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  }, []);\n\n  const onChangePage = useCallback((event: unknown, newPage: number) => {\n    setPage(newPage);\n  }, []);\n\n  const onChangeRowsPerPage = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setPage(0);\n    setRowsPerPage(parseInt(event.target.value, 10));\n    console.log('onChangeRowsPerPage Is Here',event.target.value);\n  }, []);\n\n  const onChangeDense = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setDense(event.target.checked);\n  }, []);\n\n  return {\n    dense,\n    order,\n    page,\n    orderBy,\n    rowsPerPage,\n    //\n    selected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangePage,\n    onChangeDense,\n    onChangeRowsPerPage,\n    //\n    setPage,\n    setDense,\n    setOrder,\n    setOrderBy,\n    setSelected,\n    setRowsPerPage,\n  };\n}\n","// @mui\nimport { TableRow, TableCell } from '@mui/material';\n//\nimport EmptyContent from '../empty-content';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  isNotFound: boolean;\n};\n\nexport default function TableNoData({ isNotFound }: Props) {\n  return (\n    <TableRow>\n      {isNotFound ? (\n        <TableCell colSpan={12}>\n          <EmptyContent\n            title=\"No Data\"\n            sx={{\n              '& span.MuiBox-root': { height: 160 },\n            }}\n          />\n        </TableCell>\n      ) : (\n        <TableCell colSpan={12} sx={{ p: 0 }} />\n      )}\n    </TableRow>\n  );\n}\n","// @mui\nimport { TableRow, TableCell } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  height?: number;\n  emptyRows: number;\n};\n\nexport default function TableEmptyRows({ emptyRows, height }: Props) {\n  if (!emptyRows) {\n    return null;\n  }\n\n  return (\n    <TableRow\n      sx={{\n        ...(height && {\n          height: height * emptyRows,\n        }),\n      }}\n    >\n      <TableCell colSpan={9} />\n    </TableRow>\n  );\n}\n","// @mui\nimport { Theme } from '@mui/material/styles';\nimport {\n  Box,\n  SxProps,\n  Checkbox,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableSortLabel,\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst visuallyHidden = {\n  border: 0,\n  margin: -1,\n  padding: 0,\n  width: '1px',\n  height: '1px',\n  overflow: 'hidden',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  clip: 'rect(0 0 0 0)',\n} as const;\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  order?: 'asc' | 'desc';\n  orderBy?: string;\n  headLabel: any[];\n  rowCount?: number;\n  numSelected?: number;\n  onSort?: (id: string) => void;\n  onSelectAllRows?: (checked: boolean) => void;\n  sx?: SxProps<Theme>;\n};\n\nexport default function TableHeadCustom({\n  order,\n  orderBy,\n  rowCount = 0,\n  headLabel,\n  numSelected = 0,\n  onSort,\n  onSelectAllRows,\n  sx,\n}: Props) {\n  return (\n    <TableHead sx={sx}>\n      <TableRow>\n        {onSelectAllRows && (\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                onSelectAllRows(event.target.checked)\n              }\n            />\n          </TableCell>\n        )}\n\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align || 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\n          >\n            {onSort ? (\n              <TableSortLabel\n                hideSortIcon\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={() => onSort(headCell.id)}\n                sx={{ textTransform: 'capitalize' }}\n              >\n                {headCell.label}\n\n                {orderBy === headCell.id ? (\n                  <Box sx={{ ...visuallyHidden }}>\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            ) : (\n              headCell.label\n            )}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","// @mui\nimport { Checkbox, Typography, Stack, StackProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends StackProps {\n  dense?: boolean;\n  action?: React.ReactNode;\n  rowCount: number;\n  numSelected: number;\n  onSelectAllRows: (checked: boolean) => void;\n}\n\nexport default function TableSelectedAction({\n  dense,\n  action,\n  rowCount,\n  numSelected,\n  onSelectAllRows,\n  sx,\n  ...other\n}: Props) {\n  if (!numSelected) {\n    return null;\n  }\n\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        pl: 1,\n        pr: 2,\n        top: 0,\n        left: 0,\n        width: 1,\n        zIndex: 9,\n        height: 58,\n        position: 'absolute',\n        bgcolor: 'primary.lighter',\n        ...(dense && {\n          height: 38,\n        }),\n        ...sx,\n      }}\n      {...other}\n    >\n      <Checkbox\n        indeterminate={numSelected > 0 && numSelected < rowCount}\n        checked={rowCount > 0 && numSelected === rowCount}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n          onSelectAllRows(event.target.checked)\n        }\n      />\n\n      <Typography\n        variant=\"subtitle1\"\n        sx={{\n          ml: 2,\n          flexGrow: 1,\n          color: 'primary.main',\n          ...(dense && {\n            ml: 3,\n          }),\n        }}\n      >\n        {numSelected} sélectionné\n      </Typography>\n\n      {action && action}\n    </Stack>\n  );\n}\n","// @mui\nimport { Theme } from '@mui/material/styles';\nimport {\n  Box,\n  Switch,\n  SxProps,\n  TablePagination,\n  FormControlLabel,\n  TablePaginationProps,\n} from '@mui/material';\n//\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  dense?: boolean;\n  onChangeDense?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  sx?: SxProps<Theme>;\n};\n\nexport default function TablePaginationCustom({\n  dense,\n  onChangeDense,\n  rowsPerPageOptions = [5, 10, 20,25],\n  sx,\n  ...other\n}: Props & TablePaginationProps) {\n  return (\n    <Box sx={{ position: 'relative', ...sx }}>\n      <TablePagination rowsPerPageOptions={rowsPerPageOptions} component=\"div\" {...other} />\n\n      {onChangeDense && (\n        <FormControlLabel\n          label=\"Dense\"\n          control={<Switch checked={dense} onChange={onChangeDense} />}\n          sx={{\n            pl: 2,\n            py: 1.5,\n            top: 0,\n            position: {\n              md: 'absolute',\n            },\n          }}\n        />\n      )}\n    </Box>\n  );\n}\n","// @mui\nimport { useTheme } from '@mui/material/styles';\nimport { Variant } from '@mui/material/styles/createTypography';\n// hooks\nimport { useWidth } from '../../hooks/useResponsive';\n// theme\nimport { remToPx } from '../../theme/typography';\n\n// ----------------------------------------------------------------------\n\nexport default function useTypography(variant: Variant) {\n  const theme = useTheme();\n\n  const breakpoints = useWidth();\n\n  const key = theme.breakpoints.up(breakpoints === 'xl' ? 'lg' : breakpoints);\n\n  const hasResponsive =\n    variant === 'h1' ||\n    variant === 'h2' ||\n    variant === 'h3' ||\n    variant === 'h4' ||\n    variant === 'h5' ||\n    variant === 'h6';\n\n  const getFont: any =\n    hasResponsive && theme.typography[variant][key]\n      ? theme.typography[variant][key]\n      : theme.typography[variant];\n\n  const fontSize = remToPx(getFont.fontSize);\n\n  const lineHeight = Number(theme.typography[variant].lineHeight) * fontSize;\n\n  const { fontWeight, letterSpacing } = theme.typography[variant];\n\n  return { fontSize, lineHeight, fontWeight, letterSpacing };\n}\n","import { forwardRef } from 'react';\n// @mui\nimport { Typography, Link } from '@mui/material';\n//\nimport { TextMaxLineProps } from './types';\nimport useTypography from './useTypography';\n\n// ----------------------------------------------------------------------\n\nconst TextMaxLine = forwardRef<HTMLAnchorElement, TextMaxLineProps>(\n  ({ asLink, variant = 'body1', line = 2, persistent = false, children, sx, ...other }, ref) => {\n    const { lineHeight } = useTypography(variant);\n\n    const styles = {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      display: '-webkit-box',\n      WebkitLineClamp: line,\n      WebkitBoxOrient: 'vertical',\n      ...(persistent && {\n        height: lineHeight * line,\n      }),\n      ...sx,\n    } as const;\n\n    if (asLink) {\n      return (\n        <Link color=\"inherit\" ref={ref} variant={variant} sx={{ ...styles }} {...other}>\n          {children}\n        </Link>\n      );\n    }\n\n    return (\n      <Typography ref={ref} variant={variant} sx={{ ...styles }} {...other}>\n        {children}\n      </Typography>\n    );\n  }\n);\n\nexport default TextMaxLine;\n","import { useState } from 'react';\n\n// ----------------------------------------------------------------------\n\ntype CopiedValue = string | null;\n\ntype CopyFn = (text: string) => Promise<boolean>;\n\ntype ReturnType = {\n  copy: CopyFn;\n  copiedText: CopiedValue;\n};\n\nfunction useCopyToClipboard(): ReturnType {\n  const [copiedText, setCopiedText] = useState<CopiedValue>(null);\n\n  const copy: CopyFn = async (text) => {\n    if (!navigator?.clipboard) {\n      console.warn('Clipboard not supported');\n      return false;\n    }\n\n    // Try to save to clipboard then save it in the state if worked\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopiedText(text);\n      return true;\n    } catch (error) {\n      console.warn('Copy failed', error);\n      setCopiedText(null);\n      return false;\n    }\n  };\n\n  return { copiedText, copy };\n}\n\nexport default useCopyToClipboard;\n","import { useCallback, useRef } from 'react';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  timeout?: number;\n  click?: (e: React.SyntheticEvent) => void;\n  doubleClick: (e: React.SyntheticEvent) => void;\n};\n\nexport default function useDoubleClick({ click, doubleClick, timeout = 250 }: Props) {\n  const clickTimeout = useRef<any>();\n\n  const clearClickTimeout = () => {\n    if (clickTimeout) {\n      clearTimeout(clickTimeout.current);\n      clickTimeout.current = null;\n    }\n  };\n\n  return useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      clearClickTimeout();\n      if (click && event.detail === 1) {\n        clickTimeout.current = setTimeout(() => {\n          click(event);\n        }, timeout);\n      }\n      if (event.detail % 2 === 0) {\n        doubleClick(event);\n      }\n    },\n    [click, doubleClick, timeout]\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Avatar,\n  Button,\n  Divider,\n  Tooltip,\n  ListItem,\n  MenuItem,\n  ListItemText,\n  ListItemAvatar,\n} from '@mui/material';\n// @types\nimport { IFileShared } from '../../../@types/file';\n// components\nimport Iconify from '../../../components/iconify';\nimport MenuPopover from '../../../components/menu-popover';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  person: IFileShared;\n};\n\nexport default function FileInvitedItem({ person }: Props) {\n  const [permission, setPermission] = useState(person.permission);\n\n  const [openPopover, setOpenPopover] = useState<HTMLElement | null>(null);\n\n  const handleOpenPopover = (event: React.MouseEvent<HTMLElement>) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  const handleChangePermission = (newPermission: string) => {\n    setPermission(newPermission);\n  };\n\n  return (\n    <>\n      <ListItem disableGutters>\n        <ListItemAvatar>\n          <Avatar alt={person.name} src={person.avatar} />\n        </ListItemAvatar>\n\n        <ListItemText\n          primary={person.name}\n          secondary={\n            <Tooltip title={person.email}>\n              <span>{person.email}</span>\n            </Tooltip>\n          }\n          primaryTypographyProps={{ noWrap: true, typography: 'subtitle2' }}\n          secondaryTypographyProps={{ noWrap: true }}\n          sx={{ flexGrow: 1, pr: 1 }}\n        />\n\n        <Button\n          size=\"small\"\n          color=\"inherit\"\n          endIcon={<Iconify icon={openPopover ? 'eva:chevron-up-fill' : 'eva:chevron-down-fill'} />}\n          onClick={handleOpenPopover}\n          sx={{\n            flexShrink: 0,\n            textTransform: 'unset',\n            fontWeight: 'fontWeightMedium',\n            '& .MuiButton-endIcon': {\n              ml: 0,\n            },\n            ...(openPopover && {\n              bgcolor: 'action.selected',\n            }),\n          }}\n        >\n          Can {permission}\n        </Button>\n      </ListItem>\n\n      <MenuPopover open={openPopover} onClose={handleClosePopover} sx={{ width: 160 }}>\n        <>\n          <MenuItem\n            onClick={() => {\n              handleClosePopover();\n              handleChangePermission('view');\n            }}\n            sx={{\n              ...(permission === 'view' && {\n                bgcolor: 'action.selected',\n              }),\n            }}\n          >\n            <Iconify icon=\"eva:eye-fill\" />\n            Can view\n          </MenuItem>\n\n          <MenuItem\n            onClick={() => {\n              handleClosePopover();\n              handleChangePermission('edit');\n            }}\n            sx={{\n              ...(permission === 'edit' && {\n                bgcolor: 'action.selected',\n              }),\n            }}\n          >\n            <Iconify icon=\"eva:edit-fill\" />\n            Can edit\n          </MenuItem>\n\n          <Divider sx={{ borderStyle: 'dashed' }} />\n\n          <MenuItem\n            onClick={() => {\n              handleClosePopover();\n            }}\n            sx={{ color: 'error.main' }}\n          >\n            <Iconify icon=\"eva:trash-2-outline\" />\n            Remove\n          </MenuItem>\n        </>\n      </MenuPopover>\n    </>\n  );\n}\n","// @mui\nimport {\n  List,\n  Stack,\n  Dialog,\n  Button,\n  TextField,\n  DialogProps,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n} from '@mui/material';\n// @types\nimport { IFileShared } from '../../../../@types/file';\n// components\nimport Iconify from '../../../../components/iconify';\nimport Scrollbar from '../../../../components/scrollbar';\n//\nimport FileInvitedItem from '../FileInvitedItem';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends DialogProps {\n  inviteEmail?: string;\n  shared?: IFileShared[] | null;\n  onCopyLink?: VoidFunction;\n  onChangeInvite?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  //\n  open: boolean;\n  onClose: VoidFunction;\n}\n\nexport default function FileShareDialog({\n  shared,\n  inviteEmail,\n  onCopyLink,\n  onChangeInvite,\n  //\n  open,\n  onClose,\n  ...other\n}: Props) {\n  const hasShared = shared && !!shared.length;\n\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose} {...other}>\n      <DialogTitle> Invite </DialogTitle>\n\n      <DialogContent sx={{ overflow: 'unset' }}>\n        {onChangeInvite && (\n          <Stack direction=\"row\" spacing={1} sx={{ mb: 3 }}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              value={inviteEmail}\n              placeholder=\"Email\"\n              onChange={onChangeInvite}\n            />\n            <Button disabled={!inviteEmail} variant=\"contained\" sx={{ flexShrink: 0 }}>\n              Send Invite\n            </Button>\n          </Stack>\n        )}\n\n        {hasShared && (\n          <Scrollbar sx={{ maxHeight: 60 * 6 }}>\n            <List disablePadding>\n              {shared.map((person) => (\n                <FileInvitedItem key={person.id} person={person} />\n              ))}\n            </List>\n          </Scrollbar>\n        )}\n      </DialogContent>\n\n      <DialogActions sx={{ justifyContent: 'space-between' }}>\n        {onCopyLink && (\n          <Button startIcon={<Iconify icon=\"eva:link-2-fill\" />} onClick={onCopyLink}>\n            Copy link\n          </Button>\n        )}\n\n        {onClose && (\n          <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n            Close\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Box,\n  Chip,\n  List,\n  Stack,\n  Drawer,\n  Button,\n  Divider,\n  Checkbox,\n  TextField,\n  Typography,\n  IconButton,\n  StackProps,\n  DrawerProps,\n  Autocomplete,\n} from '@mui/material';\n// utils\nimport { fData } from '../../../../utils/formatNumber';\nimport { fDateTime } from '../../../../utils/formatTime';\n// @types\nimport { IFile } from '../../../../@types/file';\n// components\nimport Iconify from '../../../../components/iconify';\nimport Scrollbar from '../../../../components/scrollbar';\nimport FileThumbnail, { fileFormat } from '../../../../components/file-thumbnail';\n//\nimport FileShareDialog from './FileShareDialog';\nimport FileInvitedItem from '../FileInvitedItem';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends DrawerProps {\n  item: IFile;\n  favorited?: boolean;\n  //\n  onFavorite?: VoidFunction;\n  onCopyLink: VoidFunction;\n  //\n  onClose: VoidFunction;\n  onDelete: VoidFunction;\n}\n\nexport default function FileDetailsDrawer({\n  item,\n  open,\n  favorited,\n  //\n  onFavorite,\n  onCopyLink,\n  onClose,\n  onDelete,\n  ...other\n}: Props) {\n  const { name, size, url, type, shared, dateModified } = item;\n\n  const hasShared = shared && !!shared.length;\n\n  const [openShare, setOpenShare] = useState(false);\n\n  const [toggleTags, setToggleTags] = useState(true);\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const [tags, setTags] = useState(item.tags.slice(0, 3));\n\n  const [toggleProperties, setToggleProperties] = useState(true);\n\n  const handleToggleTags = () => {\n    setToggleTags(!toggleTags);\n  };\n\n  const handleToggleProperties = () => {\n    setToggleProperties(!toggleProperties);\n  };\n\n  const handleOpenShare = () => {\n    setOpenShare(true);\n  };\n\n  const handleCloseShare = () => {\n    setOpenShare(false);\n  };\n\n  const handleChangeInvite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInviteEmail(event.target.value);\n  };\n\n  return (\n    <>\n      <Drawer\n        open={open}\n        onClose={onClose}\n        anchor=\"right\"\n        BackdropProps={{\n          invisible: true,\n        }}\n        PaperProps={{\n          sx: { width: 320 },\n        }}\n        {...other}\n      >\n        <Scrollbar sx={{ height: 1 }}>\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ p: 2.5 }}>\n            <Typography variant=\"h6\"> Info </Typography>\n\n            <Checkbox\n              color=\"warning\"\n              icon={<Iconify icon=\"eva:star-outline\" />}\n              checkedIcon={<Iconify icon=\"eva:star-fill\" />}\n              checked={favorited}\n              onChange={onFavorite}\n              sx={{ p: 0.75 }}\n            />\n          </Stack>\n\n          <Stack\n            spacing={2.5}\n            justifyContent=\"center\"\n            sx={{ p: 2.5, bgcolor: 'background.neutral' }}\n          >\n            <FileThumbnail\n              imageView\n              file={type === 'folder' ? type : url}\n              sx={{ width: 64, height: 64 }}\n              imgSx={{ borderRadius: 1 }}\n            />\n\n            <Typography variant=\"h6\" sx={{ wordBreak: 'break-all' }}>\n              {name}\n            </Typography>\n\n            <Divider sx={{ borderStyle: 'dashed' }} />\n\n            <Stack spacing={1}>\n              <Panel label=\"Tags\" toggle={toggleTags} onToggle={handleToggleTags} />\n\n              {toggleTags && (\n                <Autocomplete\n                  multiple\n                  freeSolo\n                  limitTags={2}\n                  options={item.tags.map((option) => option)}\n                  value={tags}\n                  onChange={(event, newValue) => {\n                    setTags([...tags, ...newValue.filter((option) => tags.indexOf(option) === -1)]);\n                  }}\n                  renderTags={(value: readonly string[], getTagProps) =>\n                    value.map((option: string, index: number) => (\n                      <Chip\n                        {...getTagProps({ index })}\n                        size=\"small\"\n                        variant=\"soft\"\n                        label={option}\n                        key={option}\n                      />\n                    ))\n                  }\n                  renderInput={(params) => <TextField {...params} placeholder=\"#Add a tags\" />}\n                />\n              )}\n            </Stack>\n\n            <Stack spacing={1.5}>\n              <Panel\n                label=\"Properties\"\n                toggle={toggleProperties}\n                onToggle={handleToggleProperties}\n              />\n\n              {toggleProperties && (\n                <Stack spacing={1.5}>\n                  <Row label=\"Size\" value={fData(size)} />\n\n                  <Row label=\"Modified\" value={fDateTime(dateModified)} />\n\n                  <Row label=\"Type\" value={fileFormat(type)} />\n                </Stack>\n              )}\n            </Stack>\n          </Stack>\n\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ p: 2.5 }}>\n            <Typography variant=\"subtitle2\"> File Share With </Typography>\n\n            <IconButton\n              size=\"small\"\n              color=\"success\"\n              onClick={handleOpenShare}\n              sx={{\n                p: 0,\n                width: 24,\n                height: 24,\n                color: 'common.white',\n                bgcolor: 'success.main',\n                '&:hover': {\n                  bgcolor: 'success.main',\n                },\n              }}\n            >\n              <Iconify icon=\"eva:plus-fill\" />\n            </IconButton>\n          </Stack>\n\n          {hasShared && (\n            <List disablePadding sx={{ pl: 2.5, pr: 1 }}>\n              {shared.map((person) => (\n                <FileInvitedItem key={person.id} person={person} />\n              ))}\n            </List>\n          )}\n        </Scrollbar>\n\n        <Box sx={{ p: 2.5 }}>\n          <Button\n            fullWidth\n            variant=\"soft\"\n            color=\"error\"\n            size=\"large\"\n            startIcon={<Iconify icon=\"eva:trash-2-outline\" />}\n            onClick={onDelete}\n          >\n            Delete\n          </Button>\n        </Box>\n      </Drawer>\n\n      <FileShareDialog\n        open={openShare}\n        shared={shared}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onCopyLink={onCopyLink}\n        onClose={() => {\n          handleCloseShare();\n          setInviteEmail('');\n        }}\n      />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ninterface PanelProps extends StackProps {\n  label: string;\n  toggle: boolean;\n  onToggle: VoidFunction;\n}\n\nfunction Panel({ label, toggle, onToggle, ...other }: PanelProps) {\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" {...other}>\n      <Typography variant=\"subtitle2\"> {label} </Typography>\n\n      <IconButton size=\"small\" onClick={onToggle}>\n        <Iconify icon={toggle ? 'eva:chevron-up-fill' : 'eva:chevron-down-fill'} />\n      </IconButton>\n    </Stack>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ntype RowProps = {\n  label: string;\n  value: string;\n};\n\nfunction Row({ label, value = '' }: RowProps) {\n  return (\n    <Stack direction=\"row\" sx={{ typography: 'caption', textTransform: 'capitalize' }}>\n      <Box component=\"span\" sx={{ width: 80, color: 'text.secondary', mr: 2 }}>\n        {label}\n      </Box>\n\n      {value}\n    </Stack>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Box,\n  Card,\n  Stack,\n  Button,\n  Divider,\n  MenuItem,\n  Checkbox,\n  CardProps,\n  IconButton,\n} from '@mui/material';\n// hooks\nimport useCopyToClipboard from '../../../../hooks/useCopyToClipboard';\n// utils\nimport { fDateTime } from '../../../../utils/formatTime';\nimport { fData } from '../../../../utils/formatNumber';\n// @types\nimport { IFileManager } from '../../../../@types/file';\n// components\nimport Iconify from '../../../../components/iconify';\nimport MenuPopover from '../../../../components/menu-popover';\nimport { useSnackbar } from '../../../../components/snackbar';\nimport TextMaxLine from '../../../../components/text-max-line';\nimport FileThumbnail from '../../../../components/file-thumbnail';\nimport ConfirmDialog from '../../../../components/confirm-dialog';\n//\nimport FileShareDialog from '../portal/FileShareDialog';\nimport FileDetailsDrawer from '../portal/FileDetailsDrawer';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends CardProps {\n  file: IFileManager;\n  selected?: boolean;\n  onSelect?: VoidFunction;\n  onDelete: VoidFunction;\n}\n\nexport default function FileCard({ file, selected, onSelect, onDelete, sx, ...other }: Props) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { copy } = useCopyToClipboard();\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const [showCheckbox, setShowCheckbox] = useState(false);\n\n  const [openShare, setOpenShare] = useState(false);\n\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  const [openDetails, setOpenDetails] = useState(false);\n\n  const [favorited, setFavorited] = useState(file.isFavorited);\n\n  const [openPopover, setOpenPopover] = useState<HTMLElement | null>(null);\n\n  const handleFavorite = () => {\n    setFavorited(!favorited);\n  };\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const handleShowCheckbox = () => {\n    setShowCheckbox(true);\n  };\n\n  const handleHideCheckbox = () => {\n    setShowCheckbox(false);\n  };\n\n  const handleOpenShare = () => {\n    setOpenShare(true);\n  };\n\n  const handleCloseShare = () => {\n    setOpenShare(false);\n  };\n\n  const handleOpenDetails = () => {\n    setOpenDetails(true);\n  };\n\n  const handleCloseDetails = () => {\n    setOpenDetails(false);\n  };\n\n  const handleOpenPopover = (event: React.MouseEvent<HTMLElement>) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  const handleChangeInvite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInviteEmail(event.target.value);\n  };\n\n  const handleCopy = () => {\n    enqueueSnackbar('Copied!');\n    copy(file.url);\n  };\n\n  return (\n    <>\n      <Card\n        onMouseEnter={handleShowCheckbox}\n        onMouseLeave={handleHideCheckbox}\n        sx={{\n          p: 2.5,\n          width: 1,\n          maxWidth: 222,\n          boxShadow: 0,\n          bgcolor: 'background.default',\n          border: (theme) => `solid 1px ${theme.palette.divider}`,\n          ...((showCheckbox || selected) && {\n            borderColor: 'transparent',\n            bgcolor: 'background.paper',\n            boxShadow: (theme) => theme.customShadows.z20,\n          }),\n          ...sx,\n        }}\n        {...other}\n      >\n        {(showCheckbox || selected) && onSelect ? (\n          <Checkbox\n            checked={selected}\n            onClick={onSelect}\n            icon={<Iconify icon=\"eva:radio-button-off-fill\" />}\n            checkedIcon={<Iconify icon=\"eva:checkmark-circle-2-fill\" />}\n          />\n        ) : (\n          <FileThumbnail file={file.type} sx={{ width: 40, height: 40 }} />\n        )}\n\n        <TextMaxLine\n          variant=\"subtitle2\"\n          persistent\n          onClick={handleOpenDetails}\n          sx={{ mt: 2, mb: 0.5 }}\n        >\n          {file.name}\n        </TextMaxLine>\n\n        <Stack\n          spacing={0.75}\n          direction=\"row\"\n          alignItems=\"center\"\n          sx={{ typography: 'caption', color: 'text.disabled', mt: 0.5 }}\n        >\n          <Box> {fData(file.size)} </Box>\n\n          <Box sx={{ width: 2, height: 2, borderRadius: '50%', bgcolor: 'currentColor' }} />\n\n          <Box> {fDateTime(file.dateModified)} </Box>\n        </Stack>\n\n        <Stack direction=\"row\" alignItems=\"center\" sx={{ top: 8, right: 8, position: 'absolute' }}>\n          <Checkbox\n            color=\"warning\"\n            icon={<Iconify icon=\"eva:star-outline\" />}\n            checkedIcon={<Iconify icon=\"eva:star-fill\" />}\n            checked={favorited}\n            onChange={handleFavorite}\n            sx={{ p: 0.75 }}\n          />\n\n          <IconButton color={openPopover ? 'inherit' : 'default'} onClick={handleOpenPopover}>\n            <Iconify icon=\"eva:more-vertical-fill\" />\n          </IconButton>\n        </Stack>\n      </Card>\n\n      <MenuPopover\n        open={openPopover}\n        onClose={handleClosePopover}\n        arrow=\"right-top\"\n        sx={{ width: 160 }}\n      >\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleCopy();\n          }}\n        >\n          <Iconify icon=\"eva:link-2-fill\" />\n          Copy Link\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleOpenShare();\n          }}\n        >\n          <Iconify icon=\"eva:share-fill\" />\n          Share\n        </MenuItem>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <MenuItem\n          onClick={() => {\n            handleOpenConfirm();\n            handleClosePopover();\n          }}\n          sx={{ color: 'error.main' }}\n        >\n          <Iconify icon=\"eva:trash-2-outline\" />\n          Delete\n        </MenuItem>\n      </MenuPopover>\n\n      <FileDetailsDrawer\n        item={file}\n        favorited={favorited}\n        onFavorite={handleFavorite}\n        onCopyLink={handleCopy}\n        open={openDetails}\n        onClose={handleCloseDetails}\n        onDelete={() => {\n          handleCloseDetails();\n          onDelete();\n        }}\n      />\n\n      <FileShareDialog\n        open={openShare}\n        shared={file.shared}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onCopyLink={handleCopy}\n        onClose={() => {\n          handleCloseShare();\n          setInviteEmail('');\n        }}\n      />\n\n      <ConfirmDialog\n        open={openConfirm}\n        onClose={handleCloseConfirm}\n        title=\"Delete\"\n        content=\"Are you sure want to delete?\"\n        action={\n          <Button variant=\"contained\" color=\"error\" onClick={onDelete}>\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Stack,\n  Avatar,\n  Button,\n  Divider,\n  Checkbox,\n  TableRow,\n  MenuItem,\n  TableCell,\n  IconButton,\n  Typography,\n  AvatarGroup,\n} from '@mui/material';\n// hooks\nimport useDoubleClick from '../../../../hooks/useDoubleClick';\nimport useCopyToClipboard from '../../../../hooks/useCopyToClipboard';\n// utils\nimport { fDate } from '../../../../utils/formatTime';\nimport { fData } from '../../../../utils/formatNumber';\n// @types\nimport { IFileManager } from '../../../../@types/file';\n// components\nimport Iconify from '../../../../components/iconify';\nimport MenuPopover from '../../../../components/menu-popover';\nimport { useSnackbar } from '../../../../components/snackbar';\nimport ConfirmDialog from '../../../../components/confirm-dialog';\nimport FileThumbnail from '../../../../components/file-thumbnail';\n//\nimport FileShareDialog from '../portal/FileShareDialog';\nimport FileDetailsDrawer from '../portal/FileDetailsDrawer';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  row: IFileManager;\n  selected: boolean;\n  onSelectRow: VoidFunction;\n  onDeleteRow: VoidFunction;\n};\n\nexport default function FileTableRow({ row, selected, onSelectRow, onDeleteRow }: Props) {\n  const { name, size, type, dateModified, shared, isFavorited } = row;\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { copy } = useCopyToClipboard();\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const [openShare, setOpenShare] = useState(false);\n\n  const [openDetails, setOpenDetails] = useState(false);\n\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  const [favorited, setFavorited] = useState(isFavorited);\n\n  const [openPopover, setOpenPopover] = useState<HTMLElement | null>(null);\n\n  const handleFavorite = () => {\n    setFavorited(!favorited);\n  };\n\n  const handleOpenDetails = () => {\n    setOpenDetails(true);\n  };\n\n  const handleCloseDetails = () => {\n    setOpenDetails(false);\n  };\n\n  const handleOpenShare = () => {\n    setOpenShare(true);\n  };\n\n  const handleCloseShare = () => {\n    setOpenShare(false);\n  };\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const handleOpenPopover = (event: React.MouseEvent<HTMLElement>) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  const handleChangeInvite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInviteEmail(event.target.value);\n  };\n\n  const handleClick = useDoubleClick({\n    click: () => {\n      handleOpenDetails();\n    },\n    doubleClick: () => console.log('DOUBLE CLICK'),\n  });\n\n  const handleCopy = () => {\n    enqueueSnackbar('Copied!');\n    copy(row.url);\n  };\n\n  return (\n    <>\n      <TableRow\n        sx={{\n          borderRadius: 1,\n          '& .MuiTableCell-root': {\n            bgcolor: 'background.default',\n          },\n          ...(openDetails && {\n            '& .MuiTableCell-root': {\n              color: 'text.primary',\n              typography: 'subtitle2',\n              bgcolor: 'background.default',\n            },\n          }),\n        }}\n      >\n        <TableCell\n          padding=\"checkbox\"\n          sx={{\n            borderTopLeftRadius: 8,\n            borderBottomLeftRadius: 8,\n          }}\n        >\n          <Checkbox\n            checked={selected}\n            onDoubleClick={() => console.log('ON DOUBLE CLICK')}\n            onClick={onSelectRow}\n          />\n        </TableCell>\n\n        <TableCell onClick={handleClick}>\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n            <FileThumbnail file={type} />\n\n            <Typography noWrap variant=\"inherit\" sx={{ maxWidth: 360, cursor: 'pointer' }}>\n              {name}\n            </Typography>\n          </Stack>\n        </TableCell>\n\n        <TableCell\n          align=\"left\"\n          onClick={handleClick}\n          sx={{ color: 'text.secondary', whiteSpace: 'nowrap' }}\n        >\n          {fData(size)}\n        </TableCell>\n\n        <TableCell\n          align=\"center\"\n          onClick={handleClick}\n          sx={{ color: 'text.secondary', whiteSpace: 'nowrap' }}\n        >\n          {type}\n        </TableCell>\n\n        <TableCell\n          align=\"left\"\n          onClick={handleClick}\n          sx={{ color: 'text.secondary', whiteSpace: 'nowrap' }}\n        >\n          {fDate(dateModified)}\n        </TableCell>\n\n        <TableCell align=\"right\" onClick={handleClick}>\n          <AvatarGroup\n            max={4}\n            sx={{\n              '& .MuiAvatarGroup-avatar': {\n                width: 24,\n                height: 24,\n                '&:first-of-type': {\n                  fontSize: 12,\n                },\n              },\n            }}\n          >\n            {shared &&\n              shared.map((person) => (\n                <Avatar key={person.id} alt={person.name} src={person.avatar} />\n              ))}\n          </AvatarGroup>\n        </TableCell>\n\n        <TableCell\n          align=\"right\"\n          sx={{\n            whiteSpace: 'nowrap',\n            borderTopRightRadius: 8,\n            borderBottomRightRadius: 8,\n          }}\n        >\n          <Checkbox\n            color=\"warning\"\n            icon={<Iconify icon=\"eva:star-outline\" />}\n            checkedIcon={<Iconify icon=\"eva:star-fill\" />}\n            checked={favorited}\n            onChange={handleFavorite}\n            sx={{ p: 0.75 }}\n          />\n\n          <IconButton color={openPopover ? 'inherit' : 'default'} onClick={handleOpenPopover}>\n            <Iconify icon=\"eva:more-vertical-fill\" />\n          </IconButton>\n        </TableCell>\n      </TableRow>\n\n      <MenuPopover\n        open={openPopover}\n        onClose={handleClosePopover}\n        arrow=\"right-top\"\n        sx={{ width: 160 }}\n      >\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleCopy();\n          }}\n        >\n          <Iconify icon=\"eva:link-2-fill\" />\n          Copy Link\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleOpenShare();\n          }}\n        >\n          <Iconify icon=\"eva:share-fill\" />\n          Share\n        </MenuItem>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <MenuItem\n          onClick={() => {\n            handleOpenConfirm();\n            handleClosePopover();\n          }}\n          sx={{ color: 'error.main' }}\n        >\n          <Iconify icon=\"eva:trash-2-outline\" />\n          Delete\n        </MenuItem>\n      </MenuPopover>\n\n      <FileDetailsDrawer\n        item={row}\n        favorited={favorited}\n        onFavorite={handleFavorite}\n        onCopyLink={handleCopy}\n        open={openDetails}\n        onClose={handleCloseDetails}\n        onDelete={onDeleteRow}\n      />\n\n      <FileShareDialog\n        open={openShare}\n        shared={shared}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onCopyLink={handleCopy}\n        onClose={() => {\n          handleCloseShare();\n          setInviteEmail('');\n        }}\n      />\n\n      <ConfirmDialog\n        open={openConfirm}\n        onClose={handleCloseConfirm}\n        title=\"Delete\"\n        content=\"Are you sure want to delete?\"\n        action={\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","import { useEffect, useState, useCallback } from 'react';\n// @mui\nimport {\n  Stack,\n  Dialog,\n  Button,\n  TextField,\n  DialogProps,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\nimport { Upload } from '../../../../components/upload';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends DialogProps {\n  title?: string;\n  //\n  onCreate?: VoidFunction;\n  onUpdate?: VoidFunction;\n  //\n  folderName?: string;\n  onChangeFolderName?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  //\n  open: boolean;\n  onClose: VoidFunction;\n}\n\nexport default function FileNewFolderDialog({\n  title = 'Upload Files',\n  open,\n  onClose,\n  //\n  onCreate,\n  onUpdate,\n  //\n  folderName,\n  onChangeFolderName,\n  ...other\n}: Props) {\n  const [files, setFiles] = useState<(File | string)[]>([]);\n\n  useEffect(() => {\n    if (!open) {\n      setFiles([]);\n    }\n  }, [open]);\n\n  const handleDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      const newFiles = acceptedFiles.map((file) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        })\n      );\n\n      setFiles([...files, ...newFiles]);\n    },\n    [files]\n  );\n\n  const handleUpload = () => {\n    onClose();\n    console.log('ON UPLOAD');\n  };\n\n  const handleRemoveFile = (inputFile: File | string) => {\n    const filtered = files.filter((file) => file !== inputFile);\n    setFiles(filtered);\n  };\n\n  const handleRemoveAllFiles = () => {\n    setFiles([]);\n  };\n\n  return (\n    <Dialog fullWidth maxWidth=\"sm\" open={open} onClose={onClose} {...other}>\n      <DialogTitle sx={{ p: (theme) => theme.spacing(3, 3, 2, 3) }}> {title} </DialogTitle>\n\n      <DialogContent dividers sx={{ pt: 1, pb: 0, border: 'none' }}>\n        {(onCreate || onUpdate) && (\n          <TextField\n            fullWidth\n            label=\"Folder name\"\n            value={folderName}\n            onChange={onChangeFolderName}\n            sx={{ mb: 3 }}\n          />\n        )}\n\n        <Upload multiple files={files} onDrop={handleDrop} onRemove={handleRemoveFile} />\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          startIcon={<Iconify icon=\"eva:cloud-upload-fill\" />}\n          onClick={handleUpload}\n        >\n          Upload\n        </Button>\n\n        {!!files.length && (\n          <Button variant=\"outlined\" color=\"inherit\" onClick={handleRemoveAllFiles}>\n            Remove all\n          </Button>\n        )}\n\n        {(onCreate || onUpdate) && (\n          <Stack direction=\"row\" justifyContent=\"flex-end\" flexGrow={1}>\n            <Button variant=\"soft\" onClick={onCreate || onUpdate}>\n              {onUpdate ? 'Save' : 'Create'}\n            </Button>\n          </Stack>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Box,\n  Card,\n  Stack,\n  Button,\n  Divider,\n  MenuItem,\n  Checkbox,\n  CardProps,\n  IconButton,\n} from '@mui/material';\n// hooks\nimport useCopyToClipboard from '../../../../hooks/useCopyToClipboard';\n// utils\nimport { fData } from '../../../../utils/formatNumber';\n// @types\nimport { IFolderManager } from '../../../../@types/file';\n// components\nimport Iconify from '../../../../components/iconify';\nimport MenuPopover from '../../../../components/menu-popover';\nimport TextMaxLine from '../../../../components/text-max-line';\nimport { useSnackbar } from '../../../../components/snackbar';\nimport ConfirmDialog from '../../../../components/confirm-dialog';\n//\nimport FileShareDialog from '../portal/FileShareDialog';\nimport FileDetailsDrawer from '../portal/FileDetailsDrawer';\nimport FileNewFolderDialog from '../portal/FileNewFolderDialog';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends CardProps {\n  folder: IFolderManager;\n  selected?: boolean;\n  onSelect?: VoidFunction;\n  onDelete: VoidFunction;\n}\n\nexport default function FileFolderCard({\n  folder,\n  selected,\n  onSelect,\n  onDelete,\n  sx,\n  ...other\n}: Props) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { copy } = useCopyToClipboard();\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const [showCheckbox, setShowCheckbox] = useState(false);\n\n  const [openShare, setOpenShare] = useState(false);\n\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  const [openDetails, setOpenDetails] = useState(false);\n\n  const [folderName, setFolderName] = useState(folder.name);\n\n  const [openEditFolder, setOpenEditFolder] = useState(false);\n\n  const [openPopover, setOpenPopover] = useState<HTMLElement | null>(null);\n\n  const [favorited, setFavorited] = useState(folder.isFavorited);\n\n  const handleFavorite = () => {\n    setFavorited(!favorited);\n  };\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const handleShowCheckbox = () => {\n    setShowCheckbox(true);\n  };\n\n  const handleHideCheckbox = () => {\n    setShowCheckbox(false);\n  };\n\n  const handleOpenShare = () => {\n    setOpenShare(true);\n  };\n\n  const handleCloseShare = () => {\n    setOpenShare(false);\n  };\n\n  const handleOpenDetails = () => {\n    setOpenDetails(true);\n  };\n\n  const handleCloseDetails = () => {\n    setOpenDetails(false);\n  };\n\n  const handleOpenEditFolder = () => {\n    setOpenEditFolder(true);\n  };\n\n  const handleCloseEditFolder = () => {\n    setOpenEditFolder(false);\n  };\n\n  const handleOpenPopover = (event: React.MouseEvent<HTMLElement>) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  const handleChangeInvite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInviteEmail(event.target.value);\n  };\n\n  const handleCopy = () => {\n    enqueueSnackbar('Copied!');\n    copy(folder.url);\n  };\n\n  return (\n    <>\n      <Card\n        onMouseEnter={handleShowCheckbox}\n        onMouseLeave={handleHideCheckbox}\n        sx={{\n          p: 2.5,\n          width: 1,\n          maxWidth: 222,\n          boxShadow: 0,\n          bgcolor: 'background.default',\n          border: (theme) => `solid 1px ${theme.palette.divider}`,\n          ...((showCheckbox || selected) && {\n            borderColor: 'transparent',\n            bgcolor: 'background.paper',\n            boxShadow: (theme) => theme.customShadows.z20,\n          }),\n          ...sx,\n        }}\n        {...other}\n      >\n        <Stack direction=\"row\" alignItems=\"center\" sx={{ top: 8, right: 8, position: 'absolute' }}>\n          <Checkbox\n            color=\"warning\"\n            icon={<Iconify icon=\"eva:star-outline\" />}\n            checkedIcon={<Iconify icon=\"eva:star-fill\" />}\n            checked={favorited}\n            onChange={handleFavorite}\n            sx={{ p: 0.75 }}\n          />\n\n          <IconButton color={openPopover ? 'inherit' : 'default'} onClick={handleOpenPopover}>\n            <Iconify icon=\"eva:more-vertical-fill\" />\n          </IconButton>\n        </Stack>\n\n        {(showCheckbox || selected) && onSelect ? (\n          <Checkbox\n            checked={selected}\n            onClick={onSelect}\n            icon={<Iconify icon=\"eva:radio-button-off-fill\" />}\n            checkedIcon={<Iconify icon=\"eva:checkmark-circle-2-fill\" />}\n          />\n        ) : (\n          <Box\n            component=\"img\"\n            src=\"/assets/icons/files/ic_folder.svg\"\n            sx={{ width: 40, height: 40 }}\n          />\n        )}\n\n        <TextMaxLine variant=\"h6\" onClick={handleOpenDetails} sx={{ mt: 1, mb: 0.5 }}>\n          {folder.name}\n        </TextMaxLine>\n\n        <Stack\n          direction=\"row\"\n          alignItems=\"center\"\n          spacing={0.75}\n          sx={{ typography: 'caption', color: 'text.disabled' }}\n        >\n          <Box> {fData(folder.size)} </Box>\n\n          <Box sx={{ width: 2, height: 2, borderRadius: '50%', bgcolor: 'currentColor' }} />\n\n          <Box> {folder.totalFiles} files </Box>\n        </Stack>\n      </Card>\n\n      <MenuPopover\n        open={openPopover}\n        onClose={handleClosePopover}\n        arrow=\"right-top\"\n        sx={{ width: 160 }}\n      >\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleCopy();\n          }}\n        >\n          <Iconify icon=\"eva:link-2-fill\" />\n          Copy Link\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleOpenShare();\n          }}\n        >\n          <Iconify icon=\"eva:share-fill\" />\n          Share\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleOpenEditFolder();\n          }}\n        >\n          <Iconify icon=\"eva:edit-fill\" />\n          Edit\n        </MenuItem>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <MenuItem\n          onClick={() => {\n            handleOpenConfirm();\n            handleClosePopover();\n          }}\n          sx={{ color: 'error.main' }}\n        >\n          <Iconify icon=\"eva:trash-2-outline\" />\n          Delete\n        </MenuItem>\n      </MenuPopover>\n\n      <FileDetailsDrawer\n        item={folder}\n        favorited={favorited}\n        onFavorite={handleFavorite}\n        onCopyLink={handleCopy}\n        open={openDetails}\n        onClose={handleCloseDetails}\n        onDelete={() => {\n          handleCloseDetails();\n          onDelete();\n        }}\n      />\n\n      <FileShareDialog\n        open={openShare}\n        shared={folder.shared}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onCopyLink={handleCopy}\n        onClose={() => {\n          handleCloseShare();\n          setInviteEmail('');\n        }}\n      />\n\n      <FileNewFolderDialog\n        open={openEditFolder}\n        onClose={handleCloseEditFolder}\n        title=\"Edit Folder\"\n        onUpdate={() => {\n          handleCloseEditFolder();\n          setFolderName(folderName);\n          console.log('UPDATE FOLDER', folderName);\n        }}\n        folderName={folderName}\n        onChangeFolderName={(event) => setFolderName(event.target.value)}\n      />\n\n      <ConfirmDialog\n        open={openConfirm}\n        onClose={handleCloseConfirm}\n        title=\"Delete\"\n        content=\"Are you sure want to delete?\"\n        action={\n          <Button variant=\"contained\" color=\"error\" onClick={onDelete}>\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","// @mui\nimport { TextField, InputAdornment } from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  filterName: string;\n  onFilterName: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport default function FileFilterName({ filterName, onFilterName }: Props) {\n  return (\n    <TextField\n      size=\"small\"\n      value={filterName}\n      onChange={onFilterName}\n      placeholder=\"Search...\"\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n}\n","// @mui\nimport { Box, Button, ButtonProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends ButtonProps {\n  children?: React.ReactNode;\n  isSelected: boolean;\n}\n\nexport default function FileFilterButton({ children, isSelected, ...other }: Props) {\n  return (\n    <Button\n      variant=\"soft\"\n      color=\"inherit\"\n      sx={{\n        textTransform: 'unset',\n        color: 'text.secondary',\n        width: { xs: 1, md: 'auto' },\n        justifyContent: 'flex-start',\n        fontWeight: 'fontWeightMedium',\n        ...(isSelected && {\n          color: 'text.primary',\n        }),\n      }}\n      {...other}\n    >\n      {children}\n\n      <Box sx={{ flexGrow: 1 }} />\n    </Button>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Box, Stack, Button, Typography, CardActionArea } from '@mui/material';\n// components\nimport Label from '../../../../components/label';\nimport Iconify from '../../../../components/iconify';\nimport MenuPopover from '../../../../components/menu-popover';\nimport FileThumbnail from '../../../../components/file-thumbnail';\n//\nimport FileFilterButton from './FileFilterButton';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  filterType: string[];\n  optionsType: string[];\n  onReset: VoidFunction;\n  onFilterType: (type: string) => void;\n};\n\nexport default function FileFilterType({ optionsType, filterType, onFilterType, onReset }: Props) {\n  const [openPopover, setOpenPopover] = useState<HTMLElement | null>(null);\n\n  const handleOpenPopover = (event: React.MouseEvent<HTMLElement>) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  const isSelected = !!filterType.length;\n\n  const renderLabel = filterType.length ? filterType.slice(0, 2).join(',') : 'All type';\n\n  return (\n    <>\n      <FileFilterButton\n        isSelected={isSelected}\n        endIcon={<Iconify icon={openPopover ? 'eva:chevron-up-fill' : 'eva:chevron-down-fill'} />}\n        onClick={handleOpenPopover}\n      >\n        {renderLabel}\n        {filterType.length > 2 && (\n          <Label color=\"info\" sx={{ ml: 1 }}>\n            +{filterType.length - 2}\n          </Label>\n        )}\n      </FileFilterButton>\n\n      <MenuPopover open={openPopover} onClose={handleClosePopover} sx={{ p: 2.5 }}>\n        <Stack spacing={2.5}>\n          <Box\n            display=\"grid\"\n            gridTemplateColumns={{ xs: 'repeat(2, 1fr)', sm: 'repeat(4, 1fr)' }}\n            gap={1}\n          >\n            {optionsType.map((type) => {\n              const selected = filterType.includes(type);\n\n              return (\n                <CardActionArea\n                  key={type}\n                  onClick={() => onFilterType(type)}\n                  sx={{\n                    p: 1,\n                    borderRadius: 1,\n                    cursor: 'pointer',\n                    color: 'text.secondary',\n                    border: (theme) => `solid 1px ${alpha(theme.palette.grey[500], 0.12)}`,\n                    ...(selected && {\n                      color: 'text.primary',\n                      bgcolor: 'action.selected',\n                    }),\n                  }}\n                >\n                  <Stack spacing={0.5} direction=\"row\" alignItems=\"center\">\n                    <FileThumbnail file={type} />\n\n                    <Typography variant=\"body2\">{type}</Typography>\n                  </Stack>\n                </CardActionArea>\n              );\n            })}\n          </Box>\n\n          <Stack spacing={1} direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\">\n            <Button variant=\"outlined\" color=\"inherit\" onClick={onReset}>\n              Clear\n            </Button>\n\n            <Button variant=\"contained\" onClick={handleClosePopover}>\n              Apply\n            </Button>\n          </Stack>\n        </Stack>\n      </MenuPopover>\n    </>\n  );\n}\n","// @mui\nimport { styled, SxProps, Theme } from '@mui/material/styles';\nimport { Box, Typography, Checkbox, Portal } from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nconst StyledRoot = styled('div')(({ theme }) => ({\n  right: 24,\n  zIndex: 9,\n  bottom: 40,\n  display: 'flex',\n  position: 'fixed',\n  alignItems: 'center',\n  boxShadow: theme.customShadows.z20,\n  padding: theme.spacing(1.5, 1, 1.5, 2),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.text.primary,\n}));\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  action?: React.ReactNode;\n  numSelected: number;\n  rowCount: number;\n  selected?: string[];\n  onSelectAllItems: (checked: boolean) => void;\n  sx?: SxProps<Theme>;\n};\n\nexport default function FileActionSelected({\n  action,\n  selected,\n  rowCount,\n  numSelected,\n  onSelectAllItems,\n  sx,\n  ...other\n}: Props) {\n  return (\n    <Portal>\n      <StyledRoot sx={sx} {...other}>\n        <Checkbox\n          indeterminate={numSelected > 0 && numSelected < rowCount}\n          checked={rowCount > 0 && numSelected === rowCount}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            onSelectAllItems(event.target.checked)\n          }\n          icon={<Iconify icon=\"eva:radio-button-off-fill\" />}\n          checkedIcon={<Iconify icon=\"eva:checkmark-circle-2-fill\" />}\n          indeterminateIcon={<Iconify icon=\"eva:minus-circle-fill\" />}\n        />\n\n        {selected && (\n          <Typography\n            variant=\"subtitle2\"\n            sx={{\n              mr: 2,\n              color: (theme) => (theme.palette.mode === 'light' ? 'common.white' : 'grey.800'),\n            }}\n          >\n            {selected.length}\n            <Box component=\"span\" sx={{ ml: 0.5 }}>\n              items selected\n            </Box>\n          </Typography>\n        )}\n\n        {action && action}\n      </StyledRoot>\n    </Portal>\n  );\n}\n","// @mui\nimport { Table, Tooltip, TableBody, IconButton, TableContainer, Box } from '@mui/material';\n// @types\nimport { IFile } from '../../../../@types/file';\n// components\nimport Iconify from '../../../../components/iconify';\nimport {\n  emptyRows,\n  TableProps,\n  TableNoData,\n  TableEmptyRows,\n  TableHeadCustom,\n  TableSelectedAction,\n  TablePaginationCustom,\n} from '../../../../components/table';\n//\nimport FileTableRow from '../item/FileTableRow';\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Name', align: 'left' },\n  { id: 'size', label: 'Size', align: 'left', width: 120 },\n  { id: 'type', label: 'Type', align: 'center', width: 120 },\n  { id: 'dateModified', label: 'Modified', align: 'left', width: 160 },\n  { id: 'shared', label: 'Shared', align: 'right', width: 100 },\n  { id: '' },\n];\n\ntype Props = {\n  table: TableProps;\n  tableData: IFile[];\n  isNotFound: boolean;\n  dataFiltered: IFile[];\n  onOpenConfirm: VoidFunction;\n  onDeleteRow: (id: string) => void;\n};\n\nexport default function FileListView({\n  table,\n  tableData,\n  isNotFound,\n  onDeleteRow,\n  dataFiltered,\n  onOpenConfirm,\n}: Props) {\n  const {\n    dense,\n    page,\n    order,\n    orderBy,\n    rowsPerPage,\n    //\n    selected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangeDense,\n    onChangePage,\n    onChangeRowsPerPage,\n  } = table;\n\n  const denseHeight = dense ? 52 : 72;\n\n  return (\n    <>\n      <Box sx={{ px: 1, position: 'relative', borderRadius: 1.5, bgcolor: 'background.neutral' }}>\n        <TableSelectedAction\n          dense={dense}\n          numSelected={selected.length}\n          rowCount={tableData.length}\n          onSelectAllRows={(checked) =>\n            onSelectAllRows(\n              checked,\n              tableData.map((row) => row.id)\n            )\n          }\n          action={\n            <>\n              <Tooltip title=\"Share\">\n                <IconButton color=\"primary\">\n                  <Iconify icon=\"eva:share-fill\" />\n                </IconButton>\n              </Tooltip>\n\n              <Tooltip title=\"Delete\">\n                <IconButton color=\"primary\" onClick={onOpenConfirm}>\n                  <Iconify icon=\"eva:trash-2-outline\" />\n                </IconButton>\n              </Tooltip>\n            </>\n          }\n          sx={{\n            pl: 1,\n            pr: 2,\n            top: 8,\n            left: 8,\n            right: 8,\n            width: 'auto',\n            borderRadius: 1,\n          }}\n        />\n\n        <TableContainer>\n          <Table\n            size={dense ? 'small' : 'medium'}\n            sx={{\n              minWidth: 960,\n              borderCollapse: 'separate',\n              borderSpacing: '0 8px',\n              '& .MuiTableCell-head': {\n                boxShadow: 'none !important',\n              },\n            }}\n          >\n            <TableHeadCustom\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={tableData.length}\n              numSelected={selected.length}\n              onSort={onSort}\n              onSelectAllRows={(checked) =>\n                onSelectAllRows(\n                  checked,\n                  tableData.map((row) => row.id)\n                )\n              }\n              sx={{\n                '& .MuiTableCell-head': {\n                  bgcolor: 'transparent',\n                },\n              }}\n            />\n\n            <TableBody>\n              {dataFiltered\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => (\n                  <FileTableRow\n                    key={row.id}\n                    row={row}\n                    selected={selected.includes(row.id)}\n                    onSelectRow={() => onSelectRow(row.id)}\n                    onDeleteRow={() => onDeleteRow(row.id)}\n                  />\n                ))}\n\n              <TableEmptyRows\n                height={denseHeight}\n                emptyRows={emptyRows(page, rowsPerPage, tableData.length)}\n              />\n\n              <TableNoData isNotFound={isNotFound} />\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n\n      <TablePaginationCustom\n        count={dataFiltered.length}\n        page={page}\n        rowsPerPage={rowsPerPage}\n        onPageChange={onChangePage}\n        onRowsPerPageChange={onChangeRowsPerPage}\n        //\n        dense={dense}\n        onChangeDense={onChangeDense}\n        sx={{\n          '& .MuiTablePagination-root': { borderTop: 'none' },\n          '& .MuiFormControlLabel-root': { px: 0 },\n        }}\n      />\n    </>\n  );\n}\n","import { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Stack, Button, Typography, StackProps, IconButton } from '@mui/material';\n// components\nimport Iconify from '../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends StackProps {\n  title: string;\n  subTitle?: string;\n  link?: string;\n  onOpen?: VoidFunction;\n  collapse?: boolean;\n  onCollapse?: VoidFunction;\n}\n\nexport default function FilePanel({\n  title,\n  subTitle,\n  link,\n  onOpen,\n  collapse,\n  onCollapse,\n  sx,\n  ...other\n}: Props) {\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 3, ...sx }} {...other}>\n      <Stack flexGrow={1}>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1} flexGrow={1}>\n          <Typography variant=\"h6\"> {title} </Typography>\n\n          <IconButton\n            size=\"small\"\n            color=\"success\"\n            onClick={onOpen}\n            sx={{\n              p: 0,\n              width: 24,\n              height: 24,\n              color: 'common.white',\n              bgcolor: 'success.main',\n              '&:hover': {\n                bgcolor: 'success.main',\n              },\n            }}\n          >\n            <Iconify icon=\"eva:plus-fill\" />\n          </IconButton>\n        </Stack>\n\n        <Typography variant=\"body2\" sx={{ color: 'text.disabled', mt: 0.5 }}>\n          {subTitle}\n        </Typography>\n      </Stack>\n\n      {link && (\n        <Button\n          to={link}\n          component={RouterLink}\n          size=\"small\"\n          color=\"inherit\"\n          endIcon={<Iconify icon=\"eva:chevron-right-fill\" />}\n        >\n          View All\n        </Button>\n      )}\n\n      {onCollapse && (\n        <IconButton onClick={onCollapse}>\n          <Iconify icon={collapse ? 'eva:chevron-down-fill' : 'eva:chevron-up-fill'} />\n        </IconButton>\n      )}\n    </Stack>\n  );\n}\n","import { useState, useRef } from 'react';\n// @mui\nimport { Collapse, Box, Divider, Button } from '@mui/material';\n// @types\nimport { IFile } from '../../../../@types/file';\n// components\nimport Iconify from '../../../../components/iconify';\nimport { TableProps } from '../../../../components/table';\n//\nimport FilePanel from '../FilePanel';\nimport FileCard from '../item/FileCard';\nimport FileFolderCard from '../item/FileFolderCard';\nimport FileShareDialog from '../portal/FileShareDialog';\nimport FileActionSelected from '../portal/FileActionSelected';\nimport FileNewFolderDialog from '../portal/FileNewFolderDialog';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  table: TableProps;\n  data: IFile[];\n  dataFiltered: IFile[];\n  onOpenConfirm: VoidFunction;\n  onDeleteItem: (id: string) => void;\n};\n\nexport default function FileGridView({\n  table,\n  data,\n  dataFiltered,\n  onDeleteItem,\n  onOpenConfirm,\n}: Props) {\n  const { selected, onSelectRow: onSelectItem, onSelectAllRows: onSelectAllItems } = table;\n\n  const containerRef = useRef(null);\n\n  const [folderName, setFolderName] = useState('');\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const [openShare, setOpenShare] = useState(false);\n\n  const [collapseFiles, setCollapseFiles] = useState(false);\n\n  const [openNewFolder, setOpenNewFolder] = useState(false);\n\n  const [openUploadFile, setOpenUploadFile] = useState(false);\n\n  const [collapseFolders, setCollapseFolders] = useState(false);\n\n  const handleOpenShare = () => {\n    setOpenShare(true);\n  };\n\n  const handleCloseShare = () => {\n    setOpenShare(false);\n  };\n\n  const handleOpenNewFolder = () => {\n    setOpenNewFolder(true);\n  };\n\n  const handleCloseNewFolder = () => {\n    setOpenNewFolder(false);\n  };\n\n  const handleOpenUploadFile = () => {\n    setOpenUploadFile(true);\n  };\n\n  const handleCloseUploadFile = () => {\n    setOpenUploadFile(false);\n  };\n\n  const handleChangeInvite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInviteEmail(event.target.value);\n  };\n\n  return (\n    <>\n      <Box ref={containerRef}>\n        <FilePanel\n          title=\"Folders\"\n          subTitle={`${data.filter((item) => item.type === 'folder').length} folders`}\n          onOpen={handleOpenNewFolder}\n          collapse={collapseFolders}\n          onCollapse={() => setCollapseFolders(!collapseFolders)}\n        />\n\n        <Collapse in={!collapseFolders} unmountOnExit>\n          <Box\n            gap={3}\n            display=\"grid\"\n            gridTemplateColumns={{\n              xs: 'repeat(1, 1fr)',\n              sm: 'repeat(2, 1fr)',\n              md: 'repeat(3, 1fr)',\n              lg: 'repeat(4, 1fr)',\n            }}\n          >\n            {dataFiltered\n              .filter((i) => i.type === 'folder')\n              .map((folder) => (\n                <FileFolderCard\n                  key={folder.id}\n                  folder={folder}\n                  selected={selected.includes(folder.id)}\n                  onSelect={() => onSelectItem(folder.id)}\n                  onDelete={() => onDeleteItem(folder.id)}\n                  sx={{ maxWidth: 'auto' }}\n                />\n              ))}\n          </Box>\n        </Collapse>\n\n        <Divider sx={{ my: 5, borderStyle: 'dashed' }} />\n\n        <FilePanel\n          title=\"Files\"\n          subTitle={`${data.filter((item) => item.type !== 'folder').length} files`}\n          onOpen={handleOpenUploadFile}\n          collapse={collapseFiles}\n          onCollapse={() => setCollapseFiles(!collapseFiles)}\n        />\n\n        <Collapse in={!collapseFiles} unmountOnExit>\n          <Box\n            display=\"grid\"\n            gridTemplateColumns={{\n              xs: 'repeat(1, 1fr)',\n              sm: 'repeat(2, 1fr)',\n              md: 'repeat(3, 1fr)',\n              lg: 'repeat(4, 1fr)',\n            }}\n            gap={3}\n          >\n            {dataFiltered\n              .filter((i) => i.type !== 'folder')\n              .map((file) => (\n                <FileCard\n                  key={file.id}\n                  file={file}\n                  selected={selected.includes(file.id)}\n                  onSelect={() => onSelectItem(file.id)}\n                  onDelete={() => onDeleteItem(file.id)}\n                  sx={{ maxWidth: 'auto' }}\n                />\n              ))}\n          </Box>\n        </Collapse>\n\n        {!!selected?.length && (\n          <FileActionSelected\n            numSelected={selected.length}\n            rowCount={data.length}\n            selected={selected}\n            onSelectAllItems={(checked) =>\n              onSelectAllItems(\n                checked,\n                data.map((row) => row.id)\n              )\n            }\n            action={\n              <>\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  startIcon={<Iconify icon=\"eva:trash-2-outline\" />}\n                  onClick={onOpenConfirm}\n                  sx={{ mr: 1 }}\n                >\n                  Delete\n                </Button>\n\n                <Button\n                  color=\"inherit\"\n                  size=\"small\"\n                  variant=\"contained\"\n                  startIcon={<Iconify icon=\"eva:share-fill\" />}\n                  onClick={handleOpenShare}\n                  sx={{\n                    color: (theme) =>\n                      theme.palette.mode === 'light' ? 'grey.800' : 'common.white',\n                    bgcolor: (theme) =>\n                      theme.palette.mode === 'light' ? 'common.white' : 'grey.800',\n                    '&:hover': {\n                      color: (theme) =>\n                        theme.palette.mode === 'light' ? 'grey.800' : 'common.white',\n                      bgcolor: (theme) =>\n                        theme.palette.mode === 'light' ? 'common.white' : 'grey.800',\n                    },\n                  }}\n                >\n                  Share\n                </Button>\n              </>\n            }\n          />\n        )}\n      </Box>\n\n      <FileShareDialog\n        open={openShare}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onClose={() => {\n          handleCloseShare();\n          setInviteEmail('');\n        }}\n      />\n\n      <FileNewFolderDialog open={openUploadFile} onClose={handleCloseUploadFile} />\n\n      <FileNewFolderDialog\n        open={openNewFolder}\n        onClose={handleCloseNewFolder}\n        title=\"New Folder\"\n        onCreate={() => {\n          handleCloseNewFolder();\n          setFolderName('');\n          console.log('CREATE NEW FOLDER', folderName);\n        }}\n        folderName={folderName}\n        onChangeFolderName={(event) => setFolderName(event.target.value)}\n      />\n    </>\n  );\n}\n","// @mui\nimport { ToggleButton, ToggleButtonGroup, ToggleButtonGroupProps } from '@mui/material';\n// components\nimport Iconify from '../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends ToggleButtonGroupProps {\n  value: string;\n  onChange: (event: React.MouseEvent<HTMLElement>, newView: string | null) => void;\n}\n\nexport default function FileChangeViewButton({ value, onChange, ...other }: Props) {\n  return (\n    <ToggleButtonGroup\n      size=\"small\"\n      color=\"primary\"\n      value={value}\n      exclusive\n      onChange={onChange}\n      {...other}\n    >\n      <ToggleButton value=\"list\">\n        <Iconify icon=\"eva:list-fill\" />\n      </ToggleButton>\n\n      <ToggleButton value=\"grid\">\n        <Iconify icon=\"eva:grid-fill\" />\n      </ToggleButton>\n    </ToggleButtonGroup>\n  );\n}\n"],"names":["ConfirmDialog","title","content","action","open","onClose","other","Dialog","fullWidth","maxWidth","DialogTitle","sx","pb","DialogContent","typography","DialogActions","Button","variant","color","onClick","EmptyContent","description","img","Stack","alignItems","justifyContent","height","textAlign","p","theme","spacing","disabledEffect","alt","src","mb","Typography","gutterBottom","emptyRows","page","rowsPerPage","arrayLength","Math","max","descendingComparator","a","b","orderBy","getComparator","order","useTable","props","useState","defaultDense","dense","setDense","defaultOrderBy","setOrderBy","defaultOrder","setOrder","defaultCurrentPage","setPage","defaultRowsPerPage","setRowsPerPage","defaultSelected","selected","setSelected","onSort","useCallback","id","onSelectRow","selectedIndex","indexOf","newSelected","concat","slice","length","onSelectAllRows","checked","newSelecteds","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","value","console","log","onChangeDense","TableNoData","isNotFound","colSpan","TableEmptyRows","visuallyHidden","border","margin","padding","width","overflow","position","whiteSpace","clip","TableHeadCustom","rowCount","headLabel","numSelected","TableHead","Checkbox","indeterminate","onChange","map","headCell","align","sortDirection","minWidth","TableSortLabel","hideSortIcon","active","direction","textTransform","label","Box","TableSelectedAction","pl","pr","top","left","zIndex","bgcolor","ml","flexGrow","TablePaginationCustom","rowsPerPageOptions","TablePagination","component","FormControlLabel","control","Switch","py","md","useTypography","useTheme","breakpoints","useWidth","key","up","getFont","fontSize","remToPx","lineHeight","Number","fontWeight","letterSpacing","forwardRef","ref","asLink","line","persistent","children","styles","textOverflow","display","WebkitLineClamp","WebkitBoxOrient","Link","copiedText","setCopiedText","copy","text","navigator","clipboard","warn","writeText","useDoubleClick","click","doubleClick","timeout","clickTimeout","useRef","clearTimeout","current","detail","setTimeout","FileInvitedItem","person","permission","setPermission","openPopover","setOpenPopover","handleClosePopover","handleChangePermission","newPermission","ListItem","disableGutters","ListItemAvatar","Avatar","name","avatar","ListItemText","primary","secondary","Tooltip","email","primaryTypographyProps","noWrap","secondaryTypographyProps","size","endIcon","icon","currentTarget","flexShrink","MenuItem","Divider","borderStyle","FileShareDialog","shared","inviteEmail","onCopyLink","onChangeInvite","hasShared","TextField","placeholder","disabled","maxHeight","List","disablePadding","startIcon","FileDetailsDrawer","item","favorited","onFavorite","onDelete","url","type","dateModified","openShare","setOpenShare","toggleTags","setToggleTags","setInviteEmail","tags","setTags","toggleProperties","setToggleProperties","Drawer","anchor","BackdropProps","invisible","PaperProps","checkedIcon","imageView","file","imgSx","borderRadius","wordBreak","Panel","toggle","onToggle","Autocomplete","multiple","freeSolo","limitTags","options","option","newValue","filter","renderTags","getTagProps","index","Chip","renderInput","params","Row","fData","fDateTime","fileFormat","IconButton","mr","FileCard","onSelect","enqueueSnackbar","useSnackbar","useCopyToClipboard","showCheckbox","setShowCheckbox","openConfirm","setOpenConfirm","openDetails","setOpenDetails","isFavorited","setFavorited","handleFavorite","handleCloseDetails","handleCopy","Card","onMouseEnter","onMouseLeave","boxShadow","palette","divider","borderColor","customShadows","z20","mt","right","arrow","FileTableRow","row","onDeleteRow","handleClick","TableRow","TableCell","borderTopLeftRadius","borderBottomLeftRadius","onDoubleClick","cursor","fDate","AvatarGroup","borderTopRightRadius","borderBottomRightRadius","FileNewFolderDialog","onCreate","onUpdate","folderName","onChangeFolderName","files","setFiles","useEffect","handleDrop","acceptedFiles","newFiles","Object","assign","preview","URL","createObjectURL","dividers","pt","onDrop","onRemove","inputFile","filtered","FileFolderCard","folder","setFolderName","openEditFolder","setOpenEditFolder","handleCloseEditFolder","totalFiles","FileFilterName","filterName","onFilterName","InputProps","startAdornment","InputAdornment","FileFilterButton","isSelected","xs","FileFilterType","optionsType","filterType","onFilterType","onReset","renderLabel","join","gridTemplateColumns","sm","gap","includes","CardActionArea","alpha","grey","StyledRoot","styled","bottom","shape","backgroundColor","FileActionSelected","onSelectAllItems","Portal","indeterminateIcon","mode","TABLE_HEAD","FileListView","table","tableData","dataFiltered","onOpenConfirm","denseHeight","px","TableContainer","Table","borderCollapse","borderSpacing","TableBody","count","onPageChange","onRowsPerPageChange","borderTop","FilePanel","subTitle","link","onOpen","collapse","onCollapse","to","RouterLink","FileGridView","data","onDeleteItem","onSelectItem","containerRef","collapseFiles","setCollapseFiles","openNewFolder","setOpenNewFolder","openUploadFile","setOpenUploadFile","collapseFolders","setCollapseFolders","handleCloseNewFolder","Collapse","in","unmountOnExit","lg","i","my","FileChangeViewButton","ToggleButtonGroup","exclusive","ToggleButton"],"sourceRoot":""}