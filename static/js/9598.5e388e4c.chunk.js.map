{"version":3,"file":"static/js/9598.5e388e4c.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/LinkItem.tsx","components/custom-breadcrumbs/CustomBreadcrumbs.tsx","sections/@dashboard/service/ServiceForm.tsx","sections/@dashboard/user/UserNewEditForm.tsx","pages/dashboard/UserCreatePage.tsx"],"sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link } from '@mui/material';\n//\nimport { BreadcrumbsLinkProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  link: BreadcrumbsLinkProps;\n  activeLast?: boolean;\n  disabled: boolean;\n};\n\nexport default function BreadcrumbsLink({ link, activeLast, disabled }: Props) {\n  const { name, href, icon } = link;\n\n  const styles = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    color: 'text.primary',\n    ...(disabled &&\n      !activeLast && {\n        cursor: 'default',\n        pointerEvents: 'none',\n        color: 'text.disabled',\n      }),\n  };\n\n  const renderContent = (\n    <>\n      {icon && (\n        <Box\n          component=\"span\"\n          sx={{\n            mr: 1,\n            display: 'inherit',\n            '& svg': { width: 20, height: 20 },\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n\n      {name}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link component={RouterLink} to={href} sx={styles}>\n        {renderContent}\n      </Link>\n    );\n  }\n\n  return <Box sx={styles}> {renderContent} </Box>;\n}\n","// @mui\nimport { Box, Link, Stack, Typography, Breadcrumbs } from '@mui/material';\n//\nimport { CustomBreadcrumbsProps } from './types';\nimport LinkItem from './LinkItem';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink,\n  activeLast,\n  sx,\n  ...other\n}: CustomBreadcrumbsProps) {\n  const lastLink = links[links.length - 1].name;\n\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          {/* HEADING */}\n          {heading && (\n            <Typography variant=\"h4\" gutterBottom>\n              {heading}\n            </Typography>\n          )}\n\n          {/* BREADCRUMBS */}\n          {!!links.length && (\n            <Breadcrumbs separator={<Separator />} {...other}>\n              {links.map((link) => (\n                <LinkItem\n                  key={link.name || ''}\n                  link={link}\n                  activeLast={activeLast}\n                  disabled={link.name === lastLink}\n                />\n              ))}\n            </Breadcrumbs>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\n      </Stack>\n\n      {/* MORE LINK */}\n      {!!moreLink && (\n        <Box sx={{ mt: 2 }}>\n          {moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Separator() {\n  return (\n    <Box\n      component=\"span\"\n      sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\n    />\n  );\n}\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport { useState, useEffect, useCallback, useRef, MouseEventHandler, MouseEvent, ChangeEvent, SetStateAction } from 'react';\nimport * as Yup from 'yup';\nimport merge from 'lodash/merge';\nimport { isBefore } from 'date-fns';\nimport { DateInput, EventInput } from '@fullcalendar/common';\n// form\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { Box, Stack, Button, Tooltip, TextField, IconButton, DialogActions, MenuItem, InputAdornment } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { MobileDateTimePicker } from '@mui/x-date-pickers';\n\n// redux\nimport { useDispatch } from 'src/redux/store';\n\n// calendar\n// import { getServices } from 'src/redux/slices/calendar';\n\nimport { defaultSettings } from '../../../components/settings/config-setting';\n\n// hooks\nimport useLocalStorage from '../../../hooks/useLocalStorage';\n// @types\nimport { ICalendarEvent } from '../../../@types/calendar';\n// components\nimport Iconify from '../../../components/iconify';\nimport { ColorSinglePicker } from '../../../components/color-utils';\nimport FormProvider, { RHFTextField, RHFSwitch, RHFSelect } from '../../../components/hook-form';\nimport './styles.css';\n\n// ----------------------------------------------------------------------\n\ntype FormValuesProps = ICalendarEvent;\n\ntype Props = {\n  service: null | undefined | EventInput;\n  onCancel: VoidFunction;\n  onDeleteService: VoidFunction;\n  onCreateUpdateService: (newService: ServiceSubmit) => void;\n};\n\ntype ServiceSubmit = {\n    id: string | number | null | undefined,\n    name: string,\n    subServices?: Array<ServiceSubmit>,\n    team: Array<Team>,\n    status: string\n}\n\ntype Patient = {\n  age: string,\n  birthDate: string,\n  doctors: [],\n  fullName: string,\n  gender: string,\n  id: number,\n  identification: string,\n  lastUpdate: string,\n  phoneNumber: string\n};\n\ntype Category = {\n  id: number,\n  name: string,\n  subCategories: []\n}\n\ntype Service = {\n  id: number,\n  name: string,\n  subServices: [],\n  team: [],\n  status: string\n}\n\ntype Act = {\n  id: number,\n  name: string,\n  service: Service,\n  reference: string,\n  defaultPrice: number,\n  basePrice: number,\n  type: string,\n  category: Category,\n  providers: Array<Provider>\n}\n\ntype Provider = {\n    id: number | undefined,\n    user: {\n        id: number,\n        username: string,\n        name: string,\n        nameAr: string,\n        status: string,\n        userRole: string\n    },\n    basePrice: number,\n    priceVariations: [\n        {\n            id: number,\n            name: string,\n            price: number\n        }\n    ]\n}\n\ntype EventSubmit = {\n  id?: number | string | null,\n  patient: {\n    id: number\n  },\n  status: string,\n  date: DateInput | null,\n  selectedFee: {\n    provider?: {\n      id: number \n    },\n    fee: {\n      id: number\n    },\n    price: string\n  }\n}\n\ntype Appointment = {\n  id: number | string,\n  patient: Patient,\n  status: string,\n  date: string | Date | null,\n  createdAt: string,\n  selectedFee: {\n      id: number,\n      provider: {\n          id: number,\n          username: string,\n          name: string,\n          nameAr: string,\n          status: string,\n          userRole: string\n      },\n      fee: Act,\n      price: number,\n      priceVariation: {\n          id: number,\n          name: string,\n          price: number\n      }\n  },\n  title?: string\n}\n\ntype Team = {\n    id?: number | string | null,\n    username?: string,\n    name: string,\n    nameAr?: string,\n    status?: string,\n    userRole?: string\n}\n\n// ----------------------------------------------------------------------\n\n// const getInitialValues = (\n//   event: EventInput | null | undefined,\n//   // range: { start: Date } | null\n// ) => {\n//   const initialEvent: FormValuesProps = {\n//     title: '',\n//     description: '',\n//     textColor: '#1890FF',\n//   };\n\n//   if (event || range) {\n//     return merge({}, initialEvent, event);\n//   }\n\n//   return initialEvent;\n// };\n\n// ----------------------------------------------------------------------\n\nexport default function ServiceForm({\n  service,\n  onCreateUpdateService,\n  onDeleteService,\n  onCancel,\n}: Props) {\n  const hasServiceData = !!service;\n  \n  \n  const [settings, setSettings] = useLocalStorage('settings', defaultSettings);\n\n  const dispatch = useDispatch();\n  \n  const span = document.querySelector('.span-custom');\n\n  const [sousServiceName, setSousServiceName]= useState('')\n\n  const [serviceStatus, setServiceStatus]= useState('ACTIVE')\n\n  const [filterMajor, setFilterMajor] = useState('')\n\n  const [filterChefService, setFilterChefService] = useState('')\n\n  const [value, setValue] = useState('')\n\n  const [isSousServiceOpen, setIsSousServiceOpen] = useState(false)\n\n  const optionsMajor = [\n    {\n        id: 1,\n        name: 'Major 1'\n    },\n    {\n        id: 2,\n        name: 'Major 2'\n    },\n    {\n        id: 3,\n        name: 'Major 3'\n    }\n  ]\n\n  const optionsChefService = [\n    {\n        id: 1,\n        name:'Chef Service 1'\n    },\n    {\n        id: 2,\n        name: 'Chef Service 2'\n    },\n    {\n        id: 3,\n        name: 'Chef Service 3'\n    }\n  ]\n\n  const [isActs, setIsActs] = useState(true)\n\n  const [isPersonelles, setIsPersonelles] = useState(false)\n  \n  const [isStocks, setIsStocks] = useState(false)\n\n  const [isService, setIsService] = useState(true)\n\n  const [isRotate, setIsRotate] = useState(false)\n\n  const [isSousServiceForm, setIsSousServiceForm] = useState(false)\n\n  const [major, setMajor] = useState<Team>({\n    username: '',\n    name: '',\n    nameAr: '',\n    status: '',\n    userRole: ''\n  })\n\n  const [chefService, setChefService] = useState<Team>({\n    username: '',\n    name: '',\n    nameAr: '',\n    status: '',\n    userRole: ''\n  })\n\n  const EventSchema = Yup.object().shape({\n    // title: Yup.string().max(255).required('Title is required'),\n    // description: Yup.string().max(5000),\n  });\n\n  const methods = useForm({\n    resolver: yupResolver(EventSchema),\n    // defaultValues: getInitialValues(service),\n  });\n\n  const {\n    reset,\n    watch,\n    control,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const values = watch();\n  \n  \n  const getAllServices = useCallback( async () => {\n    try{\n      // let count = 0\n    //   if(event){\n    //     console.log(event)\n    //     setSearchP({...event?.patient})\n    //     setAct(event?.selectedFee?.fee.name)\n    //     setActObj({...event.selectedFee.fee})\n    //     setFilterStatus(event.status)\n    //     setPriceVariation(event?.selectedFee.price.toString())\n    //     provider.user.id = event?.selectedFee?.provider.id\n    //   }\n    //   const data = await onGetServices();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    //   setOptionsService([...data])\n    } catch(err){\n      console.log(err)\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n//   const loadOne = useCallback(() => {\n//     if(event && patientSelected === false && closePatient === false){\n//       setPatientSelected(true)\n//       setIsFee(true)\n//       setValue(event.selectedFee.price.toString())\n//       if(settings.themeMode === 'light') {\n//         span?.classList.add('move-top-light')\n//       }\n//       else {\n//         span?.classList.add('move-top-dark')\n//       }\n//     }\n//   }, [event, patientSelected, closePatient, settings.themeMode, span])\n  \n  useEffect(() => {\n    // getAllServices();\n    // loadOne()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  // useEffect(() => {\n  //   console.log(event);\n  // }, [event]);\n\n  const onSubmit = async () => {\n    try {\n      const newService: ServiceSubmit = {\n        id: service?.id,\n        name: sousServiceName,\n        team: [\n            major,\n            chefService\n        ],\n        status: serviceStatus\n    }\n      \n      console.log(newService)\n      onCreateUpdateService(newService);\n      onCancel();\n      reset();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  \n\n  const onFilterType = (e: React.ChangeEvent<HTMLInputElement>) => {\n    // setFilterType(e.target.value);\n  };\n\n  const onFilterActObj = (e: React.ChangeEvent<HTMLInputElement>) => {\n    // setFilterFee(e.target.value);\n  };\n\n  const onFilterStatus = (e: React.ChangeEvent<HTMLInputElement>) => {\n    // setFilterStatus(e.target.value);\n  };\n\n  const onFilterData = (e: React.ChangeEvent<HTMLInputElement>) => {\n    // e.stopPropagation();\n    // setFilterData(e.target.value);\n    // setIsProvider(true);\n  };\n\n//   const onFilterPriceVariation = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     // e.stopPropagation();\n//     setFilterPriceVariation(e.target.value);\n//   };\n\n//   const OnSearchPatientsClick = (e: React.MouseEvent<HTMLInputElement>) => {\n//     const ev = (e.target as HTMLInputElement);\n//     if(ev.value !== '') setIsPatientOpen(true)\n//   };\n\n//   const onActObjClick = (e: React.MouseEvent<HTMLDivElement>, p: Provider) => {\n//     // setValue(e.currentTarget.innerText)\n//     setIsPriceVariation(!isPriceVariation)\n//     // setIsFeeOpen(false)\n//     setIsProvider(false)\n//     // e.stopPropagation();\n//     // setIsActObj(true);\n//     // console.log(isPriceVariation)\n//     setProvider({...p})\n//   };\n\n  // useEffect(() => console.log('UseEffect says:',isPriceVariation));\n\nconst preventPropagation = (e:React.MouseEvent<HTMLElement>) => {\n    e.stopPropagation();\n    e.preventDefault()\n    console.log(e.isPropagationStopped())\n}\n\nconst onFilterMajor = (e: React.MouseEvent<Element>, m: Team) => {\n    setFilterMajor(m.name);\n    setMajor({...m})\n};\n\nconst onFilterChefService = (e: React.MouseEvent<Element>, c: Team) => {\n    setFilterChefService(c.name);\n    setChefService({...c})\n};\n\nconst onNext = (e: React.MouseEvent<Element>) => {\n    setIsService(false);\n};\n\nfunction handleSections(e: MouseEvent<HTMLButtonElement>, n: number): void {\n    if(n === 1){\n        setIsActs(true)\n        setIsPersonelles(false)\n        setIsStocks(false);\n    }\n\n    else if(n === 2){\n        setIsActs(false)\n        setIsPersonelles(true)\n        setIsStocks(false);\n    }\n    else if(n === 3){\n        setIsActs(false)\n        setIsPersonelles(false)\n        setIsStocks(true);\n    }\n}\n\nconst handleCustomSelect = (e: MouseEvent<HTMLDivElement>) =>{\n    setIsSousServiceOpen(!isSousServiceOpen)\n    const customSelect = document.querySelector('.custom-select')\n    span?.classList.add('move-top')\n    if(settings.themeMode === 'light') {\n      customSelect?.classList.add('custom-select-border-light')\n      span?.classList.add('move-top-light')\n    }\n    else {\n      customSelect?.classList.add('custom-select-border-dark')\n      span?.classList.add('move-top-dark')\n    }\n\n    setIsRotate(!isRotate)\n}\n\nconst handleSousServiceName = (e: ChangeEvent<HTMLInputElement>) => {\n    setSousServiceName(e.target.value)\n}\n\n\ndocument.addEventListener(\"mousedown\", (e) => {\n    const f = document.querySelector('.fee')\n    if (!f?.contains(e.target as HTMLElement)) {\n      setIsSousServiceOpen(false)\n      const v = document.querySelector('.value') as HTMLElement\n      const customSelect = document.querySelector('.custom-select')\n      // console.log(v.innerText)\n      if(!v?.innerText){\n      span?.classList.remove('move-top')\n      span?.classList.remove('move-top-dark')\n      }\n      // console.log(span?.classList)\n      if(settings.themeMode === 'light') {\n        customSelect?.classList.remove('custom-select-border-light')\n        if(value === '') span?.classList.remove('move-top-light')\n      }\n      else {\n        customSelect?.classList.remove('custom-select-border-dark')\n        if(value === '') span?.classList.remove('move-top-dark')\n      }\n  \n      setIsRotate(false)\n      }\n  });\n\n\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n        { (isService === true) ? (\n            <Stack spacing={3} sx={{ px: 3 }}>\n                <div className=\"flex\" >\n                    <div className='w-full'>\n                        <RHFTextField name=\"name\" \n                            value={sousServiceName}\n                            onChange={handleSousServiceName}\n                            label=\"Sous Service name\" />\n                    </div>\n                </div>\n\n                <div className=\"flex\" >\n                    <TextField\n                        fullWidth\n                        select\n                        label=\"Chef Sous Service\"\n                        value={filterChefService}\n                        >\n                            {optionsChefService.map((option) => (\n                            <MenuItem\n                                key={option.id}\n                                value={option.name}\n                                onClick={(e) => onFilterChefService(e, option)}\n                                sx={{\n                                mx: 1,\n                                borderRadius: 0.75,\n                                typography: 'body2',\n                                textTransform: 'capitalize',\n                                }}\n                            >\n                                {option.name}\n                            </MenuItem>\n                            ))}\n                    </TextField>\n                    <TextField\n                        fullWidth\n                        select\n                        label=\"Major Sous Service\"\n                        value={filterMajor}\n                        >\n                            {optionsMajor.map((option) => (\n                            <MenuItem\n                                key={option.id}\n                                value={option.name}\n                                onClick={(e) => onFilterMajor(e, option)}\n                                sx={{\n                                mx: 1,\n                                borderRadius: 0.75,\n                                typography: 'body2',\n                                textTransform: 'capitalize',\n                                }}\n                            >\n                                {option.name}\n                            </MenuItem>\n                            ))}\n                    </TextField>\n                </div>\n            </Stack>\n        ):(\n        <div className='container'>\n            <div className=\"left\">\n                <button type=\"button\" className='btn-routes' onClick={(e) => handleSections(e,1)}>Gestion Acts</button>\n                <button type=\"button\" className='btn-routes'  onClick={(e) => handleSections(e,2)}>Gestion Personelles</button>\n                <button type=\"button\" className='btn-routes'  onClick={(e) => handleSections(e,3)}>Gestion stocks</button>\n            </div>\n            <div className=\"right\">\n                {(isActs === true) &&\n                    <div>\n                        Acts\n                    </div>\n                }\n\n                {(isPersonelles === true) &&\n                    <div>\n                        Personelles\n                    </div>\n                }\n\n                {(isStocks === true) &&\n                    <div>\n                        Stocks\n                    </div>\n                }\n\n            </div>\n        </div>\n        )}\n\n      {(isService === true) ? (\n        <DialogActions  onClick={onSubmit}>\n            <LoadingButton type=\"button\" variant=\"contained\" loading={isSubmitting}>\n                Add\n            </LoadingButton>\n        </DialogActions>\n      ):\n        <DialogActions>\n            {hasServiceData && (\n            <Tooltip title=\"Delete Service\">\n                <IconButton onClick={onDeleteService}>\n                <Iconify icon=\"eva:trash-2-outline\" />\n                </IconButton>\n            </Tooltip>\n            )}\n            \n            <Box sx={{ flexGrow: 1 }} />\n\n            <Button variant=\"outlined\" color=\"inherit\" onClick={onCancel}>\n            Cancel\n            </Button>\n\n            <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n            {hasServiceData ? 'Update' : 'Add'}\n            </LoadingButton>\n        </DialogActions>\n      }\n    </FormProvider>\n  );\n}\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport * as Yup from 'yup';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// form\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { LoadingButton } from '@mui/lab';\nimport { Box, Card, Grid, Stack, Switch, Typography, FormControlLabel, TextField, MenuItem, InputAdornment, Dialog, DialogTitle } from '@mui/material';\nimport Iconify from 'src/components/iconify';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { onOpenModal,\n  onCloseModal,\n  createService,\n  updateService,\n  deleteService,\n  getServicesPage\n} from 'src/redux/slices/service';\n// utils\nimport { fData } from '../../../utils/formatNumber';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// @types\nimport { IUserAccountGeneral } from '../../../@types/user';\n// assets\nimport { countries } from '../../../assets/data';\n// components\nimport Label from '../../../components/label';\nimport { CustomFile } from '../../../components/upload';\nimport { useSnackbar } from '../../../components/snackbar';\nimport FormProvider, {\n  RHFSelect,\n  RHFSwitch,\n  RHFTextField,\n  RHFUploadAvatar,\n} from '../../../components/hook-form';\nimport './styles.css';\nimport ServiceForm from '../service/ServiceForm';\n// redux\nimport { useDispatch, useSelector } from '../../../redux/store';\n\n// ----------------------------------------------------------------------\n\ninterface FormValuesProps extends Omit<IUserAccountGeneral, 'avatarUrl'> {\n  avatarUrl: CustomFile | string | null;\n}\n\ntype Props = {\n  isEdit?: boolean;\n  service?: ServiceSubmit;\n};\n\ntype ServiceSubmit = {\n  id: string | number | null | undefined,\n  name: string,\n  subServices?: Array<ServiceSubmit>,\n  team: Array<Team>,\n  status: string\n}\n\ntype Team = {\n  id?: number | string | null,\n  username?: string,\n  name: string,\n  nameAr?: string,\n  status?: string,\n  userRole?: string\n}\n\nexport default function UserNewEditForm({ isEdit = false, service }: Props) {\n  const navigate = useNavigate();\n  \n  const dispatch = useDispatch();\n\n  const { services, openModal, selectedRange, selectedServiceId } = useSelector(\n    (state) => state.service\n  );\n\n  const selectedService = useSelector(() => {\n    if (selectedServiceId) {\n      return services.find((s) => s.id?.toString() === selectedServiceId?.toString());\n    }\n\n    return null;\n  });\n  const [filterMajor, setFilterMajor] = useState('')\n\n  const [filterChefService, setFilterChefService] = useState('')\n\n  const [serviceName, setServiceName]= useState('')\n\n  const [serviceStatus, setServiceStatus]= useState('ACTIVE')\n\n  const [major, setMajor] = useState<Team>({\n    username: '',\n    name: '',\n    nameAr: '',\n    status: '',\n    userRole: ''\n  })\n\n  const [chefService, setChefService] = useState<Team>({\n    username: '',\n    name: '',\n    nameAr: '',\n    status: '',\n    userRole: ''\n  })\n  \n  const optionsMajor = [\n    {\n        id: 1,\n        name: 'Major 1'\n    },\n    {\n        id: 2,\n        name: 'Major 2'\n    },\n    {\n        id: 3,\n        name: 'Major 3'\n    }\n  ]\n\n  const optionsChefService = [\n    {\n        id: 1,\n        name:'Chef Service 1'\n    },\n    {\n        id: 2,\n        name: 'Chef Service 2'\n    },\n    {\n        id: 3,\n        name: 'Chef Service 3'\n    }\n  ]\n\n  const [rows, setRows] = useState<Array<ServiceSubmit>>([])\n\n  const columns = [\n    'sous services',\n  ]\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const NewUserSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required'),\n    // phoneNumber: Yup.string().required('Phone number is required'),\n    // address: Yup.string().required('Address is required'),\n    // country: Yup.string().required('Country is required'),\n    // company: Yup.string().required('Company is required'),\n    // state: Yup.string().required('State is required'),\n    // city: Yup.string().required('City is required'),\n    // role: Yup.string().required('Role is required'),\n    // avatarUrl: Yup.string().required('Avatar is required').nullable(true),\n  });\n\n  const defaultValues = useMemo(\n    () => ({\n      name: service?.name || '',\n      // email: currentUser?.email || '',\n      // phoneNumber: currentUser?.phoneNumber || '',\n      // address: currentUser?.address || '',\n      // country: currentUser?.country || '',\n      // state: currentUser?.state || '',\n      // city: currentUser?.city || '',\n      // zipCode: currentUser?.zipCode || '',\n      // avatarUrl: currentUser?.avatarUrl || null,\n      // isVerified: currentUser?.isVerified || true,\n      // status: currentUser?.status,\n      // company: currentUser?.company || '',\n      // role: currentUser?.role || '',\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [service]\n  );\n\n  const methods = useForm<FormValuesProps>({\n    resolver: yupResolver(NewUserSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    watch,\n    control,\n    setValue,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const values = watch();\n\n  useEffect(() => {\n    if (isEdit && service) {\n      reset(defaultValues);\n    }\n    if (!isEdit) {\n      reset(defaultValues);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isEdit, service]);\n\n  const onSubmit = async (data: FormValuesProps) => {\n    try {\n      const newService: ServiceSubmit = {\n        id: service?.id,\n        name: serviceName,\n        subServices: rows,\n        team: [\n            major,\n            chefService\n        ],\n        status: serviceStatus\n    }\n      \n      console.log(newService)\n      createService(newService);\n      reset();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      const file = acceptedFiles[0];\n\n      const newFile = Object.assign(file, {\n        preview: URL.createObjectURL(file),\n      });\n\n      if (file) {\n        setValue('avatarUrl', newFile, { shouldValidate: true });\n      }\n    },\n    [setValue]\n  );\n\n  const handleOpenModal = () => {\n    dispatch(onOpenModal());\n  };\n\n  const handleCloseModal = () => {\n    dispatch(onCloseModal());\n  };\n\n  const handleCreateUpdateService = (newService: ServiceSubmit) => {\n    newService.id = selectedServiceId\n    if (selectedServiceId) {\n      dispatch(updateService(newService));\n      enqueueSnackbar('Update success!');\n    } else {\n      // dispatch(createService(newService));\n      console.log(newService)\n      setRows([...rows, newService])\n      enqueueSnackbar('Create success!');\n    }\n  };\n\n  const handleDeleteService = async () => {\n    try {\n      if (selectedServiceId) {\n        dispatch(deleteService(selectedServiceId));\n        dispatch(getServicesPage())\n        handleCloseModal();\n        enqueueSnackbar('Delete success!');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const onFilterMajor = (e: React.MouseEvent<Element>, m: Team) => {\n    setFilterMajor(m.name);\n    setMajor({...m})\n  };\n\n  const onFilterChefService = (e: React.MouseEvent<Element>, c: Team) => {\n    setFilterChefService(c.name);\n    setChefService({...c})\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n          <Card sx={{ p: 3 }}>\n            <Stack spacing={3} sx={{ px: 3 }}>\n              <RHFTextField name=\"name\" label=\"Service Name\" />\n              <div className=\"flex\" >\n                <TextField\n                    fullWidth\n                    select\n                    label=\"Chef Service\"\n                    value={filterChefService}\n                    >\n                        {optionsChefService.map((option) => (\n                        <MenuItem\n                            key={option.id}\n                            value={option.name}\n                            onClick={(e) => onFilterChefService(e, option)}\n                            sx={{\n                            mx: 1,\n                            borderRadius: 0.75,\n                            typography: 'body2',\n                            textTransform: 'capitalize',\n                            }}\n                        >\n                            {option.name}\n                        </MenuItem>\n                        ))}\n                  </TextField>\n                <TextField\n                    fullWidth\n                    select\n                    label=\"Major Service\"\n                    value={filterMajor}\n                    >\n                        {optionsMajor.map((option) => (\n                        <MenuItem\n                            key={option.id}\n                            value={option.name}\n                            onClick={(e) => onFilterMajor(e,option)}\n                            sx={{\n                            mx: 1,\n                            borderRadius: 0.75,\n                            typography: 'body2',\n                            textTransform: 'capitalize',\n                            }}\n                        >\n                            {option.name}\n                        </MenuItem>\n                        ))}\n                </TextField>\n              </div>\n\n              <div className='w-full relative' style={{textAlign: 'right', marginBottom: '.5rem'}}>\n                <span className='plus-sign'onClick={handleOpenModal}>+</span>\n              </div>\n\n              <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650, borderBottom: 1 }} aria-label=\"simple table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Sous Services</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  {(rows.length > 0) ?\n                    (<TableBody>\n                      {rows.map((row) => (\n                        <TableRow\n                          key={row.name}\n                          sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                        >\n                          <TableCell component=\"th\" scope=\"row\">\n                            {row.name}\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>) : (\n                      <div className='w-full' style={{textAlign: 'center'}}>\n                        <h2>Vide</h2>\n                      </div>\n                    )\n                  }\n                </Table>\n              </TableContainer>\n\n              <Dialog fullWidth maxWidth=\"md\" open={openModal} onClose={handleCloseModal}>\n                <DialogTitle>Add Sous Service</DialogTitle>\n\n                <ServiceForm\n                  service={selectedService}\n                  onCancel={handleCloseModal}\n                  onCreateUpdateService={handleCreateUpdateService}\n                  onDeleteService={handleDeleteService}\n                />\n              </Dialog>\n\n              <Stack alignItems=\"flex-end\" sx={{ mt: 3 }}>\n                <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                  {!isEdit ? 'Create Service' : 'Save Changes'}\n                </LoadingButton>\n              </Stack>\n            </Stack>\n          </Card>\n    </FormProvider>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// @mui\nimport { Container } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// components\nimport { useSettingsContext } from '../../components/settings';\nimport CustomBreadcrumbs from '../../components/custom-breadcrumbs';\n// sections\nimport UserNewEditForm from '../../sections/@dashboard/user/UserNewEditForm';\n\n// ----------------------------------------------------------------------\n\nexport default function UserCreatePage() {\n  const { themeStretch } = useSettingsContext();\n\n  return (\n    <>\n      <Helmet>\n        <title> User: Create a new user | Minimal UI</title>\n      </Helmet>\n\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <CustomBreadcrumbs\n          heading=\"Create a new user\"\n          links={[\n            {\n              name: 'Dashboard',\n              href: PATH_DASHBOARD.root,\n            },\n            {\n              name: 'User',\n              href: PATH_DASHBOARD.user.list,\n            },\n            { name: 'New user' },\n          ]}\n        />\n        <UserNewEditForm />\n      </Container>\n    </>\n  );\n}\n"],"names":["BreadcrumbsLink","link","activeLast","disabled","name","href","icon","styles","display","alignItems","color","cursor","pointerEvents","renderContent","Box","component","sx","mr","width","height","Link","RouterLink","to","CustomBreadcrumbs","links","action","heading","moreLink","other","lastLink","length","mb","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","flexShrink","mt","noWrap","target","rel","borderRadius","bgcolor","ServiceForm","service","onCreateUpdateService","onDeleteService","onCancel","hasServiceData","useLocalStorage","defaultSettings","settings","span","useDispatch","document","querySelector","useState","sousServiceName","setSousServiceName","serviceStatus","filterMajor","setFilterMajor","filterChefService","setFilterChefService","value","setIsSousServiceOpen","isActs","setIsActs","isPersonelles","setIsPersonelles","isStocks","setIsStocks","isService","setIsRotate","username","nameAr","status","userRole","major","setMajor","chefService","setChefService","EventSchema","Yup","shape","methods","useForm","resolver","yupResolver","reset","watch","handleSubmit","control","isSubmitting","formState","useCallback","useEffect","onSubmit","newService","id","team","console","log","error","handleSections","e","n","addEventListener","f","contains","v","customSelect","innerText","classList","remove","themeMode","spacing","px","className","onChange","label","TextField","fullWidth","select","option","MenuItem","onClick","c","mx","typography","textTransform","m","type","DialogActions","LoadingButton","loading","Tooltip","title","IconButton","Button","UserNewEditForm","isEdit","dispatch","useNavigate","useSelector","state","services","openModal","selectedServiceId","selectedRange","selectedService","find","s","toString","serviceName","rows","setRows","enqueueSnackbar","useSnackbar","NewUserSchema","required","defaultValues","useMemo","setValue","data","subServices","createService","handleCloseModal","acceptedFiles","file","newFile","Object","assign","preview","URL","createObjectURL","shouldValidate","onCloseModal","handleDeleteService","deleteService","getServicesPage","Card","p","style","textAlign","marginBottom","onOpenModal","TableContainer","Paper","Table","minWidth","borderBottom","TableHead","TableRow","TableCell","TableBody","row","border","scope","Dialog","maxWidth","open","onClose","DialogTitle","updateService","UserCreatePage","themeStretch","useSettingsContext","Container","PATH_DASHBOARD"],"sourceRoot":""}