{"version":3,"file":"static/js/1686.d2e4104a.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/LinkItem.tsx","components/custom-breadcrumbs/CustomBreadcrumbs.tsx","pages/dashboard/PermissionDeniedPage.tsx","../node_modules/@mui/material/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/esm/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/esm/Breadcrumbs/Breadcrumbs.js","../node_modules/@mui/material/esm/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/esm/CardHeader/CardHeader.js","../node_modules/@mui/material/esm/Card/cardClasses.js","../node_modules/@mui/material/esm/Card/Card.js","../node_modules/@mui/material/esm/ToggleButtonGroup/isValueSelected.js","../node_modules/@mui/material/esm/ToggleButtonGroup/toggleButtonGroupClasses.js","../node_modules/@mui/material/esm/ToggleButtonGroup/ToggleButtonGroup.js","../node_modules/@mui/material/esm/ToggleButton/toggleButtonClasses.js","../node_modules/@mui/material/esm/ToggleButton/ToggleButton.js"],"sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link } from '@mui/material';\n//\nimport { BreadcrumbsLinkProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  link: BreadcrumbsLinkProps;\n  activeLast?: boolean;\n  disabled: boolean;\n};\n\nexport default function BreadcrumbsLink({ link, activeLast, disabled }: Props) {\n  const { name, href, icon } = link;\n\n  const styles = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    color: 'text.primary',\n    ...(disabled &&\n      !activeLast && {\n        cursor: 'default',\n        pointerEvents: 'none',\n        color: 'text.disabled',\n      }),\n  };\n\n  const renderContent = (\n    <>\n      {icon && (\n        <Box\n          component=\"span\"\n          sx={{\n            mr: 1,\n            display: 'inherit',\n            '& svg': { width: 20, height: 20 },\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n\n      {name}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link component={RouterLink} to={href} sx={styles}>\n        {renderContent}\n      </Link>\n    );\n  }\n\n  return <Box sx={styles}> {renderContent} </Box>;\n}\n","// @mui\nimport { Box, Link, Stack, Typography, Breadcrumbs } from '@mui/material';\n//\nimport { CustomBreadcrumbsProps } from './types';\nimport LinkItem from './LinkItem';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink,\n  activeLast,\n  sx,\n  ...other\n}: CustomBreadcrumbsProps) {\n  const lastLink = links[links.length - 1].name;\n\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          {/* HEADING */}\n          {heading && (\n            <Typography variant=\"h4\" gutterBottom>\n              {heading}\n            </Typography>\n          )}\n\n          {/* BREADCRUMBS */}\n          {!!links.length && (\n            <Breadcrumbs separator={<Separator />} {...other}>\n              {links.map((link) => (\n                <LinkItem\n                  key={link.name || ''}\n                  link={link}\n                  activeLast={activeLast}\n                  disabled={link.name === lastLink}\n                />\n              ))}\n            </Breadcrumbs>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\n      </Stack>\n\n      {/* MORE LINK */}\n      {!!moreLink && (\n        <Box sx={{ mt: 2 }}>\n          {moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Separator() {\n  return (\n    <Box\n      component=\"span\"\n      sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\n    />\n  );\n}\n","import { Helmet } from 'react-helmet-async';\nimport { useState } from 'react';\n// @mui\nimport {\n  Box,\n  Card,\n  Container,\n  Typography,\n  CardHeader,\n  ToggleButton,\n  ToggleButtonGroup,\n} from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// components\nimport { useSettingsContext } from '../../components/settings';\nimport CustomBreadcrumbs from '../../components/custom-breadcrumbs';\n// auth\nimport RoleBasedGuard from '../../auth/RoleBasedGuard';\n\n// ----------------------------------------------------------------------\n\nexport default function PermissionDeniedPage() {\n  const { themeStretch } = useSettingsContext();\n\n  const [role, setRole] = useState('admin');\n\n  const handleChangeRole = (event: React.MouseEvent<HTMLElement>, newRole: string | null) => {\n    if (newRole !== null) {\n      setRole(newRole);\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title> Other Cases: Permission Denied | Minimal UI</title>\n      </Helmet>\n\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <CustomBreadcrumbs\n          heading=\"Permission Denied\"\n          links={[\n            {\n              name: 'Dashboard',\n              href: PATH_DASHBOARD.root,\n            },\n            {\n              name: 'Permission Denied',\n            },\n          ]}\n        />\n\n        <ToggleButtonGroup\n          exclusive\n          value={role}\n          onChange={handleChangeRole}\n          color=\"primary\"\n          sx={{ mb: 5 }}\n        >\n          <ToggleButton value=\"admin\" aria-label=\"admin role\">\n            isAdmin\n          </ToggleButton>\n\n          <ToggleButton value=\"user\" aria-label=\"user role\">\n            isUser\n          </ToggleButton>\n        </ToggleButtonGroup>\n\n        <RoleBasedGuard hasContent roles={[role]}>\n          <Box gap={3} display=\"grid\" gridTemplateColumns=\"repeat(2, 1fr)\">\n            {[...Array(8)].map((_, index) => (\n              <Card key={index}>\n                <CardHeader title={`Card ${index + 1}`} subheader=\"Proin viverra ligula\" />\n\n                <Typography sx={{ p: 3, color: 'text.secondary' }}>\n                  Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. In enim justo,\n                  rhoncus ut, imperdiet a, venenatis vitae, justo. Vestibulum fringilla pede sit\n                  amet augue.\n                </Typography>\n              </Card>\n            ))}\n          </Box>\n        </RoleBasedGuard>\n      </Container>\n    </>\n  );\n}\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n\n/**\n * @ignore - internal component.\n */\nfunction BreadcrumbCollapsed(props) {\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        ownerState: ownerState\n      })\n    }))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n    return acc;\n  }, []);\n}\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n  const {\n      children,\n      className,\n      component = 'nav',\n      expandText = 'Show path',\n      itemsAfterCollapse = 1,\n      itemsBeforeCollapse = 1,\n      maxItems = 8,\n      separator = '/'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [expanded, setExpanded] = React.useState(false);\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n  const classes = useUtilityClasses(ownerState);\n  const listRef = React.useRef(null);\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true);\n\n      // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n      if (focusable) {\n        focusable.focus();\n      }\n    };\n\n    // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n      return allItems;\n    }\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n      action,\n      avatar,\n      className,\n      component = 'div',\n      disableTypography = false,\n      subheader: subheaderProp,\n      subheaderTypographyProps,\n      title: titleProp,\n      titleTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n  let subheader = subheaderProp;\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n  return value === candidate;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getToggleButtonGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButtonGroup', slot);\n}\nconst toggleButtonGroupClasses = generateUtilityClasses('MuiToggleButtonGroup', ['root', 'selected', 'vertical', 'disabled', 'grouped', 'groupedHorizontal', 'groupedVertical']);\nexport default toggleButtonGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"exclusive\", \"fullWidth\", \"onChange\", \"orientation\", \"size\", \"value\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport isValueSelected from './isValueSelected';\nimport toggleButtonGroupClasses, { getToggleButtonGroupUtilityClass } from './toggleButtonGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    fullWidth,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation === 'vertical' && 'vertical', fullWidth && 'fullWidth'],\n    grouped: ['grouped', `grouped${capitalize(orientation)}`, disabled && 'disabled']\n  };\n  return composeClasses(slots, getToggleButtonGroupUtilityClass, classes);\n};\nconst ToggleButtonGroupRoot = styled('div', {\n  name: 'MuiToggleButtonGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles.grouped\n    }, {\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.orientation)}`]\n    }, styles.root, ownerState.orientation === 'vertical' && styles.vertical, ownerState.fullWidth && styles.fullWidth];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-flex',\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.orientation === 'vertical' && {\n  flexDirection: 'column'\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${toggleButtonGroupClasses.grouped}`]: _extends({}, ownerState.orientation === 'horizontal' ? {\n    '&:not(:first-of-type)': {\n      marginLeft: -1,\n      borderLeft: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderLeft: 0,\n      marginLeft: 0\n    }\n  } : {\n    '&:not(:first-of-type)': {\n      marginTop: -1,\n      borderTop: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderTop: 0,\n      marginTop: 0\n    }\n  })\n}));\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButtonGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButtonGroup'\n  });\n  const {\n      children,\n      className,\n      color = 'standard',\n      disabled = false,\n      exclusive = false,\n      fullWidth = false,\n      onChange,\n      orientation = 'horizontal',\n      size = 'medium',\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disabled,\n    fullWidth,\n    orientation,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n    const index = value && value.indexOf(buttonValue);\n    let newValue;\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n    onChange(event, newValue);\n  };\n  const handleExclusiveChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n  return /*#__PURE__*/_jsx(ToggleButtonGroupRoot, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: React.Children.map(children, child => {\n      if (! /*#__PURE__*/React.isValidElement(child)) {\n        return null;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (isFragment(child)) {\n          console.error([\"MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n        }\n      }\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(classes.grouped, child.props.className),\n        onChange: exclusive ? handleExclusiveChange : handleChange,\n        selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n        size: child.props.size || size,\n        fullWidth,\n        color: child.props.color || color,\n        disabled: child.props.disabled || disabled\n      });\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the button when it is selected.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   * @default false\n   */\n  exclusive: PropTypes.bool,\n  /**\n   * If `true`, the button group will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default ToggleButtonGroup;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getToggleButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButton', slot);\n}\nconst toggleButtonClasses = generateUtilityClasses('MuiToggleButton', ['root', 'disabled', 'selected', 'standard', 'primary', 'secondary', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default toggleButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"fullWidth\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"];\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '../styles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport toggleButtonClasses, { getToggleButtonUtilityClass } from './toggleButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fullWidth,\n    selected,\n    disabled,\n    size,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', disabled && 'disabled', fullWidth && 'fullWidth', `size${capitalize(size)}`, color]\n  };\n  return composeClasses(slots, getToggleButtonUtilityClass, classes);\n};\nconst ToggleButtonRoot = styled(ButtonBase, {\n  name: 'MuiToggleButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  let selectedColor = ownerState.color === 'standard' ? theme.palette.text.primary : theme.palette[ownerState.color].main;\n  let selectedColorChannel;\n  if (theme.vars) {\n    selectedColor = ownerState.color === 'standard' ? theme.vars.palette.text.primary : theme.vars.palette[ownerState.color].main;\n    selectedColorChannel = ownerState.color === 'standard' ? theme.vars.palette.text.primaryChannel : theme.vars.palette[ownerState.color].mainChannel;\n  }\n  return _extends({}, theme.typography.button, {\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    padding: 11,\n    border: `1px solid ${(theme.vars || theme).palette.divider}`,\n    color: (theme.vars || theme).palette.action.active\n  }, ownerState.fullWidth && {\n    width: '100%'\n  }, {\n    [`&.${toggleButtonClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.action.disabled,\n      border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`\n    },\n    '&:hover': {\n      textDecoration: 'none',\n      // Reset on mouse devices\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${toggleButtonClasses.selected}`]: {\n      color: selectedColor,\n      backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity),\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(selectedColor, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity)\n        }\n      }\n    }\n  }, ownerState.size === 'small' && {\n    padding: 7,\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && {\n    padding: 15,\n    fontSize: theme.typography.pxToRem(15)\n  });\n});\nconst ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButton'\n  });\n  const {\n      children,\n      className,\n      color = 'standard',\n      disabled = false,\n      disableFocusRipple = false,\n      fullWidth = false,\n      onChange,\n      onClick,\n      selected,\n      size = 'medium',\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disabled,\n    disableFocusRipple,\n    fullWidth,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = event => {\n    if (onClick) {\n      onClick(event, value);\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n  return /*#__PURE__*/_jsx(ToggleButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    ownerState: ownerState,\n    \"aria-pressed\": selected\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the button when it is in an active state.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Callback fired when the state changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the button is clicked.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onClick: PropTypes.func,\n  /**\n   * If `true`, the button is rendered in an active state.\n   */\n  selected: PropTypes.bool,\n  /**\n   * The size of the component.\n   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes /* @typescript-to-proptypes-ignore */.any.isRequired\n} : void 0;\nexport default ToggleButton;"],"names":["BreadcrumbsLink","link","activeLast","disabled","name","href","icon","styles","display","alignItems","color","cursor","pointerEvents","renderContent","Box","component","sx","mr","width","height","Link","RouterLink","to","CustomBreadcrumbs","links","action","heading","moreLink","other","lastLink","length","mb","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","flexShrink","mt","noWrap","target","rel","borderRadius","bgcolor","PermissionDeniedPage","themeStretch","useSettingsContext","useState","role","setRole","maxWidth","PATH_DASHBOARD","exclusive","value","onChange","event","newRole","hasContent","roles","gap","gridTemplateColumns","Array","_","index","title","subheader","p","createSvgIcon","_jsx","d","BreadcrumbCollapsedButton","styled","ButtonBase","theme","_extends","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","props","ownerState","children","focusRipple","getBreadcrumbsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","BreadcrumbsRoot","overridesResolver","breadcrumbsClasses","li","root","BreadcrumbsOl","ol","flexWrap","padding","margin","listStyle","BreadcrumbsSeparator","userSelect","insertSeparators","items","className","reduce","acc","current","concat","push","React","inProps","ref","useThemeProps","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","_objectWithoutPropertiesLoose","expanded","setExpanded","classes","composeClasses","useUtilityClasses","listRef","allItems","filter","child","clsx","slice","BreadcrumbCollapsed","onClick","focusable","querySelector","focus","renderItemsBeforeAndAfter","getCardHeaderUtilityClass","CardHeaderRoot","cardHeaderClasses","CardHeaderAvatar","avatar","flex","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","content","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","type","_jsxs","as","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation","undefined","isValueSelected","candidate","isArray","indexOf","getToggleButtonGroupUtilityClass","ToggleButtonGroupRoot","toggleButtonGroupClasses","grouped","capitalize","orientation","vertical","fullWidth","vars","shape","flexDirection","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderTop","size","slots","handleChange","buttonValue","newValue","splice","handleExclusiveChange","selected","getToggleButtonUtilityClass","ToggleButtonRoot","selectedColorChannel","selectedColor","text","primary","main","primaryChannel","mainChannel","typography","button","border","divider","active","toggleButtonClasses","disabledBackground","textDecoration","hoverOpacity","alpha","selectedOpacity","fontSize","pxToRem","disableFocusRipple","defaultPrevented"],"sourceRoot":""}