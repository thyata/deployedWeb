{"version":3,"file":"static/js/4287.a075a8e0.chunk.js","mappings":"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","sources":["pages/dashboard/gestionnaire_effectif/level_3/points_des_vaccinations/List/PersonnelListPage.tsx"],"sourcesContent":["import { Helmet } from 'react-helmet-async';\nimport { useState, useEffect } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Tab,\n  Tabs,\n  Card,\n  Table,\n  Stack,\n  Button,\n  Tooltip,\n  Divider,\n  TableBody,\n  Container,\n  IconButton,\n  TableContainer,\n  Link,\n} from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from 'src/routes/paths';\n// _mock_\nimport { _invoices } from 'src/_mock/arrays';\n// @types\nimport { Effet, Supervisor } from 'src/@types/Campain';\n// components\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\nimport ConfirmDialog from 'src/components/confirm-dialog';\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\nimport { useSettingsContext } from 'src/components/settings';\nimport {\n  useTable,\n  emptyRows,\n  TableNoData,\n  TableEmptyRows,\n  TableHeadCustom,\n  TableSelectedAction,\n  TablePaginationCustom,\n} from 'src/components/table';\n// sections\nimport { StaffTableRow } from 'src/sections/@dashboard/gestion_effectif/Staff/list';\nimport RoleTableRow from 'src/sections/@dashboard/paramettre/roleTableRow';\nimport { supervisorList } from 'src/assets/data/gestionData';\nimport SupervisorTableRow from 'src/sections/@dashboard/paramettre/supervisorTableRow';\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'id', label: 'id', align: 'left' },\n  { id: 'nom', label: 'Nom', align: 'left' },\n  { id: 'username', label: 'Utilisateur', align: 'left' },\n  { id: 'telephone', label: 'Telephone', align: 'left' },\n  { id: '' },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function PersonnelListPage() {\n  const theme = useTheme();\n\n  const { themeStretch } = useSettingsContext();\n\n  const navigate = useNavigate();\n\n  const {\n    dense,\n    page,\n    order,\n    orderBy,\n    rowsPerPage,\n    setPage,\n    //\n    selected,\n    onSelectRow,\n    //\n    onSort,\n    onChangeDense,\n    onChangePage,\n    onChangeRowsPerPage,\n  } = useTable({ defaultOrderBy: 'createDate' });\n\n  const [tableData, setTableData] = useState<Supervisor[]>([]);\n\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  const [myRowsPerPage, setMyRowsPerPage] = useState(5);\n\n  const [myPage, setMyPage] = useState(1);\n\n  useEffect(() => {\n    setTableData(supervisorList);\n    console.log('row par page', myRowsPerPage);\n    console.log('page ', myPage);\n  }, [myRowsPerPage, myPage]);\n\n  const denseHeight = dense ? 56 : 76;\n\n  const isNotFound = false;\n\n  const TABS = [{ value: 'all', label: 'All', color: 'info', count: 1 }] as const;\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const handleDeleteRow = (id: string) => {};\n\n  const handleEditRow = (id: string) => {};\n\n  const handleViewRow = (id: string) => {};\n\n  return (\n    <>\n      <Helmet>\n        <title> Liste des personnels | Minimal UI</title>\n      </Helmet>\n\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <CustomBreadcrumbs\n          heading=\"Liste des personnels\"\n          links={[\n            {\n              name: 'Tableaux de bord',\n              href: '',\n            },\n            {\n              name: 'Points de vaccinations',\n              href: PATH_DASHBOARD.gestionnaireEffectif.PointHomePage,\n            },\n            {\n              name: 'Liste des personnels',\n            },\n          ]}\n        />\n\n        <Card>\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\n            <TableSelectedAction\n              dense={dense}\n              numSelected={selected.length}\n              rowCount={1}\n              onSelectAllRows={() => null}\n              action={\n                <Stack direction=\"row\">\n                  <Tooltip title=\"Sent\">\n                    <IconButton color=\"primary\">\n                      <Iconify icon=\"ic:round-send\" />\n                    </IconButton>\n                  </Tooltip>\n\n                  <Tooltip title=\"Download\">\n                    <IconButton color=\"primary\">\n                      <Iconify icon=\"eva:download-outline\" />\n                    </IconButton>\n                  </Tooltip>\n\n                  <Tooltip title=\"Print\">\n                    <IconButton color=\"primary\">\n                      <Iconify icon=\"eva:printer-fill\" />\n                    </IconButton>\n                  </Tooltip>\n\n                  <Tooltip title=\"Delete\">\n                    <IconButton color=\"primary\" onClick={handleOpenConfirm}>\n                      <Iconify icon=\"eva:trash-2-outline\" />\n                    </IconButton>\n                  </Tooltip>\n                </Stack>\n              }\n            />\n\n            <Scrollbar>\n              <Table size={dense ? 'small' : 'medium'} sx={{ minWidth: 800 }}>\n                <TableHeadCustom\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={1}\n                  numSelected={selected.length}\n                  onSort={onSort}\n                  onSelectAllRows={() => null}\n                />\n\n                <TableBody>\n                  {tableData\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row) => (\n                      <SupervisorTableRow\n                        key={row.id}\n                        row={row}\n                        selected={selected.includes(row.id.toString())}\n                        onSelectRow={() => onSelectRow(row.id.toString())}\n                        onViewRow={() => handleViewRow(row.id.toString())}\n                        onEditRow={() => handleEditRow(row.id.toString())}\n                        onDeleteRow={() => handleDeleteRow(row.id.toString())}\n                      />\n                    ))}\n\n                  <TableEmptyRows\n                    height={denseHeight}\n                    emptyRows={emptyRows(page, rowsPerPage, tableData.length)}\n                  />\n\n                  <TableNoData isNotFound={isNotFound} />\n                </TableBody>\n              </Table>\n            </Scrollbar>\n          </TableContainer>\n\n          <TablePaginationCustom\n            count={1}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            onPageChange={onChangePage}\n            onRowsPerPageChange={onChangeRowsPerPage}\n            //\n            dense={dense}\n            onChangeDense={onChangeDense}\n          />\n        </Card>\n      </Container>\n\n      <ConfirmDialog\n        open={openConfirm}\n        onClose={handleCloseConfirm}\n        title=\"Delete\"\n        content={\n          <>\n            Êtes-vous sûr que vous souhaitez supprimer <strong> {selected.length} </strong> ?\n          </>\n        }\n        action={\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            onClick={() => {\n              // handleDeleteRows(selected);\n              handleCloseConfirm();\n            }}\n          >\n            Supprimer\n          </Button>\n        }\n      />\n    </>\n  );\n}\n// ----------------------------------------------------------------------\n"],"names":["TABLE_HEAD","id","label","align","PersonnelListPage","useTheme","themeStretch","useSettingsContext","useNavigate","useTable","defaultOrderBy","dense","page","order","orderBy","rowsPerPage","selected","setPage","onSelectRow","onSort","onChangeDense","onChangePage","onChangeRowsPerPage","useState","tableData","setTableData","openConfirm","setOpenConfirm","myRowsPerPage","myPage","useEffect","supervisorList","console","log","denseHeight","handleCloseConfirm","maxWidth","heading","links","name","href","PATH_DASHBOARD","sx","position","overflow","numSelected","length","rowCount","onSelectAllRows","action","direction","title","color","icon","onClick","size","minWidth","headLabel","slice","map","row","includes","toString","onViewRow","onEditRow","onDeleteRow","height","emptyRows","isNotFound","count","onPageChange","onRowsPerPageChange","open","onClose","content","variant"],"sourceRoot":""}