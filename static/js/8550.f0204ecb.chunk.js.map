{"version":3,"file":"static/js/8550.f0204ecb.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/LinkItem.tsx","components/custom-breadcrumbs/CustomBreadcrumbs.tsx","components/date-range-picker/useDateRangePicker.ts","components/date-range-picker/DateRangePicker.tsx","sections/_examples/mui/pickers/PickerDate.tsx","sections/_examples/mui/pickers/PickerTime.tsx","sections/_examples/mui/pickers/PickerDateTime.tsx","sections/_examples/mui/pickers/PickerDateRange.tsx","pages/components/mui/MUIPickersPage.tsx","sections/_examples/Block.tsx"],"sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link } from '@mui/material';\n//\nimport { BreadcrumbsLinkProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  link: BreadcrumbsLinkProps;\n  activeLast?: boolean;\n  disabled: boolean;\n};\n\nexport default function BreadcrumbsLink({ link, activeLast, disabled }: Props) {\n  const { name, href, icon } = link;\n\n  const styles = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    color: 'text.primary',\n    ...(disabled &&\n      !activeLast && {\n        cursor: 'default',\n        pointerEvents: 'none',\n        color: 'text.disabled',\n      }),\n  };\n\n  const renderContent = (\n    <>\n      {icon && (\n        <Box\n          component=\"span\"\n          sx={{\n            mr: 1,\n            display: 'inherit',\n            '& svg': { width: 20, height: 20 },\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n\n      {name}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link component={RouterLink} to={href} sx={styles}>\n        {renderContent}\n      </Link>\n    );\n  }\n\n  return <Box sx={styles}> {renderContent} </Box>;\n}\n","// @mui\nimport { Box, Link, Stack, Typography, Breadcrumbs } from '@mui/material';\n//\nimport { CustomBreadcrumbsProps } from './types';\nimport LinkItem from './LinkItem';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink,\n  activeLast,\n  sx,\n  ...other\n}: CustomBreadcrumbsProps) {\n  const lastLink = links[links.length - 1].name;\n\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          {/* HEADING */}\n          {heading && (\n            <Typography variant=\"h4\" gutterBottom>\n              {heading}\n            </Typography>\n          )}\n\n          {/* BREADCRUMBS */}\n          {!!links.length && (\n            <Breadcrumbs separator={<Separator />} {...other}>\n              {links.map((link) => (\n                <LinkItem\n                  key={link.name || ''}\n                  link={link}\n                  activeLast={activeLast}\n                  disabled={link.name === lastLink}\n                />\n              ))}\n            </Breadcrumbs>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\n      </Stack>\n\n      {/* MORE LINK */}\n      {!!moreLink && (\n        <Box sx={{ mt: 2 }}>\n          {moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Separator() {\n  return (\n    <Box\n      component=\"span\"\n      sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\n    />\n  );\n}\n","import { useState } from 'react';\nimport { isSameDay, isSameMonth, getYear, isBefore } from 'date-fns';\n// utils\nimport { fDate } from '../../utils/formatTime';\n//\nimport { DateRangePickerProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype ReturnType = DateRangePickerProps;\n\nexport default function useDateRangePicker(start: Date | null, end: Date | null): ReturnType {\n  const [open, setOpen] = useState(false);\n\n  const [endDate, setEndDate] = useState(end);\n\n  const [startDate, setStartDate] = useState(start);\n\n  const isError =\n    (startDate && endDate && isBefore(new Date(endDate), new Date(startDate))) || false;\n\n  const currentYear = new Date().getFullYear();\n\n  const startDateYear = startDate ? getYear(startDate) : null;\n\n  const endDateYear = endDate ? getYear(endDate) : null;\n\n  const isCurrentYear = currentYear === startDateYear && currentYear === endDateYear;\n\n  const isSameDays =\n    startDate && endDate ? isSameDay(new Date(startDate), new Date(endDate)) : false;\n\n  const isSameMonths =\n    startDate && endDate ? isSameMonth(new Date(startDate), new Date(endDate)) : false;\n\n  const standardLabel = `${fDate(startDate)} - ${fDate(endDate)}`;\n\n  const getShortLabel = () => {\n    if (isCurrentYear) {\n      if (isSameMonths) {\n        if (isSameDays) {\n          return fDate(endDate, 'dd MMM yy');\n        }\n        return `${fDate(startDate, 'dd')} - ${fDate(endDate, 'dd MMM yy')}`;\n      }\n      return `${fDate(startDate, 'dd MMM')} - ${fDate(endDate, 'dd MMM yy')}`;\n    }\n    return `${fDate(startDate, 'dd MMM yy')} - ${fDate(endDate, 'dd MMM yy')}`;\n  };\n\n  const onChangeStartDate = (newValue: Date | null) => {\n    setStartDate(newValue);\n  };\n\n  const onChangeEndDate = (newValue: Date | null) => {\n    if (isError) {\n      setEndDate(null);\n    }\n    setEndDate(newValue);\n  };\n\n  const onReset = () => {\n    setStartDate(null);\n    setEndDate(null);\n  };\n\n  return {\n    startDate,\n    endDate,\n    onChangeStartDate,\n    onChangeEndDate,\n    //\n    open,\n    onOpen: () => setOpen(true),\n    onClose: () => setOpen(false),\n    onReset,\n    //\n    isSelected: !!startDate && !!endDate,\n    isError,\n    //\n    label: standardLabel || '',\n    shortLabel: getShortLabel() || '',\n    //\n    setStartDate,\n    setEndDate,\n  };\n}\n","// @mui\nimport {\n  Paper,\n  Stack,\n  Dialog,\n  Button,\n  TextField,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n  FormHelperText,\n} from '@mui/material';\nimport { DatePicker, CalendarPicker } from '@mui/x-date-pickers';\n// hooks\nimport useResponsive from '../../hooks/useResponsive';\n//\nimport { DateRangePickerProps } from './types';\n\n// ----------------------------------------------------------------------\n\nexport default function DateRangePicker({\n  title = 'Select date range',\n  variant = 'input',\n  //\n  startDate,\n  endDate,\n  //\n  onChangeStartDate,\n  onChangeEndDate,\n  //\n  open,\n  onClose,\n  //\n  isError,\n}: DateRangePickerProps) {\n  const isDesktop = useResponsive('up', 'md');\n\n  const isCalendarView = variant === 'calendar';\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth={isCalendarView ? false : 'xs'}\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: {\n          ...(isCalendarView && {\n            maxWidth: 720,\n          }),\n        },\n      }}\n    >\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\n\n      <DialogContent\n        sx={{\n          ...(isCalendarView &&\n            isDesktop && {\n              overflow: 'unset',\n            }),\n        }}\n      >\n        <Stack\n          spacing={isCalendarView ? 3 : 2}\n          direction={isCalendarView && isDesktop ? 'row' : 'column'}\n          justifyContent=\"center\"\n          sx={{\n            pt: 1,\n            '& .MuiCalendarPicker-root': {\n              ...(!isDesktop && {\n                width: 'auto',\n              }),\n            },\n          }}\n        >\n          {isCalendarView ? (\n            <>\n              <Paper\n                variant=\"outlined\"\n                sx={{ borderRadius: 2, borderColor: 'divider', borderStyle: 'dashed' }}\n              >\n                <CalendarPicker date={startDate} onChange={onChangeStartDate} />\n              </Paper>\n\n              <Paper\n                variant=\"outlined\"\n                sx={{ borderRadius: 2, borderColor: 'divider', borderStyle: 'dashed' }}\n              >\n                <CalendarPicker date={endDate} onChange={onChangeEndDate} />\n              </Paper>\n            </>\n          ) : (\n            <>\n              <DatePicker\n                label=\"Start date\"\n                value={startDate}\n                onChange={onChangeStartDate}\n                renderInput={(params) => <TextField {...params} />}\n              />\n\n              <DatePicker\n                label=\"End date\"\n                value={endDate}\n                onChange={onChangeEndDate}\n                renderInput={(params) => <TextField {...params} />}\n              />\n            </>\n          )}\n        </Stack>\n\n        {isError && (\n          <FormHelperText error sx={{ px: 2 }}>\n            End date must be later than start date\n          </FormHelperText>\n        )}\n      </DialogContent>\n\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Cancel\n        </Button>\n\n        <Button disabled={isError} variant=\"contained\" onClick={onClose}>\n          Apply\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { useState } from 'react';\nimport isWeekend from 'date-fns/isWeekend';\n// @mui\nimport { TextField } from '@mui/material';\nimport { Masonry } from '@mui/lab';\nimport {\n  DatePicker,\n  StaticDatePicker,\n  MobileDatePicker,\n  DesktopDatePicker,\n} from '@mui/x-date-pickers';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nexport default function PickerDate() {\n  const [value, setValue] = useState<Date | null>(new Date());\n\n  return (\n    <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\n      <Block title=\"Basic\">\n        <DesktopDatePicker\n          label=\"For desktop\"\n          value={value}\n          minDate={new Date('2017-01-01')}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField fullWidth {...params} margin=\"normal\" />}\n        />\n\n        <MobileDatePicker\n          orientation=\"portrait\"\n          label=\"For mobile\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField fullWidth {...params} margin=\"normal\" />}\n        />\n      </Block>\n\n      <Block title=\"Static mode\">\n        <StaticDatePicker<Date>\n          orientation=\"landscape\"\n          openTo=\"day\"\n          value={value}\n          shouldDisableDate={isWeekend}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} />}\n        />\n      </Block>\n\n      <Block title=\"Views playground\">\n        <DatePicker\n          views={['year']}\n          label=\"Year only\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => (\n            <TextField {...params} fullWidth margin=\"normal\" helperText={null} />\n          )}\n        />\n        <DatePicker\n          views={['year', 'month']}\n          label=\"Year and Month\"\n          minDate={new Date('2012-03-01')}\n          maxDate={new Date('2023-06-01')}\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => (\n            <TextField {...params} fullWidth margin=\"normal\" helperText={null} />\n          )}\n        />\n        <DatePicker\n          openTo=\"year\"\n          views={['year', 'month', 'day']}\n          label=\"Year, month and date\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => (\n            <TextField {...params} fullWidth margin=\"normal\" helperText={null} />\n          )}\n        />\n        <DatePicker\n          views={['day', 'month', 'year']}\n          label=\"Invert the order of views\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => (\n            <TextField {...params} fullWidth margin=\"normal\" helperText={null} />\n          )}\n        />\n        <DatePicker\n          views={['day']}\n          label=\"Just date\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => (\n            <TextField {...params} fullWidth margin=\"normal\" helperText={null} />\n          )}\n        />\n      </Block>\n    </Masonry>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport { TextField, Stack } from '@mui/material';\nimport { Masonry } from '@mui/lab';\nimport {\n  TimePicker,\n  MobileTimePicker,\n  StaticTimePicker,\n  DesktopTimePicker,\n} from '@mui/x-date-pickers';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nexport default function PickerTime() {\n  const [value, setValue] = useState<Date | null>(new Date());\n\n  return (\n    <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\n      <Block title=\"Basic\">\n        <TimePicker\n          label=\"12 hours\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField fullWidth {...params} margin=\"normal\" />}\n        />\n\n        <TimePicker\n          ampm={false}\n          label=\"24 hours\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField fullWidth {...params} margin=\"normal\" />}\n        />\n      </Block>\n\n      <Block title=\"Responsiveness\">\n        <MobileTimePicker\n          orientation=\"portrait\"\n          label=\"For mobile\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} fullWidth margin=\"normal\" />}\n        />\n\n        <DesktopTimePicker\n          label=\"For desktop\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} margin=\"normal\" fullWidth />}\n        />\n\n        <TimePicker\n          value={value}\n          onChange={setValue}\n          renderInput={(params) => <TextField {...params} margin=\"normal\" fullWidth />}\n        />\n      </Block>\n\n      <Block title=\"Static mode\">\n        <Stack spacing={3}>\n          <StaticTimePicker\n            orientation=\"portrait\"\n            displayStaticWrapperAs=\"mobile\"\n            value={value}\n            onChange={(newValue) => {\n              setValue(newValue);\n            }}\n            renderInput={(params) => <TextField {...params} />}\n          />\n\n          <StaticTimePicker\n            ampm\n            orientation=\"landscape\"\n            openTo=\"minutes\"\n            value={value}\n            onChange={(newValue) => {\n              setValue(newValue);\n            }}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </Stack>\n      </Block>\n    </Masonry>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport { TextField, Stack } from '@mui/material';\nimport { DateTimePicker, MobileDateTimePicker, DesktopDateTimePicker } from '@mui/x-date-pickers';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nexport default function PickerDateTime() {\n  const [value, setValue] = useState<Date | null>(new Date());\n\n  const [valueResponsive, setValueResponsive] = useState<Date | null>(\n    new Date('2018-01-01T00:00:00.000Z')\n  );\n\n  return (\n    <Stack spacing={3} direction={{ xs: 'column', md: 'row' }}>\n      <Block title=\"Basic\">\n        <DateTimePicker\n          renderInput={(props) => <TextField {...props} fullWidth />}\n          label=\"DateTimePicker\"\n          value={value}\n          onChange={setValue}\n        />\n      </Block>\n\n      <Block title=\"Responsiveness\">\n        <MobileDateTimePicker\n          value={valueResponsive}\n          onChange={(newValue) => {\n            setValueResponsive(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} fullWidth margin=\"normal\" />}\n        />\n\n        <DesktopDateTimePicker\n          value={valueResponsive}\n          onChange={(newValue) => {\n            setValueResponsive(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} margin=\"normal\" fullWidth />}\n        />\n\n        <DateTimePicker\n          value={valueResponsive}\n          onChange={(newValue) => {\n            setValueResponsive(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} margin=\"normal\" fullWidth />}\n        />\n      </Block>\n    </Stack>\n  );\n}\n","// @mui\nimport { Box, Button, Stack, Link } from '@mui/material';\nimport DateRangePicker, { useDateRangePicker } from '../../../../components/date-range-picker';\n// utils\nimport { fDate } from '../../../../utils/formatTime';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nexport default function PickerDateRange() {\n  const pickerInput = useDateRangePicker(new Date(), new Date());\n\n  const pickerCalendar = useDateRangePicker(new Date(), null);\n\n  return (\n    <>\n      <Stack sx={{ typography: 'body2', mb: 3, color: 'text.secondary' }}>\n        <div>This is the custom component from minimal.</div>\n        <div>You can use more advanced components by MUI.</div>\n\n        <Link href=\"https://mui.com/x/react-date-pickers/date-range-picker/\">\n          https://mui.com/x/react-date-pickers/date-range-picker/{' '}\n        </Link>\n      </Stack>\n\n      <Box\n        gap={3}\n        display=\"grid\"\n        gridTemplateColumns={{\n          xs: 'repeat(1, 1fr)',\n          md: 'repeat(2, 1fr)',\n        }}\n      >\n        <Block title=\"Input\">\n          <Button variant=\"contained\" onClick={pickerInput.onOpen}>\n            Click me!\n          </Button>\n\n          <Stack sx={{ typography: 'body2', mt: 3 }}>\n            <div>\n              <strong>Start:</strong> {fDate(pickerInput.startDate)}\n            </div>\n            <div>\n              <strong>End:</strong> {fDate(pickerInput.endDate)}\n            </div>\n          </Stack>\n\n          <DateRangePicker\n            open={pickerInput.open}\n            startDate={pickerInput.startDate}\n            endDate={pickerInput.endDate}\n            onChangeStartDate={pickerInput.onChangeStartDate}\n            onChangeEndDate={pickerInput.onChangeEndDate}\n            onClose={pickerInput.onClose}\n            isError={pickerInput.isError}\n          />\n        </Block>\n\n        <Block title=\"Calendar\">\n          <Button variant=\"contained\" onClick={pickerCalendar.onOpen}>\n            Click me!\n          </Button>\n\n          <Stack sx={{ typography: 'body2', mt: 3 }}>\n            <div>\n              <strong>Start:</strong> {fDate(pickerCalendar.startDate)}\n            </div>\n            <div>\n              <strong>End:</strong> {fDate(pickerCalendar.endDate)}\n            </div>\n          </Stack>\n\n          <DateRangePicker\n            variant=\"calendar\"\n            open={pickerCalendar.open}\n            startDate={pickerCalendar.startDate}\n            endDate={pickerCalendar.endDate}\n            onChangeStartDate={pickerCalendar.onChangeStartDate}\n            onChangeEndDate={pickerCalendar.onChangeEndDate}\n            onClose={pickerCalendar.onClose}\n            isError={pickerCalendar.isError}\n          />\n        </Block>\n      </Box>\n    </>\n  );\n}\n","import { useState } from 'react';\n\nimport { Helmet } from 'react-helmet-async';\n// @mui\nimport { Box, Container, Tab, Tabs } from '@mui/material';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\n// sections\nimport PickerDate from '../../../sections/_examples/mui/pickers/PickerDate';\nimport PickerTime from '../../../sections/_examples/mui/pickers/PickerTime';\nimport PickerDateTime from '../../../sections/_examples/mui/pickers/PickerDateTime';\nimport PickerDateRange from '../../../sections/_examples/mui/pickers/PickerDateRange';\n\n// ----------------------------------------------------------------------\n\nconst TABS = [\n  { value: 'date', label: 'Date', component: <PickerDate /> },\n  { value: 'datetime', label: 'DateTime', component: <PickerDateTime /> },\n  { value: 'time', label: 'Time', component: <PickerTime /> },\n  { value: 'range', label: 'Range', component: <PickerDateRange /> },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function MUIPickersPage() {\n  const [currentTab, setCurrentTab] = useState('date');\n\n  return (\n    <>\n      <Helmet>\n        <title> MUI Components: Pickers | Minimal UI</title>\n      </Helmet>\n\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Date / Time pickers\"\n            links={[\n              { name: 'Components', href: PATH_PAGE.components },\n              { name: 'Date / Time pickers' },\n            ]}\n            moreLink={[\n              'https://mui.com/components/pickers',\n              'https://mui.com/x/react-date-pickers/getting-started/',\n            ]}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Tabs value={currentTab} onChange={(event, newValue) => setCurrentTab(newValue)}>\n          {TABS.map((tab) => (\n            <Tab key={tab.value} value={tab.value} label={tab.label} />\n          ))}\n        </Tabs>\n\n        {TABS.map(\n          (tab) =>\n            tab.value === currentTab && (\n              <Box key={tab.value} sx={{ mt: 5 }}>\n                {tab.component}\n              </Box>\n            )\n        )}\n      </Container>\n    </>\n  );\n}\n","// @mui\nimport { Theme, alpha } from '@mui/material/styles';\nimport { Paper, CardHeader, Box, Typography, SxProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ntype BlockProps = {\n  title?: string;\n  children: React.ReactNode;\n  sx?: SxProps<Theme>;\n};\n\nexport function Block({ title, sx, children }: BlockProps) {\n  return (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        borderRadius: 1.5,\n        bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\n      }}\n    >\n      {title && <CardHeader title={title} />}\n\n      <Box\n        sx={{\n          p: 5,\n          minHeight: 180,\n          ...sx,\n        }}\n      >\n        {children}\n      </Box>\n    </Paper>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ntype LabelProps = {\n  title: string;\n};\n\nexport function Label({ title }: LabelProps) {\n  return (\n    <Typography variant=\"overline\" component=\"p\" gutterBottom sx={{ color: 'text.secondary' }}>\n      {title}\n    </Typography>\n  );\n}\n"],"names":["BreadcrumbsLink","link","activeLast","disabled","name","href","icon","styles","display","alignItems","color","cursor","pointerEvents","renderContent","Box","component","sx","mr","width","height","Link","RouterLink","to","CustomBreadcrumbs","links","action","heading","moreLink","other","lastLink","length","mb","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","flexShrink","mt","noWrap","target","rel","borderRadius","bgcolor","useDateRangePicker","start","end","useState","open","setOpen","endDate","setEndDate","startDate","setStartDate","isError","isBefore","Date","currentYear","getFullYear","startDateYear","getYear","endDateYear","isCurrentYear","isSameDays","isSameDay","isSameMonths","isSameMonth","standardLabel","fDate","onChangeStartDate","newValue","onChangeEndDate","onOpen","onClose","onReset","isSelected","label","shortLabel","DateRangePicker","title","isDesktop","useResponsive","isCalendarView","Dialog","fullWidth","maxWidth","PaperProps","DialogTitle","pb","DialogContent","overflow","spacing","justifyContent","pt","Paper","borderColor","borderStyle","CalendarPicker","date","onChange","DatePicker","value","renderInput","params","TextField","FormHelperText","error","px","DialogActions","Button","onClick","PickerDate","setValue","Masonry","columns","xs","md","Block","DesktopDatePicker","minDate","margin","MobileDatePicker","orientation","StaticDatePicker","openTo","shouldDisableDate","isWeekend","views","helperText","maxDate","PickerTime","TimePicker","ampm","MobileTimePicker","DesktopTimePicker","StaticTimePicker","displayStaticWrapperAs","PickerDateTime","valueResponsive","setValueResponsive","DateTimePicker","props","MobileDateTimePicker","DesktopDateTimePicker","PickerDateRange","pickerInput","pickerCalendar","typography","gap","gridTemplateColumns","TABS","MUIPickersPage","currentTab","setCurrentTab","theme","palette","mode","Container","PATH_PAGE","my","Tabs","event","tab","Tab","children","alpha","grey","p","minHeight","Label"],"sourceRoot":""}