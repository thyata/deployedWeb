{"version":3,"file":"static/js/1441.ec1fcea4.chunk.js","mappings":"0MAcaA,GAAoBC,E,SAAAA,IAAO,OAAPA,EAAuC,YAA4B,IAAzBC,EAAK,EAALA,MAAOC,EAAU,EAAVA,WACxEC,EAAiBD,EAAjBC,OAAQC,EAASF,EAATE,KAEhB,OAAO,gEACLC,MAAO,GACPC,OAAQ,GACRC,QAAS,OACTC,aAAc,MACdC,WAAY,SACZC,eAAgB,SAChB,oBAAqB,CACnBC,QAAS,KACTH,aAAc,EACdI,gBAAiBX,EAAMY,QAAQC,OAAOC,QAG3B,UAATX,GAAoB,CAAEC,MAAO,EAAGC,OAAQ,IAE/B,UAATF,GAAoB,CAAEC,MAAO,GAAIC,OAAQ,KAE9B,YAAXH,GAAwB,CAAES,gBAAiB,gBAEhC,SAAXT,GAAqB,CACvBS,gBAAiBX,EAAMY,QAAQG,QAAQC,KACvC,WAAY,CACVZ,MAAO,EACPC,OAAQ,EACRY,UAAW,oCAEb,UAAW,CACTb,MAAO,EACPC,OAAQ,EACRY,UAAW,oCAIA,SAAXf,GAAqB,CACvBS,gBAAiBX,EAAMY,QAAQM,MAAMF,KACrC,WAAY,CAAEZ,MAAO,EAAGC,OAAQ,KAGnB,WAAXH,GAAuB,CACzBS,gBAAiBX,EAAMY,QAAQO,QAAQH,OAG1B,cAAXd,GAA0B,CAC5BS,gBAAiBX,EAAMY,QAAQQ,KAAKC,SACpC,WAAY,CACVjB,MAAO,EACPC,OAAQ,EACRE,aAAc,SAIH,WAAXL,GAAuB,CACzBS,gBAAiBX,EAAMY,QAAQU,KAAKN,MAG1C,I,WChEe,SAASO,EAAY,GAAgE,IAAD,IAA7DpB,KAAAA,OAAI,MAAG,SAAQ,MAAED,OAAAA,OAAM,MAAG,UAAS,EAAEsB,EAAE,EAAFA,GACnExB,GAAQyB,EAAAA,EAAAA,KAEd,OAAO,SAAC3B,EAAiB,CAAC0B,GAAIA,EAAIxB,MAAOA,EAAOC,WAAY,CAAEC,OAAAA,EAAQC,KAAAA,IACxE,C,6JCEe,SAASuB,EAAgB,GAAwC,IAAtCC,EAAI,EAAJA,KAAMC,EAAU,EAAVA,WAAYP,EAAQ,EAARA,SAClDQ,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAMC,EAASJ,EAATI,KAEdC,GAAM,QACV1B,QAAS,cACTE,WAAY,SACZyB,MAAO,gBACHZ,IACDO,GAAc,CACbM,OAAQ,UACRC,cAAe,OACfF,MAAO,kBAIPG,GACJ,gCACGL,IACC,SAACM,EAAA,EAAG,CACFC,UAAU,OACVd,GAAI,CACFe,GAAI,EACJjC,QAAS,UACT,QAAS,CAAEF,MAAO,GAAIC,OAAQ,KAC9B,SAED0B,IAIJF,KAIL,OAAIC,GAEA,SAACU,EAAA,EAAI,CAACF,UAAWG,EAAAA,GAAYC,GAAIZ,EAAMN,GAAIQ,EAAO,SAC/CI,KAKA,UAACC,EAAA,EAAG,CAACb,GAAIQ,EAAO,cAAGI,EAAa,MACzC,C,gECjDe,SAASO,EAAkB,GAQd,IAP1BC,EAAK,EAALA,MACAC,EAAM,EAANA,OACAC,EAAO,EAAPA,QACAC,EAAQ,EAARA,SACAnB,EAAU,EAAVA,WACAJ,EAAE,EAAFA,GACGwB,GAAK,YAEFC,EAAWL,EAAMA,EAAMM,OAAS,GAAGrB,KAEzC,OACE,UAACQ,EAAA,EAAG,CAACb,IAAE,QAAI2B,GAAI,GAAM3B,GAAK,WACxB,UAAC4B,EAAA,EAAK,CAACC,UAAU,MAAM7C,WAAW,SAAQ,WACxC,UAAC6B,EAAA,EAAG,CAACb,GAAI,CAAE8B,SAAU,GAAI,UAEtBR,IACC,SAACS,EAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,WAClCX,MAKFF,EAAMM,SACP,SAACQ,EAAA,GAAW,gBAACC,WAAW,SAACC,EAAS,KAASZ,GAAK,aAC7CJ,EAAMiB,KAAI,SAAClC,GAAI,OACd,SAAC,EAAQ,CAEPA,KAAMA,EACNC,WAAYA,EACZP,SAAUM,EAAKE,OAASoB,GAHnBtB,EAAKE,MAAQ,GAIlB,UAMTgB,IAAU,UAACR,EAAA,EAAG,CAACb,GAAI,CAAEsC,WAAY,GAAI,cAAGjB,EAAM,YAI9CE,IACD,SAACV,EAAA,EAAG,CAACb,GAAI,CAAEuC,GAAI,GAAI,SAChBhB,EAASc,KAAI,SAAC/B,GAAI,OACjB,SAACU,EAAA,EAAI,CACHwB,QAAM,EAENlC,KAAMA,EACN0B,QAAQ,QACRS,OAAO,SACPC,IAAI,WACJ1C,GAAI,CAAElB,QAAS,SAAU,SAExBwB,GAPIA,EAQA,QAMnB,CAIA,SAAS8B,IACP,OACE,SAACvB,EAAA,EAAG,CACFC,UAAU,OACVd,GAAI,CAAEpB,MAAO,EAAGC,OAAQ,EAAGE,aAAc,MAAO4D,QAAS,kBAG/D,C,2ICxDA,GAjB0BpE,EAAAA,EAAAA,KAAO,SAACqE,GAAqB,OACrD,SAACC,EAAA,GAAS,QAACC,QAAM,EAACC,YAAa,CAAEC,QAAQ,IAAYJ,GAAS,GADtCrE,EAEvB,gBAAGC,EAAK,EAALA,MAAK,MAAQ,CACjB,aAAc,CACZM,QAAS,QAEX,YAAW,kBACNN,EAAMyE,WAAWC,WAAS,IAC7BC,QAAS3E,EAAM4E,QAAQ,GAAK,EAAG,GAAK,GACpCC,aAAc,oBAEhB,2BAA4B,CAC1BtE,aAAiD,IAAnCuE,OAAO9E,EAAM+E,MAAMxE,cACjCI,iBAAiBqE,EAAAA,EAAAA,IAAMhF,EAAMY,QAAQqE,KAAK,KAAM,MAEnD,I,UCYD,GAvBwBlF,EAAAA,EAAAA,IAAOsE,EAAAA,EAAW,CACxCa,kBAAmB,SAACC,GAAI,MAAc,UAATA,CAAgB,GADvBpF,EAEd,gBAAGK,EAAK,EAALA,MAAOJ,EAAK,EAALA,MAAK,MAAQ,CAC/B,aAAc,CACZM,QAAS,QAEX,2BAA4B,CAC1BF,MAAAA,EACAgF,OAAO,aAAD,QAAeJ,EAAAA,EAAAA,IAAMhF,EAAMY,QAAQqE,KAAK,KAAM,MACpDI,WAAYrF,EAAMsF,YAAYC,OAAO,CAAC,aAAc,SAAU,CAC5DC,SAAUxF,EAAMsF,YAAYE,SAASC,UAEvC,iBAAgB,QACdC,UAAW1F,EAAM2F,cAAcC,KAC3BxF,IAAK,UACNJ,EAAM6F,YAAYC,GAAG,MAAQ,CAC5B1F,MAAOA,EAAQ,OAKxB,I,yHCzBD,IAAM2F,EAAa,CAAC,OACdC,EAAc,CAAC,OACfC,EAAmB,CAAC,OACpBC,EAAc,CAAC,MAAO,QACtBC,EAAe,CAAC,MAAO,QACvBC,EAAa,CAAC,MAAO,MAAO,OAC5BC,EAAqB,CAAC,KAAM,OAC5BC,EAAoB,CAAC,MAAO,QAC5BC,EAAe,CAAC,MAAO,MAAO,MAAO,OACrCC,EAAa,CAAC,MAAO,OAAQ,MAAO,MAAO,MAAO,OAClDC,EAAe,CAAC,MAAO,MAAO,MAAO,MAAO,QAE5CC,EAAU,SAAC3E,GAAY,oCAA4BA,EAAI,SAItD,SAAS4E,EAAWC,GACzB,IAAIC,EAEJ,OAAe,OAAPD,QAAO,IAAPA,OAAO,EAAPA,EAASE,SAASC,EAAcH,KACtC,KAAKZ,EAAYc,SAASC,EAAcH,IACtCC,EAAS,MACT,MACF,KAAKT,EAAWU,SAASC,EAAcH,IACrCC,EAAS,MACT,MACF,KAAKN,EAAaO,SAASC,EAAcH,IACvCC,EAAS,QACT,MACF,KAAKL,EAAWM,SAASC,EAAcH,IACrCC,EAAS,QACT,MACF,KAAKJ,EAAaK,SAASC,EAAcH,IACvCC,EAAS,QACT,MACF,KAAKX,EAAYY,SAASC,EAAcH,IACtCC,EAAS,OACT,MACF,KAAKV,EAAaW,SAASC,EAAcH,IACvCC,EAAS,QACT,MACF,KAAKP,EAAkBQ,SAASC,EAAcH,IAC5CC,EAAS,aACT,MACF,KAAKd,EAAWe,SAASC,EAAcH,IACrCC,EAAS,MACT,MACF,KAAKZ,EAAiBa,SAASC,EAAcH,IAC3CC,EAAS,YACT,MACF,KAAKR,EAAmBS,SAASC,EAAcH,IAC7CC,EAAS,cACT,MACF,QACEA,EAASE,EAAcH,GAG3B,OAAOC,CACT,CAIO,SAASG,EAAUJ,GACxB,IAAIK,EAEJ,OAAQN,EAAWC,IACjB,IAAK,SACHK,EAAQP,EAAQ,aAChB,MACF,IAAK,MACHO,EAAQP,EAAQ,UAChB,MACF,IAAK,MACHO,EAAQP,EAAQ,UAChB,MACF,IAAK,QACHO,EAAQP,EAAQ,YAChB,MACF,IAAK,QACHO,EAAQP,EAAQ,YAChB,MACF,IAAK,OACHO,EAAQP,EAAQ,WAChB,MACF,IAAK,QACHO,EAAQP,EAAQ,YAChB,MACF,IAAK,aACHO,EAAQP,EAAQ,kBAChB,MACF,IAAK,MACHO,EAAQP,EAAQ,UAChB,MACF,IAAK,YACHO,EAAQP,EAAQ,UAChB,MACF,IAAK,cACHO,EAAQP,EAAQ,SAChB,MACF,IAAK,QACHO,EAAQP,EAAQ,UAChB,MACF,QACEO,EAAQP,EAAQ,WAEpB,OAAOO,CACT,CAIO,SAASF,IAA6B,IAAfH,EAAO,uDAAG,GACtC,OAAQA,GAAWA,EAAQM,MAAM,KAAKC,OAAU,EAClD,CAUO,SAASC,EAASC,GAEvB,MAAoB,kBAATA,EACF,CACLC,IAAKD,EACLE,QAASF,EACTxF,MAZwB+E,EAYJS,EAXjBT,EAAQM,MAAM,KAAKC,OAYtBK,KAAMT,EAAcM,IAKjB,CACLC,IAAKD,EAAKE,QACV1F,KAAMwF,EAAKxF,KACX1B,KAAMkH,EAAKlH,KACXsH,KAAMJ,EAAKI,KACXD,KAAMH,EAAKG,KACXD,QAASF,EAAKE,QACdG,aAAcL,EAAKK,aACnBC,iBAAkBN,EAAKM,kBA1BpB,IAAuBf,CA4B9B,C,qGCxIe,SAASgB,EAAe,GAAwB,IAAtBC,EAAU,EAAVA,WACjC7H,GAAQyB,EAAAA,EAAAA,KAEd,OACE,SAACqG,EAAA,EACC,CACAC,QAASF,EACTrG,GAAI,CACFwG,EAAG,EACHC,IAAK,EACLC,MAAO,EACP9H,MAAO,EACPC,OAAQ,EACR8H,OAAQ,EACRC,QAAS,EACTC,SAAU,WACV9H,aAAc,QAEdE,eAAgB,SAChB0D,QAAS,WACTlC,MAAO,eACPoD,WAAYrF,EAAMsF,YAAYC,OAAO,WAErC,WAAU,QACR6C,QAAS,IACNE,EAAAA,EAAAA,IAAO,CACRF,QAAS,IACTnG,MAAOjC,EAAMY,QAAQqE,KAAK,SAG9B,UAEF,SAAC,IAAO,CAAClD,KAAK,6BAA6B3B,MAAO,MAGxD,CChCe,SAASmI,EAAc,GAOnB,IANjBlB,EAAI,EAAJA,KACAmB,EAAO,EAAPA,QACAC,EAAS,EAATA,UACAZ,EAAU,EAAVA,WACArG,EAAE,EAAFA,GACAkH,EAAK,EAALA,MAEA,EAA+CtB,EAASC,GAAK,IAArDxF,KAAAA,OAAI,MAAG,GAAE,MAAE4F,KAAAA,OAAI,MAAG,GAAE,MAAEF,QAAAA,OAAO,MAAG,GAAE,EAEpCV,EAASF,EAAWc,GAAQF,GAE5BnF,EACO,UAAXyE,GAAsB4B,GACpB,SAACpG,EAAA,EAAG,CACFC,UAAU,MACVqG,IAAKpB,EACL/F,IAAE,QACApB,MAAO,EACPC,OAAQ,EACRyD,WAAY,EACZ8E,UAAW,SACRF,MAIP,SAACrG,EAAA,EAAG,CACFC,UAAU,MACVqG,IAAK3B,EAAUH,GACfrF,IAAE,QACApB,MAAO,GACPC,OAAQ,GACRyD,WAAY,GACTtC,KAKX,OAAIgH,GAEA,SAACK,EAAA,EAAO,CAACC,MAAOjH,EAAK,UACnB,UAACuB,EAAA,EAAK,CACJU,WAAY,EACZxB,UAAU,OACV9B,WAAW,SACXC,eAAe,SACfe,GAAI,CACFpB,MAAO,cACPC,OAAQ,WACR,UAED+B,EACAyF,IAAc,SAACD,EAAc,CAACC,WAAYA,UAOjD,gCACGzF,EACAyF,IAAc,SAACD,EAAc,CAACC,WAAYA,MAGjD,C,wOC3Ee,SAASkB,IACtB,IAAM/I,GAAQyB,EAAAA,EAAAA,KA4Cd,OAzCE,SAACuH,EAAA,EAAY,CACXhH,OAAQ,CACN,cAAe,CACb,uCAAwC,EACxC,sCAAuC,cACvC,0BAA0BgD,EAAAA,EAAAA,IAAMhF,EAAMY,QAAQqE,KAAK,KAAM,IACzD,+CAA+CD,EAAAA,EAAAA,IAAMhF,EAAMY,QAAQqE,KAAK,KAAM,MAGhF,qBAAsB,CACpBgE,SAAUjJ,EAAMyE,WAAWyE,GAAGD,SAC9BE,WAAYnJ,EAAMyE,WAAWyE,GAAGC,WAChCC,WAAYpJ,EAAMyE,WAAWyE,GAAGE,YAElC,2BAA4B,CAC1BH,SAAUjJ,EAAMyE,WAAW4E,MAAMJ,SACjCE,WAAYnJ,EAAMyE,WAAW4E,MAAMF,WACnCC,WAAYpJ,EAAMyE,WAAW4E,MAAMD,YAGrC,gBAAiB,CACfE,OAAQ,SAGV,8BAA+B,CAC7BlB,QAAS,IACT,sCAAuC,CACrCA,QAAS,IAGb,6BAA8B,CAC5B,mCAAoC,GAGtC,yBAA0B,CACxBzH,gBAAiBX,EAAMY,QAAQC,OAAO0I,SAOhD,C,qKClCMC,EAAY,GAEH,SAASC,EAAS,GAWd,IAVjBC,EAAM,EAANA,OACAC,EAAY,EAAZA,aACAC,EAAa,EAAbA,cACAC,EAAa,EAAbA,cACAC,EAAgB,EAAhBA,iBACAC,EAAiB,EAAjBA,kBACAC,EAAkB,EAAlBA,mBACAC,EAAkB,EAAlBA,mBACAC,EAAiB,EAAjBA,kBACGlH,GAAK,YAEFmH,EAAaT,EAASA,EAAOxG,OAAS,EAE5C,OACE,iCACE,SAAC6F,EAAc,KAEf,SAAC,KAAa,QACZW,OAAQA,EACRU,UAAW,CAAEC,MAAO,KACpBC,SAAU,CAAEC,OAAQJ,EAAa,GACjCK,WAAY,CAAEC,sBAAsB,GACpCC,QAASC,EAAW,CAClBhB,aAAAA,EACAC,cAAAA,EACAE,iBAAAA,EACAC,kBAAAA,EACAC,mBAAAA,EACAC,mBAAAA,IAEFW,GAAI,CACFC,KAAM,SAACC,GACDZ,GACFA,EAAkBY,EAEtB,GAEFC,QAAS,CACPC,QAAS,EACP,SAACC,EAAY,CAEXd,WAAYA,EACZN,cAAeA,EACfC,iBAAkBA,GAHb,GAKP,UAGJoB,OAAQ,CACNC,UAAW,kBAAM,SAAC,IAAO,CAAC/K,MAAOoJ,EAAWzH,KAAK,gBAAiB,EAClEqJ,WAAY,kBAAM,SAAC,IAAO,CAAChL,MAAOoJ,EAAWzH,KAAK,kBAAmB,EACrEsJ,YAAa,kBAAM,SAAC,IAAO,CAACjL,MAAOoJ,EAAWzH,KAAK,mBAAoB,EACvEuJ,kBAAmB,kBAAM,SAAC,IAAO,CAAClL,MAAOoJ,EAAWzH,KAAK,eAAgB,EACzEwJ,mBAAoB,kBAAM,SAAC,IAAO,CAACnL,MAAOoJ,EAAWzH,KAAK,gBAAiB,EAC3EyJ,SAAU,kBAAM,SAAC,IAAO,CAACpL,MAAOoJ,GAAezH,KAAK,uBAAwB,EAC5E0J,SAAU,kBAAM,SAAC,IAAO,CAACrL,MAAOoJ,GAAezH,KAAK,wBAAyB,EAC7E2J,mBAAoB,kBAAM,SAAC,IAAO,CAACtL,MAAOoJ,EAAWzH,KAAK,wBAAyB,EACnF4J,oBAAqB,kBAAM,SAAC,IAAO,CAACvL,MAAOoJ,EAAWzH,KAAK,wBAAyB,IAElFiB,MAIZ,CAIO,SAAS2H,EAAW,GAOR,IANjBhB,EAAY,EAAZA,aACAC,EAAa,EAAbA,cACAE,EAAgB,EAAhBA,iBACAC,EAAiB,EAAjBA,kBACAC,EAAkB,EAAlBA,mBACAC,EAAkB,EAAlBA,mBAEIS,EAAU,CAACkB,EAAAA,EAAUC,EAAAA,EAAYC,EAAAA,EAAWC,EAAAA,EAAYC,EAAAA,EAAOC,EAAAA,IAqBnE,OAnBIjC,IACFU,EAAUA,EAAQpB,QAAO,SAAC4C,GAAM,OAAKA,IAAWH,EAAAA,CAAU,KAExDjC,IACFY,EAAUA,EAAQpB,QAAO,SAAC4C,GAAM,OAAKA,IAAWN,EAAAA,CAAQ,KAEtD3B,IACFS,EAAUA,EAAQpB,QAAO,SAAC4C,GAAM,OAAKA,IAAWL,EAAAA,CAAU,KAExD9B,IACFW,EAAUA,EAAQpB,QAAO,SAAC4C,GAAM,OAAKA,IAAWJ,EAAAA,CAAS,KAEvDnC,IACFe,EAAUA,EAAQpB,QAAO,SAAC4C,GAAM,OAAKA,IAAWD,EAAAA,EAAI,KAElDrC,IACFc,EAAUA,EAAQpB,QAAO,SAAC4C,GAAM,OAAKA,IAAWF,EAAAA,CAAK,KAGhDtB,CACT,CAUO,SAASO,EAAa,GAAqE,IAAnEd,EAAU,EAAVA,WAAYN,EAAa,EAAbA,cAAeC,EAAgB,EAAhBA,iBAGhDqC,GAFUC,EAAAA,EAAAA,KAAVC,MAEAF,aAER,OAAItC,EACK,MAIP,UAACtG,EAAA,EAAU,CACT+I,UAAU,eACV9K,IAAE,QACA+K,GAAI,EACJC,KAAM,EACNnE,SAAU,QACV5D,WAAY,UACPqF,GAAoB,CACvB2C,GAAI,QACJC,SAAU,GACVrE,SAAU,QACVsE,UAAW,WAEb,WAEF,kCAAUR,EAAe,EAAC,OAAW,MAAIhC,IAG/C,C,0MCvJe,SAASyC,EAAiB,GAA0B,IAArB5J,EAAK,iCACjD,OACE,UAAC,MAAI,gBAAC6J,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAAOhK,GAAK,eACxC,SAAC,IAAQ,CAACQ,QAAQ,cAAcpD,MAAM,OAAOoB,GAAI,CAAEnB,OAAQ,IAAKE,aAAc,MAC9E,UAAC,IAAG,CAACiB,GAAI,CAAElB,QAAS,OAAQyD,GAAI,KAAM,WACpC,SAAC,IAAQ,CAACP,QAAQ,WAAWhC,GAAI,CAAEpB,MAAO,GAAIC,OAAQ,OACtD,SAAC,IAAQ,CAACmD,QAAQ,OAAOhC,GAAI,CAAEyL,GAAI,EAAG3J,SAAU,WAIxD,CCVe,SAAS4J,IACtB,OACE,iCACE,SAAC,IAAQ,CAAC9M,MAAM,OAAOC,OAAQ,IAAKmD,QAAQ,cAAchC,GAAI,CAAEjB,aAAc,MAC9E,UAAC,IAAG,CAACiB,GAAI,CAAEuC,GAAI,EAAGzD,QAAS,OAAQE,WAAY,UAAW,WACxD,SAAC,IAAQ,CAACgD,QAAQ,WAAWpD,MAAO,GAAIC,OAAQ,MAChD,UAAC,IAAG,CAACmB,GAAI,CAAE8B,SAAU,EAAG6J,GAAI,GAAI,WAC9B,SAAC,IAAQ,CAAC3J,QAAQ,OAAOnD,OAAQ,MACjC,SAAC,IAAQ,CAACmD,QAAQ,OAAOnD,OAAQ,MACjC,SAAC,IAAQ,CAACmD,QAAQ,OAAOnD,OAAQ,aAK3C,C,mCCde,SAAS+M,EAAoB,GAA+B,IAA7B5L,EAAE,EAAFA,GAAOwB,GAAK,YACxD,OACE,UAAC,KAAK,gBAAC4B,QAAS,EAAGvB,UAAU,MAAM7C,WAAW,SAASgB,IAAE,QAAIiL,GAAI,EAAGY,GAAI,GAAM7L,IAAUwB,GAAK,eAC3F,SAAC,IAAQ,CAACQ,QAAQ,WAAWpD,MAAO,GAAIC,OAAQ,MAChD,SAAC,IAAQ,CAACmD,QAAQ,OAAOhC,GAAI,CAAEpB,MAAO,GAAKC,OAAQ,SAGzD,C,aCPe,SAASiN,EAAyB,GAA+B,IAA7B9L,EAAE,EAAFA,GAAOwB,GAAK,YAC7D,OACE,UAAC,KAAK,gBACJ4B,QAAS,EACTvB,UAAU,MACV7C,WAAW,SACXgB,IAAE,QAAIiL,GAAI,EAAGY,GAAI,KAAQ7L,IACrBwB,GAAK,eAET,SAAC,IAAQ,CAACQ,QAAQ,WAAWpD,MAAO,GAAIC,OAAQ,MAEhD,UAAC,IAAK,CAACuE,QAAS,GAAKpD,GAAI,CAAE8B,SAAU,GAAI,WACvC,SAAC,IAAQ,CAACE,QAAQ,OAAOhC,GAAI,CAAEpB,MAAO,GAAKC,OAAQ,OACnD,SAAC,IAAQ,CAACmD,QAAQ,OAAOhC,GAAI,CAAEpB,MAAO,IAAMC,OAAQ,YAI5D,C,wdCdIkN,EAAyB,IACzBC,EAAiB,KACjBC,EAAmBD,MACnBE,EAAkBF,OAmFP,SAASG,EAAqBC,EAAWC,EAAeC,GACrE,IAAIC,EAAMC,EAAiBC,GAE3BC,EAAAA,EAAAA,GAAa,EAAGC,WAChB,IAAIC,GAAiBC,EAAAA,EAAAA,KACjBC,EAA4L,QAAlLP,EAAgG,QAAxFC,EAA8B,OAAZF,QAAgC,IAAZA,OAAqB,EAASA,EAAQQ,cAAwC,IAApBN,EAA6BA,EAAkBI,EAAeE,cAA6B,IAATP,EAAkBA,EAAOQ,EAAAA,EAEjO,IAAKD,EAAOE,eACV,MAAM,IAAIC,WAAW,wDAGvB,IAAIC,GAAaC,EAAAA,EAAAA,GAAWf,EAAWC,GAEvC,GAAIe,MAAMF,GACR,MAAM,IAAID,WAAW,sBAGvB,IAIII,EACAC,EALAC,GAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,GAAYnB,GAAU,CACjDoB,UAAWC,QAAoB,OAAZrB,QAAgC,IAAZA,OAAqB,EAASA,EAAQoB,WAC7ER,WAAYA,IAKVA,EAAa,GACfG,GAAWO,EAAAA,EAAAA,GAAOvB,GAClBiB,GAAYM,EAAAA,EAAAA,GAAOxB,KAEnBiB,GAAWO,EAAAA,EAAAA,GAAOxB,GAClBkB,GAAYM,EAAAA,EAAAA,GAAOvB,IAGrB,IACIwB,EADAC,EAAiBC,OAA8G,QAAtGtB,EAAoC,OAAZH,QAAgC,IAAZA,OAAqB,EAASA,EAAQwB,sBAAsD,IAA1BrB,EAAmCA,EAAwB,SAGtM,GAAuB,UAAnBqB,EACFD,EAAmBG,KAAKC,WACnB,GAAuB,SAAnBH,EACTD,EAAmBG,KAAKE,SACnB,IAAuB,UAAnBJ,EAGT,MAAM,IAAIb,WAAW,qDAFrBY,EAAmBG,KAAKG,KAG1B,CAEA,IAOIC,EAPAC,EAAef,EAAUgB,UAAYjB,EAASiB,UAC9CC,EAAUF,EAAetC,EACzByC,GAAiBC,EAAAA,EAAAA,GAAgCnB,IAAamB,EAAAA,EAAAA,GAAgCpB,GAG9FqB,GAAwBL,EAAeG,GAAkBzC,EACzD4C,EAA0B,OAAZrC,QAAgC,IAAZA,OAAqB,EAASA,EAAQ8B,KAsB5E,GAAa,YAJXA,EAfGO,EAeIZ,OAAOY,GAdVJ,EAAU,EACL,SACEA,EAAU,GACZ,SACEA,EAAUvC,EACZ,OACE0C,EAAuBzC,EACzB,MACEyC,EAAuBxC,EACzB,QAEA,QAOY,CACrB,IAAI0C,EAAUf,EAAiBQ,EAAe,KAC9C,OAAOvB,EAAOE,eAAe,WAAY4B,EAASrB,EACpD,CAAO,GAAa,WAATa,EAAmB,CAC5B,IAAIS,EAAiBhB,EAAiBU,GACtC,OAAOzB,EAAOE,eAAe,WAAY6B,EAAgBtB,EAC3D,CAAO,GAAa,SAATa,EAAiB,CAC1B,IAAIU,EAAQjB,EAAiBU,EAAU,IACvC,OAAOzB,EAAOE,eAAe,SAAU8B,EAAOvB,EAChD,CAAO,GAAa,QAATa,EAAgB,CACzB,IAAIW,EAAOlB,EAAiBa,EAAuB1C,GACnD,OAAOc,EAAOE,eAAe,QAAS+B,EAAMxB,EAC9C,CAAO,GAAa,UAATa,EAAkB,CAC3B,IAAIY,EAASnB,EAAiBa,EAAuBzC,GACrD,OAAkB,KAAX+C,GAAiC,UAAhBL,EAA0B7B,EAAOE,eAAe,SAAU,EAAGO,GAAmBT,EAAOE,eAAe,UAAWgC,EAAQzB,EACnJ,CAAO,GAAa,SAATa,EAAiB,CAC1B,IAAIa,EAAQpB,EAAiBa,EAAuBxC,GACpD,OAAOY,EAAOE,eAAe,SAAUiC,EAAO1B,EAChD,CAEA,MAAM,IAAIN,WAAW,oEACvB,CC/Ge,SAASiC,EAA0B9C,EAAWE,GAE3D,OADAI,EAAAA,EAAAA,GAAa,EAAGC,WACTR,EAAqBC,EAAW+C,KAAKC,MAAO9C,EACrD,C,yFCrDe,SAAS+C,GAAY,GAAyD,IAAvDC,EAAY,EAAZA,aAAcC,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAAYC,EAAQ,EAARA,SACjEC,EAAUC,GAAWL,EAVL,0CAYhBM,EAAeN,EAAaO,SAASP,EAAaO,SAASnO,OAAS,GAAGoO,UAEvEC,EAAUL,EAAQM,kBAAkBtO,OAAS,EAE7CuO,EAAWX,EAAaY,YAAc,EAEtCC,EACJJ,GAAWL,EAAQM,kBAAkB3N,KAAI,SAACgJ,GAAI,OAAKA,EAAK3M,MAAM,IAAE4G,SAAS,UAE3E,OACE,UAAC8K,EAAA,EAAc,CACbC,gBAAc,EACd9J,QAASkJ,EACTzP,IAAE,QACA6L,GAAI,IACJZ,GAAI,KACAuE,GAAc,CAChB7M,QAAS,oBAEX,WAEF,SAAC2N,EAAA,EAAc,UACZP,GACC,SAACQ,EAAA,EAAK,CACJC,QAAQ,WACRC,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAChDC,aAAcT,IAAoB,SAAC,IAAW,CAACzR,OAAO,WAAY,UAElE,SAAC,IAAiB,CAACmS,SAAO,EAAC7Q,GAAI,CAAEpB,MAAO,GAAIC,OAAQ,IAAK,SACtD6Q,EAAQM,kBAAkBc,MAAM,EAAG,GAAGzO,KAAI,SAAC0O,GAAW,OACrD,SAAC,IAAY,CAEXC,IAAKD,EAAY1Q,KACjB8G,IAAK4J,EAAYE,QAFZF,EAAYG,GAGjB,SAKR,SAAC,IAAY,CAEXF,IAAKtB,EAAQM,kBAAkB,GAAG3P,KAClC8G,IAAKuI,EAAQM,kBAAkB,GAAGiB,OAClCE,WAAY,CACVP,cAAc,SAAC,IAAW,CAAClS,OAAQgR,EAAQM,kBAAkB,GAAGtR,UAElEsB,GAAI,CAAEpB,MAAO,GAAIC,OAAQ,KANpB6Q,EAAQM,kBAAkB,GAAGkB,MAWvC3B,IACC,iCACE,SAAC6B,EAAA,EAAY,CACXC,QAAS3B,EAAQ4B,aACjBC,uBAAwB,CAAE/O,QAAQ,EAAMR,QAAS,aACjDwP,UAAW9B,EAAQ+B,YACnBC,yBAA0B,CACxBlP,QAAQ,EACRR,QAASiO,EAAW,YAAc,QAClCxP,MAAOwP,EAAW,eAAiB,qBAIvC,UAACrO,EAAA,EAAK,CAAC5C,WAAW,WAAWgB,GAAI,CAAE2L,GAAI,EAAG9M,OAAQ,IAAK,WACrD,SAACkD,EAAA,EAAU,CACTS,QAAM,EACNR,QAAQ,QACRlB,UAAU,OACVd,GAAI,CACF2B,GAAI,IACJ8F,SAAU,GACVhH,MAAO,iBACP,SAEDyO,EAA0B,IAAIC,KAAKS,GAAe,CACjDlC,WAAW,MAIduC,IAAY,SAAC,IAAW,CAACvR,OAAO,SAASC,KAAK,kBAM3D,CAIA,IAAMgR,GAAa,SAACL,EAAiCqC,GACnD,IAAM3B,EAAoBV,EAAasC,aAAa9J,QAClD,SAACiJ,GAAW,OAAKA,EAAYG,KAAOS,CAAa,IAG7CL,EAAetB,EAAkB3N,KAAI,SAAC0O,GAAW,OAAKA,EAAY1Q,IAAI,IAAEwR,KAAK,MAE/EJ,EAAc,GAEZK,EAAcxC,EAAaO,SAASP,EAAaO,SAASnO,OAAS,GACzE,GAAIoQ,EAAa,CACf,IAAMC,EAASD,EAAYE,WAAaL,EAAgB,QAAU,GAE5DM,EAAsC,UAA5BH,EAAYI,YAA0B,eAAiBJ,EAAYK,KAEnFV,EAAW,UAAMM,GAAM,OAAGE,EAC5B,CACA,MAAO,CAAEjC,kBAAAA,EAAmBsB,aAAAA,EAAcG,YAAAA,EAC5C,E,4DChHe,SAASW,GAAY,GAOzB,IANTC,EAAa,EAAbA,cACA9C,EAAO,EAAPA,QACA+C,EAAU,EAAVA,WACAC,EAAQ,EAARA,SACAvS,EAAE,EAAFA,GACGwB,GAAK,aAEFgR,GAAWC,EAAAA,EAAAA,MAEXC,GAAYC,EAAAA,EAAAA,GAAc,KAAM,MAsBhCC,GAAWP,EAAcQ,OAAOnR,OAEtC,OACE,SAACoR,EAAA,GAAI,gBAACC,gBAAc,EAAC/S,GAAIA,GAAQwB,GAAK,cAClCoR,GAAO,OAAOI,MAAM,KAAOX,EAAcQ,QAAQxQ,KAAI,SAAC4Q,EAAgB3J,GAAK,OAC3E2J,GACE,SAAC5D,GAAW,CAEVE,QAASA,EACTD,aAAc+C,EAAca,KAAKD,GACjCzD,WAAY+C,EAASU,GACrBxD,SAAU,WACHiD,GACHJ,IAjCmB,SAACW,GAChC,IAAIE,EAAkB,GAEhB7D,EAAe+C,EAAca,KAAKD,GAExC,GAA0B,UAAtB3D,EAAatJ,KACfmN,EAAkB7D,EAAa4B,OAC1B,CACL,IAAMkC,EAAmB9D,EAAasC,aAAayB,MACjD,SAACtC,GAAW,MA/BI,2CA+BCA,EAAYG,EAAsB,IAGjC,OAAhBkC,QAAgB,IAAhBA,GAAAA,EAAkBE,WACpBH,EAAkC,OAAhBC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBE,SAExC,CAEAd,EAASe,EAAAA,GAAAA,KAAAA,KAAyBJ,GACpC,CAiBYK,CAAyBP,EAC3B,GATKA,IAYP,SAAC,KAAwB,GAAM3J,EAChC,MAIT,C,wCCpEe,SAASmK,GAAc,GAA0C,IAAxCC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YACvD,OACE,SAACC,GAAA,EAAiB,CAACD,YAAaA,EAAY,UAC1C,SAAC,MAAe,CACdE,WAAS,EACTnV,KAAK,QACL+U,MAAOA,EACPC,SAAUA,EACVI,YAAY,qBACZC,WAAY,CACVC,gBACE,SAACC,GAAA,EAAc,CAACrN,SAAS,QAAO,UAC9B,SAAC,IAAO,CAACtG,KAAK,kBAAkBP,GAAI,CAAES,MAAO,sBAInDT,GAAI,CAAEuC,GAAI,QAIlB,C,4ECZM4R,GAAS,CAAC,SAAU,YAAa,QAExB,SAASC,KACtB,IAAQC,GAASC,EAAAA,GAAAA,KAATD,KAER,GAA4BE,EAAAA,EAAAA,UAA2B,UAAS,eAAzD7V,EAAM,KAAE8V,EAAS,KAExB,GAAsCD,EAAAA,EAAAA,UAA6B,MAAK,eAAjEE,EAAW,KAAEC,EAAc,KAUlC,OACE,iCACE,SAAC,IAAY,CACXvN,IAAS,OAAJkN,QAAI,IAAJA,OAAI,EAAJA,EAAMM,SACX3D,IAAS,OAAJqD,QAAI,IAAJA,OAAI,EAAJA,EAAMO,YACXvU,KAAU,OAAJgU,QAAI,IAAJA,OAAI,EAAJA,EAAMO,YACZzD,WAAY,CACVP,cAAc,SAAC,IAAW,CAAClS,OAAQA,KAErC6H,QAjBoB,SAACsO,GACzBH,EAAeG,EAAMC,cACvB,EAgBM9U,GAAI,CAAEU,OAAQ,UAAW9B,MAAO,GAAIC,OAAQ,OAG9C,UAAC,KAAW,CAACkW,KAAMN,EAAaO,QAjBT,WACzBN,EAAe,KACjB,EAeiEO,MAAM,WAAWjV,GAAI,CAAEwG,EAAG,GAAI,WACzF,UAAC5E,EAAA,EAAK,CAACC,UAAU,MAAM7C,WAAW,SAASoE,QAAS,EAAGpD,GAAI,CAAE6L,GAAI,EAAGqJ,GAAI,EAAGnK,GAAI,KAAM,WACnF,4BACE,SAAChJ,EAAA,EAAU,CAACS,QAAM,EAACR,QAAQ,YAAW,SAC/B,OAAJqS,QAAI,IAAJA,OAAI,EAAJA,EAAMO,eAGT,SAAC7S,EAAA,EAAU,CAACS,QAAM,EAACR,QAAQ,QAAQhC,GAAI,CAAES,MAAO,kBAAmB,SAC5D,OAAJ4T,QAAI,IAAJA,OAAI,EAAJA,EAAMc,YAIX,SAAC9N,GAAA,EAAO,CAACC,MAAM,UAAS,UACtB,SAAChB,EAAA,EAAU,CAAC7F,MAAM,QAAO,UACvB,SAAC,IAAO,CAACF,KAAK,wCAKpB,SAAC6U,GAAA,EAAO,KAER,UAACtC,EAAA,EAAI,CAAC9S,GAAI,CAAEiL,GAAI,GAAI,WAClB,UAACoK,GAAA,EAAQ,YACP,SAAC,IAAW,CAAC1W,KAAK,QAAQD,OAAQA,EAAQsB,GAAI,CAAEsV,EAAG,GAAKhT,WAAY,MAEpE,SAACiT,GAAA,EAAM,CACLvS,QAAM,EACN8Q,WAAS,EACTJ,MAAOhV,EACPiV,SAAU,SAACkB,GAAK,OAAKL,EAAUK,EAAMpS,OAAOiR,MAAM,EAClD1T,GAAI,CACF,wBAAyB,CACvBwG,EAAG,EACHuE,GAAI,EACJ9H,WAAY,QACZuS,cAAe,cAEjB,0BAA2B,CACzB9O,OAAQ,GACRD,IAAK,SAEP,qCAAsC,CACpC3H,QAAS,SAEX,SAEDqV,GAAO9R,KAAI,SAACoT,GAAM,OACjB,mBAAqB/B,MAAO+B,EAAO,SAChCA,GADUA,EAEJ,UAKf,UAACJ,GAAA,EAAQ,YACP,SAAC,IAAO,CAAC9U,KAAK,yBAAyB,cAIzC,UAAC8U,GAAA,EAAQ,YACP,SAAC,IAAO,CAAC9U,KAAK,wBAAwB,sBAOlD,C,2BCxGe,SAASmV,GAAqB,GAIlC,IAHTC,EAAc,EAAdA,eACAC,EAAa,EAAbA,cACAC,EAAe,EAAfA,gBAEMC,GAAcF,EAAclU,UAAYiU,EAE9C,OACE,iCACE,SAAC5T,EAAA,EAAU,CACTgU,WAAS,EACT/T,QAAQ,KACRhC,GAAI,CACFiL,GAAI,KACJ,sBAKH6K,GACC,SAAC,KAAc,CACbE,MAAOL,EACP3V,GAAI,CACFwG,EAAG,EACHiF,GAAI,OACJ7M,MAAM,oBACN+D,QAAS,yBAIb,8BACGiT,EAAcvT,KAAI,SAAC4T,GAAM,OACxB,UAAC7F,EAAA,EAAc,CAEb7J,QAAS,kBAAMsP,EAAgBI,EAAO,EACtCjW,GAAI,CACFiL,GAAI,IACJY,GAAI,IACJ5I,WAAY,aACZ,WAEF,SAACiT,GAAA,EAAM,CAAClF,IAAKiF,EAAO5V,KAAM8G,IAAK8O,EAAOhF,OAAQjR,GAAI,CAAEe,GAAI,KACvDkV,EAAO5V,OATH4V,EAAO/E,GAUG,QAM7B,CCxCA,IAAMiF,IAAqB5X,EAAAA,EAAAA,KAAO,SAACqE,GAAK,OACtC,SAAC0D,EAAA,GAAU,QAAC8P,eAAa,GAAKxT,GAAS,GADdrE,EAEP,gBAAGC,EAAK,EAALA,MAAK,MAAQ,CAClCwM,KAAM,EACNrE,OAAQ,EACR/H,MAAO,GACPC,OAAQ,GACRgI,SAAU,WACVJ,IAAKjI,EAAM4E,QAAQ,IACnBrE,aAAa,gBACb0B,MAAOjC,EAAMY,QAAQiS,QAAQgF,aAC7BlX,gBAAiBX,EAAMY,QAAQiS,QAAQ7R,KACvC0E,UAAW1F,EAAM2F,cAAckN,QAC/B,UAAW,CACTlS,gBAAiBX,EAAMY,QAAQiS,QAAQiF,QAE1C,IAac,SAASC,GAAQ,GAAiD,IAA/ClE,EAAa,EAAbA,cAAemE,EAAoB,EAApBA,qBACzChY,GAAQyB,EAAAA,EAAAA,KAERuS,GAAWC,EAAAA,EAAAA,MAEXC,GAAYC,EAAAA,EAAAA,GAAc,KAAM,MAEtC,GAA8B4B,EAAAA,EAAAA,WAAS,GAAM,eAAtChF,EAAO,KAAEkH,EAAU,KAE1B,GAA0ClC,EAAAA,EAAAA,UAAS,IAAG,eAA/CqB,EAAa,KAAEc,EAAgB,KAEtC,GAA4CnC,EAAAA,EAAAA,UAAS,IAAG,eAAjDoB,EAAc,KAAEgB,EAAiB,KAElCC,EAAalE,IAAcnD,GAEjCsH,EAAAA,EAAAA,YAAU,WACHnE,EAGHoE,IAFAC,GAKJ,GAAG,CAACrE,IAEJ,IAAMsE,EAAkB,WACtBP,GAAYlH,EACd,EAEMuH,EAAgB,WACpBL,GAAW,EACb,EAEMM,EAAiB,WACrBN,GAAW,EACb,EAEMQ,EAAkB,yCAAG,WAAOpC,GAA0C,8EAI/C,GAJ+C,SAEhEnB,EAAUmB,EAAMpS,OAAhBiR,MAERiD,EAAkBjD,IAEdA,EAAM,CAAD,gCACgBwD,EAAAA,EAAAA,IAAU,mBAAoB,CACnDC,OAAQ,CAAEnB,MAAOtC,KAChB,KAAD,EAFI0D,EAAQ,OAIdV,EAAiBU,EAASC,KAAKC,SAAS,wBAExCZ,EAAiB,IAAI,0DAGvBa,QAAQ7X,MAAM,EAAD,IAAQ,0DAExB,gBAlBuB,sCAyBlBkB,GACJ,iCACE,UAACC,EAAA,EAAG,CAACb,GAAI,CAAEwG,EAAG,KAAM,WAClB,UAAC5E,EAAA,EAAK,CAACC,UAAU,MAAM7C,WAAW,SAASC,eAAe,SAAQ,WAC9D2X,IACA,iCACE,SAACxC,GAAc,KACf,SAACvT,EAAA,EAAG,CAACb,GAAI,CAAE8B,SAAU,SAIzB,SAACwE,EAAA,EAAU,CAACC,QAASyQ,EAAgB,UACnC,SAAC,IAAO,CAACzW,KAAMgP,EAAU,0BAA4B,kCAGrDqH,IACA,SAACtQ,EAAA,EAAU,CAACxF,UAAWG,EAAAA,GAAYC,GAAIqS,EAAAA,GAAAA,KAAAA,IAAwB,UAC7D,SAAC,IAAO,CAAChT,KAAK,wBAKlBqW,IACA,SAACnD,GAAa,CACZC,MAAOiC,EACPhC,SAAUsD,EACVrD,YAAa,kBAAM+C,EAAkB,GAAG,QAK9C,SAAC,IAAS,UACNhB,GAQA,SAACD,GAAoB,CACnBC,eAAgBA,EAChBC,cAAeA,EACfC,gBAhDkB,SAACI,GAC3BU,EAAkB,IAClBnE,EAASe,EAAAA,GAAAA,KAAAA,KAAyB0C,EAAO3C,UAC3C,KAmCQ,SAAClB,GAAW,CACV7C,QAASA,EACT+C,WAAYyE,EACZ1E,cAAeA,EACfE,SAAU,SAACU,GAAsB,OAAKuD,IAAyBvD,CAAc,SAavF,OACE,iCACIP,IACA,SAACyD,GAAkB,CAAC5P,QAASyQ,EAAgB,UAC3C,SAAC,IAAO,CAACpY,MAAO,GAAI2B,KAAK,sBAI5BmS,GACC,SAAC8E,EAAA,GAAM,CACLzC,KAAMxF,EACNvN,QAAQ,aACRyV,WAAY,CACVzX,IAAG,QACD0X,GAAI,EACJ9Y,MAAO,EACPiI,SAAU,UACN+P,GAAc,CAChBnX,UAAW,kBACXkY,WAAY,wBAIlB3X,IAAE,QACApB,MAhJM,IAiJNiF,WAAYrF,EAAMsF,YAAYC,OAAO,UACjC6S,GAAc,CAChBhY,MAjJa,KAmJf,SAEDgC,KAGH,SAAC4W,EAAA,GAAM,CACLzC,KAAMxF,EACNyF,QAAS+B,EACTa,WAAY,CAAEC,aAAa,GAC3BJ,WAAY,CACVzX,GAAI,CACF0X,GAAI,EACJ9Y,MAjKI,MAmKN,SAEDgC,MAKX,C,qIC1Me,SAASkX,GAAuB,GAMpC,IALTlB,EAAU,EAAVA,WACAmB,EAAU,EAAVA,WACAC,EAAQ,EAARA,SACAhY,EAAE,EAAFA,GACGwB,GAAK,aAER,OACE,SAACyW,GAAA,GAAM,gBACLnE,WAAS,EACTrT,MAAM,UACN8F,QAASwR,EACTG,SACE,SAAC,IAAO,CACNtZ,MAAO,GACP2B,KAAMqW,EAAa,8BAAgC,+BAGvD5W,IAAE,QACAnB,OAAQ,GACRyD,WAAY,EACZvD,aAAc,EACdkE,WAAY,WACZxC,MAAO,gBACPxB,eAAgB,gBAChBuH,EAAG,SAAChI,GAAK,OAAKA,EAAM4E,QAAQ,EAAG,IAAK,EAAG,IAAI,GACxCpD,IAEDwB,GAAK,aAERwW,IAGP,CCvBe,SAASG,GAAoB,GAAkD,IAAhD7I,EAAY,EAAZA,aAAcsH,EAAU,EAAVA,WAAYmB,EAAU,EAAVA,WAChEK,EAAmBC,KAAKC,KAAQhJ,EAAaO,SAASxN,KAAI,SAACgJ,GAAI,OAAKA,EAAKkN,WAAW,MAE1F,OACE,UAAC3W,EAAA,EAAK,CACJE,SAAU,EACV9B,GAAI,CACF0X,GAAI,EACJ7Y,OAAQ,EACR2Z,SAAU,SACVC,UAAW,SAACja,GAAK,0BAAkBA,EAAMY,QAAQsZ,QAAO,GACxD,WAEF,UAACZ,GAAsB,CACrBlB,WAAYA,KAAgBwB,EAAiB1W,OAC7CqW,WAAYA,EACZlY,UAAWuY,EAAiB1W,OAC5B1B,IAAE,WACK4W,GAAc,CACjB+B,aAAc,SAACna,GAAK,0BAAkBA,EAAMY,QAAQsZ,QAAO,IAE7D,0BAEYN,EAAiB1W,OAAM,QAGvC,SAACb,EAAA,EAAG,CACFb,GAAI,CACFwY,SAAU,SACV3Z,OAAQ+X,EAAa,EAAI,EACzB/S,WAAY,SAACrF,GAAK,OAChBA,EAAMsF,YAAYC,OAAO,SAAU,CACjCC,SAAUxF,EAAMsF,YAAYE,SAASC,SACrC,GACJ,UAEF,SAAC,IAAS,UACPmU,EAAiB/V,KAAI,SAACuW,EAAYtP,GAAK,OACtC,SAACuP,GAAc,CAA+BD,WAAYA,GAArCA,EAAWvY,KAAOiJ,EAAiC,UAMpF,CAQA,SAASuP,GAAe,GAAsC,IAApCD,EAAU,EAAVA,WACxB,OACE,UAAChX,EAAA,EAAK,CAACC,UAAU,MAAM7C,WAAW,SAASgB,GAAI,CAAEuC,GAAI,EAAG0I,GAAI,KAAM,WAChE,SAACrJ,EAAA,EAAK,CACJ5C,WAAW,SACXC,eAAe,SACfe,GAAI,CACFpB,MAAO,GACPC,OAAQ,GACRyD,WAAY,EACZvD,aAAc,EACdyZ,SAAU,SACV3R,SAAU,WACV1H,gBAAiB,sBACjB,UAEF,SAAC,MAAa,CACZ8H,WAAS,EACTpB,KAAM+S,EAAW7S,QACjBM,WAAY,kBAAMkR,QAAQuB,IAAI,WAAW,EACzC9Y,GAAI,CAAEpB,MAAO,GAAIC,OAAQ,SAI7B,UAAC+C,EAAA,EAAK,CAACE,SAAU,EAAG9B,GAAI,CAAE2L,GAAI,IAAKT,SAAU,GAAI,WAC/C,SAACnJ,EAAA,EAAU,CAACC,QAAQ,QAAQQ,QAAM,WAC/BoW,EAAWvY,QAGd,SAAC0B,EAAA,EAAU,CAACS,QAAM,EAACR,QAAQ,UAAUhC,GAAI,CAAES,MAAO,iBAAkB3B,QAAS,SAAU,UACpFia,EAAAA,GAAAA,IAAUH,EAAWI,oBAKhC,C,gBC5Fe,SAASC,GAAe,GAAiD,IAA/ClI,EAAW,EAAXA,YAAa6F,EAAU,EAAVA,WAAYmB,EAAU,EAAVA,WAChE,OAAKhH,GAKH,4BACE,UAACnP,EAAA,EAAK,CAAC5C,WAAW,SAASgB,GAAI,CAAE6L,GAAI,GAAI,WACvC,SAACqK,GAAA,EAAM,CACLlF,IAAKD,EAAY1Q,KACjB8G,IAAK4J,EAAYE,OACjBjR,GAAI,CAAEpB,MAAO,GAAIC,OAAQ,GAAI8C,GAAI,MAGnC,SAACI,EAAA,EAAU,CAACC,QAAQ,YAAW,SAAE+O,EAAY1Q,QAE7C,SAAC0B,EAAA,EAAU,CAACC,QAAQ,QAAQhC,GAAI,CAAES,MAAO,iBAAkB8B,GAAI,IAAM,SAClEwO,EAAYmI,WAIjB,SAAC9D,GAAA,EAAO,KAER,SAAC0C,GAAsB,CAAClB,WAAYA,EAAYmB,WAAYA,EAAW,0BAIvE,SAACoB,GAAA,EAAQ,CAACC,GAAIxC,EAAW,UACvB,SAAChV,EAAA,EAAK,CACJwB,QAAS,EACTpD,GAAI,CACFwG,EAAG,SAAChI,GAAK,OAAKA,EAAM4E,QAAQ,EAAG,IAAK,IAAK,IAAI,GAC7C,SAED,CACC,CAAE7C,KAAM,eAAgBmT,MAAO3C,EAAYsI,SAC3C,CAAE9Y,KAAM,iBAAkBmT,MAAO3C,EAAYuI,OAC7C,CAAE/Y,KAAM,iBAAkBmT,MAAO3C,EAAYoE,QAC7C9S,KAAI,SAACkX,EAAKjQ,GAAK,OACf,UAAC1H,EAAA,EAAK,CAAgBC,UAAU,MAAK,WACnC,SAAC,IAAO,CACNtB,KAAMgZ,EAAIhZ,KACVP,GAAI,CACFe,GAAI,EACJwB,GAAI,GACJD,WAAY,EACZ7B,MAAO,oBAGX,SAACsB,EAAA,EAAU,CAACC,QAAQ,QAAQQ,OAAkB,IAAV8G,EAAY,SAC7CiQ,EAAI7F,UAXG6F,EAAIhZ,KAaR,WAlDT,IAwDX,C,2BC3De,SAASiZ,GAA8B,GAAwC,IAAtCzI,EAAW,EAAXA,YAAagE,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QACjE3U,EAAgC0Q,EAAhC1Q,KAAM4Q,EAA0BF,EAA1BE,OAAQiI,EAAkBnI,EAAlBmI,KAAMG,EAAYtI,EAAZsI,QAE5B,OACE,UAACI,GAAA,EAAM,CAAC3F,WAAS,EAAC4F,SAAS,KAAK3E,KAAMA,EAAMC,QAASA,EAAQ,WAC3D,SAAC1O,EAAA,EAAU,CAACC,QAASyO,EAAShV,GAAI,CAAE6G,SAAU,WAAYH,MAAO,EAAGD,IAAK,GAAI,UAC3E,SAAC,IAAO,CAAClG,KAAK,sBAGhB,SAACoZ,GAAA,EAAa,CAAC3Z,GAAI,CAAEwG,EAAG,GAAI,UAC1B,UAAC5E,EAAA,EAAK,CAACC,UAAU,MAAMuB,QAAS,EAAE,WAChC,SAAC,IAAY,CAAC4N,IAAK3Q,EAAM8G,IAAK8J,EAAQ5Q,KAAMA,EAAML,GAAI,CAAEpB,MAAO,GAAIC,OAAQ,OAE3E,UAAC+C,EAAA,EAAK,CAACwB,QAAS,EAAE,WAChB,SAACrB,EAAA,EAAU,CAACC,QAAQ,UAAUhC,GAAI,CAAES,MAAO,gBAAiB,SACzDyY,KAGH,SAACnX,EAAA,EAAU,CAACC,QAAQ,KAAI,SAAE3B,KAE1B,UAACuB,EAAA,EAAK,CAACC,UAAU,MAAM7B,GAAI,CAAEiD,WAAY,UAAWxC,MAAO,kBAAmB,WAC5E,SAAC,IAAO,CAACF,KAAK,eAAe3B,MAAO,GAAIoB,GAAI,CAAEsC,WAAY,EAAGvB,GAAI,MAChEsY,MAGH,UAACzX,EAAA,EAAK,CAACC,UAAU,MAAM7B,GAAI,CAAE4Z,GAAI,GAAI,WACnC,SAACtT,EAAA,EAAU,CAAC7F,MAAM,OAAM,UACtB,SAAC,IAAO,CAACF,KAAK,+BAGhB,SAAC+F,EAAA,EAAU,CAAC7F,MAAM,UAAS,UACzB,SAAC,IAAO,CAACF,KAAK,sBAGhB,SAAC+F,EAAA,EAAU,CAAC7F,MAAM,UAAS,UACzB,SAAC,IAAO,CAACF,KAAK,sBAGhB,SAAC+F,EAAA,EAAU,CAAC7F,MAAM,QAAO,UACvB,SAAC,IAAO,CAACF,KAAK,kCAQ9B,CCvCe,SAASsZ,GAAc,GAM3B,IALTjI,EAAY,EAAZA,aACAkI,EAAY,EAAZA,aACAC,EAAc,EAAdA,eACAnD,EAAU,EAAVA,WACAmB,EAAU,EAAVA,WAEA,OACE,iCACE,UAACD,GAAsB,CAAClB,WAAYA,EAAYmB,WAAYA,EAAW,sBAC3DnG,EAAalQ,OAAM,QAG/B,SAACb,EAAA,EAAG,CACFb,GAAI,CACFnB,OAAQ+X,EAAaoD,IAAa,EAClCnW,WAAY,SAACrF,GAAK,OAChBA,EAAMsF,YAAYC,OAAO,SAAU,CACjCC,SAAUxF,EAAMsF,YAAYE,SAASC,SACrC,GACJ,UAEF,SAAC,IAAS,UACP2N,EAAavP,KAAI,SAAC0O,GAAW,OAC5B,SAACkJ,GAAW,CAEVlJ,YAAaA,EACbgE,KAAM+E,IAAiB/I,EAAYG,GACnCgJ,OAAQ,kBAAMH,EAAehJ,EAAYG,GAAG,EAC5C8D,QAAS,kBAAM+E,EAAe,KAAK,GAJ9BhJ,EAAYG,GAKjB,UAMd,CAWA,SAAS+I,GAAY,GAA2D,IAAzDlJ,EAAW,EAAXA,YAAagE,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAASkF,EAAM,EAANA,OACzC7Z,EAA+B0Q,EAA/B1Q,KAAM4Q,EAAyBF,EAAzBE,OAAQvS,EAAiBqS,EAAjBrS,OAAQwa,EAASnI,EAATmI,KAE9B,OACE,iCACE,UAAC9I,EAAA,EAAc,CAAC7J,QAAS2T,EAAQla,GAAI,CAAEnB,OA9D9B,GA8D8CoM,GAAI,KAAM,WAC/D,SAACqF,EAAA,EAAc,WACb,SAAC,IAAY,CACXU,IAAK3Q,EACL8G,IAAK8J,EACLE,WAAY,CACVP,cAAc,SAAC,IAAW,CAAClS,OAAQA,UAKzC,SAAC0S,EAAA,EAAY,CACXC,QAAShR,EACTmR,UAAW0H,EACX3H,uBAAwB,CAAE/O,QAAQ,EAAMR,QAAS,aACjD0P,yBAA0B,CAAElP,QAAQ,SAIxC,SAACgX,GAA6B,CAACzI,YAAaA,EAAagE,KAAMA,EAAMC,QAASA,MAGpF,CCjFA,IAAMmB,IAAqB5X,EAAAA,EAAAA,KAAO,SAACqE,GAAK,OACtC,SAAC0D,EAAA,GAAU,QAAC8P,eAAa,GAAKxT,GAAS,GADdrE,EAEP,gBAAGC,EAAK,EAALA,MAAK,MAAQ,CAClCkI,MAAO,EACPC,OAAQ,EACR/H,MAAO,GACPC,OAAQ,GACRgI,SAAU,WACVJ,IAAKjI,EAAM4E,QAAQ,GACnBc,UAAW1F,EAAM2F,cAAcgW,GAC/Bhb,gBAAiBX,EAAMY,QAAQgb,WAAWC,MAC1CzW,OAAO,aAAD,OAAepF,EAAMY,QAAQsZ,SACnC4B,YAAa,EACbvb,aAAa,gBACb8E,WAAYrF,EAAMsF,YAAYC,OAAO,OACrC,UAAW,CACT5E,gBAAiBX,EAAMY,QAAQgb,WAAWG,SAE7C,IAWc,SAASC,GAAS,GAAwC,IAAtClL,EAAY,EAAZA,aAAcsC,EAAY,EAAZA,aACzCpT,GAAQyB,EAAAA,EAAAA,KAERyS,GAAYC,EAAAA,EAAAA,GAAc,KAAM,MAEtC,GAA8B4B,EAAAA,EAAAA,WAAS,GAAK,eAArChF,EAAO,KAAEkH,EAAU,KAE1B,GAAgClC,EAAAA,EAAAA,WAAS,GAAK,eAAvCkG,EAAQ,KAAEC,EAAW,KAE5B,GAA8CnG,EAAAA,EAAAA,WAAS,GAAK,eAArDoG,EAAe,KAAEC,EAAkB,KAE1C,GAAgDrG,EAAAA,EAAAA,WAAS,GAAK,eAAvDsG,EAAgB,KAAEC,EAAmB,KAE5C,GAAoCvG,EAAAA,EAAAA,UAAwB,MAAK,eAA1DwG,EAAU,KAAEC,EAAa,KAM1B1I,EAAa,WACjBmE,GAAW,EACb,EAEM1G,EAAU6B,EAAalQ,OAAS,GAEtCmV,EAAAA,EAAAA,YAAU,WACHnE,EAVL+D,GAAW,GAWTnE,GAKJ,GAAG,CAACI,IAEJ,IAAM9R,GACJ,gCACGmP,GACC,SAAC8J,GAAa,CACZC,aAAciB,EACdnJ,aAAcA,EACdgF,WAAYiE,EACZ9C,WAAY,kBAAM+C,GAAqBD,EAAiB,EACxDd,eAAgB,SAACkB,GAAa,OAAKD,EAAcC,EAAc,KAGjE,SAAChC,GAAc,CACblI,YAAaa,EAAa,GAC1BgF,WAAY6D,EACZ1C,WAAY,kBAAM2C,GAAaD,EAAS,KAI5C,SAACtC,GAAmB,CAClB7I,aAAcA,EACdsH,WAAY+D,EACZ5C,WAAY,kBAAM6C,GAAoBD,EAAgB,OAK5D,OACE,UAAC9Z,EAAA,EAAG,CAACb,GAAI,CAAE6G,SAAU,YAAa,WAChC,SAAC,GAAkB,CACjBN,QAAS,kBAAMkQ,GAAYlH,EAAQ,EACnCvP,IAAE,UACIuP,GACFmD,GAAa,CACXhM,MA1EI,MA4ER,UAEF,SAAC,IAAO,CACN9H,MAAO,GACP2B,KAAMgP,EAAU,6BAA+B,8BAIlDmD,GACC,SAAC8E,EAAA,GAAM,CACLzC,KAAMxF,EACN2L,OAAO,QACPlZ,QAAQ,aACRyV,WAAY,CACVzX,GAAI,CACFpB,MAAO,EACPiI,SAAU,WAGd7G,IAAE,QACAnB,OAAQ,EACRD,MAjGM,IAkGNiF,WAAYrF,EAAMsF,YAAYC,OAAO,WAChCwL,GAAW,CACd3Q,MAAO,IAET,SAEDgC,KAGH,SAAC4W,EAAA,GAAM,CACL0D,OAAO,QACPnG,KAAMxF,EACNyF,QAAS1C,EACTsF,WAAY,CAAEC,aAAa,GAC3BJ,WAAY,CACVzX,GAAI,CACFpB,MAlHI,MAoHN,SAEDgC,MAKX,C,kEC/Ie,SAASua,GAAiB,GAM9B,IALTtb,EAAQ,EAARA,SACAoT,EAAc,EAAdA,eACAmI,EAAM,EAANA,OACApb,EAAE,EAAFA,GACGwB,GAAK,aAEF6Z,GAAeC,EAAAA,EAAAA,QAAyB,MAE9C,GAA8B/G,EAAAA,EAAAA,UAAS,IAAG,eAAnCtC,EAAO,KAAEsJ,EAAU,KAEpBC,EAAoB,WAAO,IAAD,EACV,QAApB,EAAAH,EAAaI,eAAO,OAApB,EAAsBC,OACxB,EAmBA,OACE,iCACE,SAACC,GAAA,IAAS,QACRjI,MAAOzB,EACP2J,QArBa,SAAC/G,GACA,UAAdA,EAAM/O,MACJsV,GAAUnJ,GAAWgB,GACvBmI,EAAO,CACLnI,eAAAA,EACA4I,UCnCD,uCAAuCC,QAAQ,SAAS,SAAUC,GACvE,IAAMC,EAAqB,GAAhBhO,KAAKiO,SAAiB,EAEjC,OADY,MAANF,EAAYC,EAAS,EAAJA,EAAW,GACzBE,SAAS,GACpB,IDgCQjK,QAAAA,EACAC,YAAa,OACbqG,YAAa,GACbzI,UAAW,IAAIX,KACf6C,SAhCc,2CAmClBuJ,EAAW,IAEf,EAOM5H,SAAU,SAACkB,GAAK,OAAK0G,EAAW1G,EAAMpS,OAAOiR,MAAM,EACnDK,YAAY,iBACZE,gBACE,SAACC,GAAA,EAAc,CAACrN,SAAS,QAAO,UAC9B,SAACP,EAAA,EAAU,CAAC3H,KAAK,QAAO,UACtB,SAAC,IAAO,CAAC4B,KAAK,8BAIpB4b,cACE,UAACva,EAAA,EAAK,CAACC,UAAU,MAAMuB,QAAS,EAAGpD,GAAI,CAAEsC,WAAY,EAAGvB,GAAI,KAAM,WAChE,SAACuF,EAAA,EAAU,CAACzG,SAAUA,EAAUlB,KAAK,QAAQ4H,QAASiV,EAAkB,UACtE,SAAC,IAAO,CAACjb,KAAK,oCAGhB,SAAC+F,EAAA,EAAU,CAACzG,SAAUA,EAAUlB,KAAK,QAAQ4H,QAASiV,EAAkB,UACtE,SAAC,IAAO,CAACjb,KAAK,yBAGhB,SAAC+F,EAAA,EAAU,CAACzG,SAAUA,EAAUlB,KAAK,QAAO,UAC1C,SAAC,IAAO,CAAC4B,KAAK,sBAIpBP,IAAE,QACA+K,GAAI,EACJlM,OAAQ,GACRyD,WAAY,EACZmW,UAAW,SAACja,GAAK,0BAAkBA,EAAMY,QAAQsZ,QAAO,GACrD1Y,IAEDwB,KAGN,kBAAOwE,KAAK,OAAOoW,IAAKf,EAAcgB,MAAO,CAAEvd,QAAS,YAG9D,C,4BE3Ee,SAASwd,GAAgB,GAAmD,IAAjDrK,EAAO,EAAPA,QAAS3C,EAAY,EAAZA,aAAciN,EAAc,EAAdA,eACzDxK,EAASzC,EAAasC,aAAayB,MACvC,SAACtC,GAAW,OAAKA,EAAYG,KAAOe,EAAQD,QAAQ,IAGhDwK,EAbgB,2CAcpBvK,EAAQD,SACJ,CACEhM,KAAM,MAER,CACEiL,OAAc,OAANc,QAAM,IAANA,OAAM,EAANA,EAAQd,OAChB5Q,KAAY,OAAN0R,QAAM,IAANA,OAAM,EAANA,EAAQ1R,MAGhBoc,EAAqC,OAAvBD,EAAcxW,KAE5B0W,EAAkC,UAAxBzK,EAAQC,YAElByK,EAAYH,EAAcnc,MAAQmc,EAAcnc,KAAKqF,MAAM,KAAK,GAEtE,OACE,UAAC9D,EAAA,EAAK,CAACC,UAAU,MAAM5C,eAAgBwd,EAAc,WAAa,QAASzc,GAAI,CAAE2B,GAAI,GAAI,WACrF8a,IACA,SAACvG,GAAA,EAAM,CACLlF,IAAKwL,EAAcnc,KACnB8G,IAAKqV,EAAcvL,OACnBjR,GAAI,CAAEpB,MAAO,GAAIC,OAAQ,GAAIkC,GAAI,MAIrC,UAACa,EAAA,EAAK,CAACwB,QAAS,EAAGpE,WAAW,WAAU,WACtC,UAAC+C,EAAA,EAAU,CACTS,QAAM,EACNR,QAAQ,UACRhC,IAAE,QACAS,MAAO,kBACFgc,GAAe,CAClB1b,GAAI,SAEN,WAEA0b,GAAW,UAAOE,EAAS,KAAG,QAC/BzN,EAA0B,IAAIC,KAAK8C,EAAQnC,WAAY,CACtDpC,WAAW,QAIf,SAAC9L,EAAA,EAAK,CACJ5B,IAAE,gBACAwG,EAAG,IACH0E,SAAU,GACVwO,SAAU,IACV3a,aAAc,EACdyZ,SAAU,SACVvV,WAAY,QACZN,QAAS,sBACL8Z,GAAe,CACjBhc,MAAO,WACPkC,QAAS,oBAEP+Z,GAAW,CACblW,EAAG,IAEL,SAEDkW,GACC,SAAC,KAAK,CACJ1L,IAAI,aACJ7J,IAAK8K,EAAQE,KACb5L,QAAS,kBAAMgW,EAAetK,EAAQE,KAAK,EAC3CnS,GAAI,CACFU,OAAQ,UACR,UAAW,CACTkG,QAAS,OAKfqL,EAAQE,YAMpB,CCxFe,SAASyK,GAAgB,GAA0B,IAAxBtN,EAAY,EAAZA,aAClCuN,GAAYvB,EAAAA,EAAAA,QAAuB,MAEzC,GAA0C/G,EAAAA,EAAAA,WAAkB,GAAE,eAAvDuI,EAAa,KAAEC,EAAgB,MAEtClG,EAAAA,EAAAA,YAAU,WAEFgG,EAAUpB,UACZoB,EAAUpB,QAAQuB,UAAYH,EAAUpB,QAAQwB,aAItD,GAAG,CAAC3N,EAAaO,WAEjB,IAAMqN,EAAiB5N,EAAaO,SACjC/H,QAAO,SAAC+H,GAAQ,MAA8B,UAAzBA,EAASqC,WAAuB,IACrD7P,KAAI,SAACwN,GAAQ,MAAM,CAAE1I,IAAK0I,EAASsC,KAAM,IAW5C,OACE,iCACE,SAAC,IAAS,CACRgL,oBAAqB,CACnBf,IAAKS,GAEP7c,GAAI,CAAEwG,EAAG,EAAG3H,OAAQ,GAAI,SAEvByQ,EAAaO,SAASxN,KAAI,SAAC4P,GAAO,OACjC,SAACqK,GAAe,CAEdrK,QAASA,EACT3C,aAAcA,EACdiN,eAAgB,kBAtBC,SAACa,GAC1B,IAAMC,EAAaH,EAAeI,WAAU,SAACC,GAAK,OAAKA,EAAMpW,MAAQiW,CAAQ,IAC7EL,EAAiBM,EACnB,CAmBgCG,CAAmBvL,EAAQE,KAAK,GAHjDF,EAAQf,GAIb,OAIN,SAAC,KAAQ,CACP5H,MAAOwT,EACP5U,OAAQgV,EACRnI,KAAM+H,GAAiB,EACvBW,MA1BsB,WAC1BV,GAAkB,EACpB,MA4BF,C,gBCnDe,SAASW,GAAiB,GAA0B,IAAxB9L,EAAY,EAAZA,aACnC7B,EAAU6B,EAAalQ,OAAS,EAEhCic,EAAkB/L,EAAalQ,OAASkQ,EAAa,GAAK,KAEhE,OACE,UAAChQ,EAAA,EAAK,CACJC,UAAU,MACV7C,WAAW,SACXgB,GAAI,CACFwG,EAAG,SAAChI,GAAK,OAAKA,EAAM4E,QAAQ,EAAG,EAAG,EAAG,EAAE,GACvC,UAED2M,GACC,UAACnO,EAAA,EAAK,CAACE,SAAU,EAAE,WACjB,SAAC,IAAiB,CAAC8b,IAAK,EAAE,SACvBhM,EAAavP,KAAI,SAAC0O,GAAW,OAC5B,SAAC,IAAY,CAAsBC,IAAKD,EAAY1Q,KAAM8G,IAAK4J,EAAYE,QAAxDF,EAAYG,GAAsD,OAIzF,UAAClQ,GAAA,EAAI,CACHgB,QAAQ,QACRhC,GAAI,CACFuC,GAAI,GACJvD,WAAY,SACZF,QAAS,cACT2B,MAAO,kBACP,UAEDmR,EAAalQ,OAAM,YACpB,SAAC,IAAO,CAACnB,KAAK,6BAA6B3B,MAAO,YAItD,UAACgD,EAAA,EAAK,CAACE,SAAU,EAAGD,UAAU,MAAM7C,WAAW,SAASoE,QAAS,EAAE,WACjE,SAAC,IAAY,CACX+D,IAAoB,OAAfwW,QAAe,IAAfA,OAAe,EAAfA,EAAiB1M,OACtBD,IAAoB,OAAf2M,QAAe,IAAfA,OAAe,EAAfA,EAAiBtd,KACtB8Q,WAAY,CACVP,cAAc,SAAC,IAAW,CAAClS,OAAuB,OAAfif,QAAe,IAAfA,OAAe,EAAfA,EAAiBjf,aAIxD,4BACE,SAACqD,EAAA,EAAU,CAACC,QAAQ,YAAW,SAAiB,OAAf2b,QAAe,IAAfA,OAAe,EAAfA,EAAiBtd,QAElD,SAAC0B,EAAA,EAAU,CAACC,QAAQ,QAAQhC,GAAI,CAAES,MAAO,kBAAmB,SAC7B,aAAb,OAAfkd,QAAe,IAAfA,OAAe,EAAfA,EAAiBjf,SACD,OAAfif,QAAe,IAAfA,OAAe,EAAfA,EAAiB/N,gBAAgBiO,EAAAA,GAAAA,IAAsB,OAAfF,QAAe,IAAfA,OAAe,EAAfA,EAAiB/N,eAEzD,SAAC/O,EAAA,EAAG,CAACC,UAAU,OAAOd,GAAI,CAAEwV,cAAe,cAAe,SACxC,OAAfmI,QAAe,IAAfA,OAAe,EAAfA,EAAiBjf,kBAQ9B,SAAC4H,EAAA,EAAU,WACT,SAAC,IAAO,CAAC/F,KAAK,sBAGhB,SAAC+F,EAAA,EAAU,WACT,SAAC,IAAO,CAAC/F,KAAK,sBAGhB,SAAC+F,EAAA,EAAU,WACT,SAAC,IAAO,CAAC/F,KAAK,+BAItB,C,sJC7De,SAASud,GAAkB,GAM/B,IALTC,EAAQ,EAARA,SACAC,EAAU,EAAVA,WACAC,EAAe,EAAfA,gBACAje,EAAE,EAAFA,GACGwB,GAAK,aAER,GAAgD+S,EAAAA,EAAAA,UAAS,IAAG,eAArD2J,EAAgB,KAAEC,EAAmB,KAO5C,OACE,UAACvc,EAAA,GAAK,gBACJwB,QAAS,EACTvB,UAAU,MACV7C,WAAW,SACXgB,IAAE,QACA6L,GAAI,EACJZ,GAAI,KACDjL,IAEDwB,GAAK,eAET,SAACO,EAAA,EAAU,CAACC,QAAQ,YAAYhC,GAAI,CAAES,MAAO,kBAAmB,kBAIhE,SAAC2d,GAAA,EAAY,CACXpe,GAAI,CAAEkL,SAAU,KAChBmT,UAAQ,EACRC,UAAW,KACXC,eAAe,SAAC,KAAc,CAACvI,MAAOkI,IACtCvK,SAAU,SAACkB,EAAOnB,GAAK,OA1BA8K,EA0ByB9K,EAzBpDyK,EAAoB,SACpBF,EAAgBO,GAFU,IAACA,CA0B+B,EACtDC,cAAe,SAAC5J,EAAOnB,GAAK,OAAKyK,EAAoBzK,EAAM,EAC3DpH,QAASyR,EACTW,eAAgB,SAACC,GAA2B,OAAKA,EAAUte,IAAI,EAC/Due,YAAa,SAACzH,GAAM,OAClB,SAACtU,GAAA,GAAS,kBACJsU,GAAM,IACVxY,KAAK,QACLoV,YAAaiK,EAAWtc,OAAS,cAAgB,KACjD,EAEJmd,aAAc,SAACjc,EAAO+b,EAAU,GAA+B,IAA5BG,EAAU,EAAVA,WAAYvM,EAAQ,EAARA,SACrClS,EAAiBse,EAAjBte,KAAM4Q,EAAW0N,EAAX1N,OACR8N,EAAUC,KAAM3e,EAAMye,GACtBG,EAAQC,KAAM7e,EAAM0e,GAE1B,OACE,UAACle,EAAA,GAAG,gBACFC,UAAU,KACVd,GAAI,CACFwG,EAAG,oBAED5D,GAAK,eAET,UAAC/B,EAAA,EAAG,CACFb,GAAI,CACFe,GAAI,IACJnC,MAAO,GACPC,OAAQ,GACR2Z,SAAU,SACVzZ,aAAc,MACd8H,SAAU,YACV,WAEF,SAACqP,GAAA,EAAM,CAAClF,IAAK3Q,EAAM8G,IAAK8J,KACxB,SAACpQ,EAAA,EAAG,CACFb,IAAE,QACAyG,IAAK,EACLG,QAAS,EACThI,MAAO,OACPC,OAAQ,OACRC,QAAS,OACT+H,SAAU,WACV7H,WAAY,SACZC,eAAgB,SAChB0D,QAAS,SAACnE,GAAK,OAAKgF,EAAAA,GAAAA,IAAMhF,EAAMY,QAAQqE,KAAK,KAAM,GAAI,EACvDI,WAAY,SAACrF,GAAK,OAChBA,EAAMsF,YAAYC,OAAO,UAAW,CAClCob,OAAQ3gB,EAAMsF,YAAYqb,OAAOC,UACjCpb,SAAUxF,EAAMsF,YAAYE,SAASC,SACrC,GACAsO,GAAY,CACd3L,QAAS,EACTnG,MAAO,iBAET,UAEF,SAAC,IAAO,CAACF,KAAK,4BAIjB0e,EAAM5c,KAAI,SAACgd,EAAM/V,GAAK,OACrB,SAACvH,EAAA,EAAU,CAETC,QAAQ,YACRvB,MAAO4e,EAAKC,UAAY,UAAY,cAAc,SAEjDD,EAAKzf,MAJD0J,EAKM,OAIrB,EACAiW,WAAY,SAACf,EAAoBgB,GAAW,OAC1ChB,EAAmBnc,KAAI,SAACsc,EAAWrV,GAAK,OACtC,mBAACmW,GAAA,GAAI,kBACCD,EAAY,CAAElW,MAAAA,KAAQ,IAC1BxD,IAAK6Y,EAAUzN,GACfvS,KAAK,QACL+gB,MAAOf,EAAUte,KACjB4Q,QAAQ,SAACiF,GAAA,EAAM,CAAClF,IAAK2N,EAAUte,KAAM8G,IAAKwX,EAAU1N,WACpD,GACF,OAKZ,CCpHe,SAAS0O,KACtB,IAAQC,GAAiBC,EAAAA,EAAAA,MAAjBD,aAEFE,GAAWC,EAAAA,EAAAA,MAEXvN,GAAWC,EAAAA,EAAAA,MAETuN,GAAaC,EAAAA,EAAAA,MAAbD,SAEoC,GAAXE,EAAAA,EAAAA,MAAzB/M,gBAAAA,OAAe,MAAG,GAAE,EAE5B,GAAoFgN,EAAAA,EAAAA,KAClF,SAACtV,GAAK,OAAKA,EAAMuV,IAAI,IADfrC,EAAQ,EAARA,SAAUC,EAAU,EAAVA,WAAYpM,EAAY,EAAZA,aAAc4E,EAAoB,EAApBA,qBAAsBnE,EAAa,EAAbA,cAI5DgO,GAAuBF,EAAAA,EAAAA,KAAY,WACvC,OAAI3J,EACKnE,EAAca,KAAKsD,GAGrB,CACLtF,GAAI,GACJrB,SAAU,GACV+B,aAAc,GACd1B,YAAa,EACblK,KAAM,GAEV,IAEMsa,IAAenN,EAEfoN,EAAsB3O,EAAa9J,QAAO,SAACuD,GAAI,MAjC/B,2CAiCoCA,EAAK6F,EAAsB,KAErF2F,EAAAA,EAAAA,YAAU,WACRiJ,GAASU,EAAAA,EAAAA,OACTV,GAASW,EAAAA,EAAAA,MACX,GAAG,CAACX,KAEJjJ,EAAAA,EAAAA,YAAU,WACR,IAAMlH,EAAU,yCAAG,mFAC+B,OAAhDmQ,GAASY,EAAAA,EAAAA,IAAgB,GAAD,OAAIvN,KAAoB,kBAExC2M,GAASa,EAAAA,EAAAA,IAAgB,GAAD,OAAIxN,KAAoB,KAAD,kDAErDoE,QAAQ7X,MAAM,EAAD,IACb8S,EAASe,EAAAA,GAAAA,KAAAA,KAAyB,yDAErC,kBARe,mCAUZJ,EACFxD,IACS6G,GACTsJ,GAASc,EAAAA,EAAAA,MAIb,GAAG,CAACzN,KAEJ0D,EAAAA,EAAAA,YAAU,WACJL,GACFsJ,GAASe,EAAAA,EAAAA,IAAuBrK,GAEpC,GAAG,CAACsJ,EAAUtJ,IAEd,IAIMsK,EAAiB,yCAAG,WAAOpN,GAAuB,sEACtD,IACEoM,GAASiB,EAAAA,EAAAA,IAAYrN,GAGvB,CAFE,MAAOhU,GACP6X,QAAQ7X,MAAMA,EAChB,CAAC,2CACF,gBANsB,sCAQvB,OACE,UAACshB,EAAA,EAAS,CAACtH,UAAUkG,GAAuB,KAAK,WAC/C,SAAC,IAAiB,CAChBte,QAAQ,OACRF,MAAO,CACL,CACEf,KAAM,YACNC,KAAMiT,EAAAA,GAAAA,MAER,CAAElT,KAAM,YAIZ,UAAC4gB,EAAA,EAAI,CAACjhB,GAAI,CAAEnB,OAAQ,OAAQC,QAAS,QAAS,WAC5C,SAACyX,GAAO,CAAClE,cAAeA,EAAemE,qBAAsBA,KAE7D,UAAC5U,EAAA,EAAK,CAACE,SAAU,EAAE,UAChBwe,GACC,SAAC5C,GAAgB,CAAC9L,aAAc2O,KAEhC,SAACzC,GAAiB,CAChBE,WAAYA,EACZD,SAAUmD,OAAOC,OAAOpD,EAAS7K,MACjC+K,gBAnCgB,SAACO,GAC3BsB,GAASsB,EAAAA,EAAAA,IAAc5C,GACzB,KAqCQ,UAAC5c,EAAA,EAAK,CACJC,UAAU,MACVC,SAAU,EACV9B,GAAI,CACFwY,SAAU,SACVC,UAAW,SAACja,GAAK,0BAAkBA,EAAMY,QAAQsZ,QAAO,GACxD,WAEF,UAAC9W,EAAA,EAAK,CAACE,SAAU,EAAE,WACjB,SAAC8a,GAAe,CAACtN,aAAc+Q,KAE/B,SAAClF,GAAgB,CACflI,eAAgBuD,EAChB4E,OAAQ0F,EACRjhB,SACEmgB,IAAazM,EAAAA,GAAAA,KAAAA,MAA4ByM,IAAazM,EAAAA,GAAAA,KAAAA,SAK3D+M,IACC,SAAC9F,GAAQ,CAAClL,aAAc+Q,EAAsBzO,aAAc2O,eAO1E,CChKe,SAASc,KACtB,OACE,iCACE,SAAC,KAAM,WACL,qDAGF,SAAC1B,GAAI,MAGX,C,wKCdO,SAAS2B,EAA6BC,GAC3C,OAAOC,EAAAA,EAAAA,GAAqB,mBAAoBD,EAClD,EAC6BE,EAAAA,EAAAA,GAAuB,mBAAoB,CAAC,OAAQ,aAAjF,I,qBCHMC,EAAY,CAAC,YAAa,YAoB1BC,GAAoBpjB,EAAAA,EAAAA,IAAO,MAAO,CACtC8B,KAAM,mBACNkhB,KAAM,OACNK,kBAAmB,SAAChf,EAAOpC,GACzB,IACE/B,EACEmE,EADFnE,WAEF,MAAO,CAAC+B,EAAOqhB,KAAMpjB,EAAWqjB,UAAYthB,EAAOshB,SACrD,GARwBvjB,EASvB,gBACDC,EAAK,EAALA,MACAC,EAAU,EAAVA,WAAU,OACNsjB,EAAAA,EAAAA,GAAS,CACbC,KAAM,WAENC,wBAAyB,QACzBC,UAAW,OACX/e,QAAS,aACR1E,EAAWqjB,SAAW,CACvB3e,QAAS,YACTsV,UAAW,aAAF,QAAgBja,EAAM2jB,MAAQ3jB,GAAOY,QAAQsZ,SACtDC,aAAc,aAAF,QAAgBna,EAAM2jB,MAAQ3jB,GAAOY,QAAQsZ,WACvD,qBACG0J,EAAAA,EAAAA,KAAuB,QAAS,CACnCC,WAAY,IAEd,IAgDF,EA/CmCC,EAAAA,YAAiB,SAAuBC,EAASnG,GAClF,IAAMxZ,GAAQ4f,EAAAA,EAAAA,GAAc,CAC1B5f,MAAO2f,EACPliB,KAAM,qBAGJyK,EAEElI,EAFFkI,UAAS,EAEPlI,EADFkf,SAAAA,OAAQ,IAAG,GAAK,EAElBtgB,GAAQihB,EAAAA,EAAAA,GAA8B7f,EAAO8e,GACzCjjB,GAAasjB,EAAAA,EAAAA,GAAS,CAAC,EAAGnf,EAAO,CACrCkf,SAAAA,IAEIY,EAlDkB,SAAAjkB,GACxB,IACEikB,EAEEjkB,EAFFikB,QAGIC,EAAQ,CACZd,KAAM,CAAC,OAFLpjB,EADFqjB,UAG2B,aAE7B,OAAOc,EAAAA,EAAAA,GAAeD,EAAOrB,EAA8BoB,EAC7D,CAyCkBG,CAAkBpkB,GAClC,OAAoBqkB,EAAAA,EAAAA,KAAKnB,GAAmBI,EAAAA,EAAAA,GAAS,CACnDjX,WAAWiY,EAAAA,EAAAA,GAAKL,EAAQb,KAAM/W,GAC9BrM,WAAYA,EACZ2d,IAAKA,GACJ5a,GACL,G,iFClEO,SAASwhB,EAA2BzB,GACzC,OAAOC,EAAAA,EAAAA,GAAqB,iBAAkBD,EAChD,CACA,IAAMa,GAAqBX,EAAAA,EAAAA,GAAuB,iBAAkB,CAAC,SACrE,K","sources":["components/badge-status/styles.tsx","components/badge-status/BadgeStatus.tsx","components/custom-breadcrumbs/LinkItem.tsx","components/custom-breadcrumbs/CustomBreadcrumbs.tsx","components/custom-input/CustomSmallSelect.tsx","components/custom-input/CustomTextField.tsx","components/file-thumbnail/utils.ts","components/file-thumbnail/DownloadButton.tsx","components/file-thumbnail/FileThumbnail.tsx","components/lightbox/styles.tsx","components/lightbox/Lightbox.tsx","components/skeleton/SkeletonPostItem.tsx","components/skeleton/SkeletonPostDetails.tsx","components/skeleton/SkeletonMailNavItem.tsx","components/skeleton/SkeletonConversationItem.tsx","../node_modules/date-fns/esm/formatDistanceStrict/index.js","../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","sections/@dashboard/chat/nav/ChatNavItem.tsx","sections/@dashboard/chat/nav/ChatNavList.tsx","sections/@dashboard/chat/nav/ChatNavSearch.tsx","sections/@dashboard/chat/nav/ChatNavAccount.tsx","sections/@dashboard/chat/nav/ChatNavSearchResults.tsx","sections/@dashboard/chat/nav/ChatNav.tsx","sections/@dashboard/chat/room/ChatRoomCollapseButton.tsx","sections/@dashboard/chat/room/ChatRoomAttachments.tsx","sections/@dashboard/chat/room/ChatRoomSingle.tsx","sections/@dashboard/chat/room/ChatRoomParticipantInfoDialog.tsx","sections/@dashboard/chat/room/ChatRoomGroup.tsx","sections/@dashboard/chat/room/ChatRoom.tsx","sections/@dashboard/chat/message/ChatMessageInput.tsx","utils/uuidv4.ts","sections/@dashboard/chat/message/ChatMessageItem.tsx","sections/@dashboard/chat/message/ChatMessageList.tsx","sections/@dashboard/chat/header/ChatHeaderDetail.tsx","sections/@dashboard/chat/header/ChatHeaderCompose.tsx","sections/@dashboard/chat/Chat.tsx","pages/dashboard/ChatPage.tsx","../node_modules/@mui/material/esm/DialogContent/dialogContentClasses.js","../node_modules/@mui/material/esm/DialogContent/DialogContent.js","../node_modules/@mui/material/esm/DialogTitle/dialogTitleClasses.js"],"sourcesContent":["// @mui\nimport { Theme, styled } from '@mui/material/styles';\n//\nimport { BadgeStatusValue, BadgeSizeValue } from './types';\n\n// ----------------------------------------------------------------------\n\ninterface StyledBadgeStatusProps {\n  ownerState: {\n    size: BadgeSizeValue;\n    status: BadgeStatusValue;\n  };\n}\n\nexport const StyledBadgeStatus = styled('span')<StyledBadgeStatusProps>(({ theme, ownerState }) => {\n  const { status, size } = ownerState;\n\n  return {\n    width: 10,\n    height: 10,\n    display: 'flex',\n    borderRadius: '50%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:before, &:after': {\n      content: \"''\",\n      borderRadius: 1,\n      backgroundColor: theme.palette.common.white,\n    },\n\n    ...(size === 'small' && { width: 8, height: 8 }),\n\n    ...(size === 'large' && { width: 12, height: 12 }),\n\n    ...(status === 'offline' && { backgroundColor: 'transparent' }),\n\n    ...(status === 'away' && {\n      backgroundColor: theme.palette.warning.main,\n      '&:before': {\n        width: 2,\n        height: 4,\n        transform: 'translateX(1px) translateY(-1px)',\n      },\n      '&:after': {\n        width: 2,\n        height: 4,\n        transform: 'translateY(1px) rotate(125deg)',\n      },\n    }),\n\n    ...(status === 'busy' && {\n      backgroundColor: theme.palette.error.main,\n      '&:before': { width: 6, height: 2 },\n    }),\n\n    ...(status === 'online' && {\n      backgroundColor: theme.palette.success.main,\n    }),\n\n    ...(status === 'invisible' && {\n      backgroundColor: theme.palette.text.disabled,\n      '&:before': {\n        width: 6,\n        height: 6,\n        borderRadius: '50%',\n      },\n    }),\n\n    ...(status === 'unread' && {\n      backgroundColor: theme.palette.info.main,\n    }),\n  };\n});\n","// @mui\nimport { useTheme } from '@mui/material/styles';\n//\nimport { StyledBadgeStatus } from './styles';\nimport { BadgeStatusProps } from './types';\n\n// ----------------------------------------------------------------------\n\nexport default function BadgeStatus({ size = 'medium', status = 'offline', sx }: BadgeStatusProps) {\n  const theme = useTheme();\n\n  return <StyledBadgeStatus sx={sx} theme={theme} ownerState={{ status, size }} />;\n}\n","import { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link } from '@mui/material';\n//\nimport { BreadcrumbsLinkProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  link: BreadcrumbsLinkProps;\n  activeLast?: boolean;\n  disabled: boolean;\n};\n\nexport default function BreadcrumbsLink({ link, activeLast, disabled }: Props) {\n  const { name, href, icon } = link;\n\n  const styles = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    color: 'text.primary',\n    ...(disabled &&\n      !activeLast && {\n        cursor: 'default',\n        pointerEvents: 'none',\n        color: 'text.disabled',\n      }),\n  };\n\n  const renderContent = (\n    <>\n      {icon && (\n        <Box\n          component=\"span\"\n          sx={{\n            mr: 1,\n            display: 'inherit',\n            '& svg': { width: 20, height: 20 },\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n\n      {name}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link component={RouterLink} to={href} sx={styles}>\n        {renderContent}\n      </Link>\n    );\n  }\n\n  return <Box sx={styles}> {renderContent} </Box>;\n}\n","// @mui\nimport { Box, Link, Stack, Typography, Breadcrumbs } from '@mui/material';\n//\nimport { CustomBreadcrumbsProps } from './types';\nimport LinkItem from './LinkItem';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink,\n  activeLast,\n  sx,\n  ...other\n}: CustomBreadcrumbsProps) {\n  const lastLink = links[links.length - 1].name;\n\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          {/* HEADING */}\n          {heading && (\n            <Typography variant=\"h4\" gutterBottom>\n              {heading}\n            </Typography>\n          )}\n\n          {/* BREADCRUMBS */}\n          {!!links.length && (\n            <Breadcrumbs separator={<Separator />} {...other}>\n              {links.map((link) => (\n                <LinkItem\n                  key={link.name || ''}\n                  link={link}\n                  activeLast={activeLast}\n                  disabled={link.name === lastLink}\n                />\n              ))}\n            </Breadcrumbs>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\n      </Stack>\n\n      {/* MORE LINK */}\n      {!!moreLink && (\n        <Box sx={{ mt: 2 }}>\n          {moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Separator() {\n  return (\n    <Box\n      component=\"span\"\n      sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\n    />\n  );\n}\n","// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport { TextField, TextFieldProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst CustomSmallSelect = styled((props: TextFieldProps) => (\n  <TextField select SelectProps={{ native: true }} {...props} />\n))(({ theme }) => ({\n  '& fieldset': {\n    display: 'none',\n  },\n  '& select': {\n    ...theme.typography.subtitle2,\n    padding: theme.spacing(0.5, 0, 0.5, 1),\n    paddingRight: '28px !important',\n  },\n  '& .MuiOutlinedInput-root': {\n    borderRadius: Number(theme.shape.borderRadius) * 0.75,\n    backgroundColor: alpha(theme.palette.grey[500], 0.08),\n  },\n}));\n\nexport default CustomSmallSelect;\n","// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport { TextField, TextFieldProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ntype Props = TextFieldProps & {\n  width?: number;\n};\n\nconst CustomTextField = styled(TextField, {\n  shouldForwardProp: (prop) => prop !== 'width',\n})<Props>(({ width, theme }) => ({\n  '& fieldset': {\n    display: 'none',\n  },\n  '& .MuiOutlinedInput-root': {\n    width,\n    border: `solid 1px ${alpha(theme.palette.grey[500], 0.32)}`,\n    transition: theme.transitions.create(['box-shadow', 'width'], {\n      duration: theme.transitions.duration.shorter,\n    }),\n    '&.Mui-focused': {\n      boxShadow: theme.customShadows.z20,\n      ...(width && {\n        [theme.breakpoints.up('sm')]: {\n          width: width + 60,\n        },\n      }),\n    },\n  },\n}));\n\nexport default CustomTextField;\n","// components\nimport { ExtendFile } from './types';\n\n// ----------------------------------------------------------------------\n\n// Define more types here\nconst FORMAT_PDF = ['pdf'];\nconst FORMAT_TEXT = ['txt'];\nconst FORMAT_PHOTOSHOP = ['psd'];\nconst FORMAT_WORD = ['doc', 'docx'];\nconst FORMAT_EXCEL = ['xls', 'xlsx'];\nconst FORMAT_ZIP = ['zip', 'rar', 'iso'];\nconst FORMAT_ILLUSTRATOR = ['ai', 'esp'];\nconst FORMAT_POWERPOINT = ['ppt', 'pptx'];\nconst FORMAT_AUDIO = ['wav', 'aif', 'mp3', 'aac'];\nconst FORMAT_IMG = ['jpg', 'jpeg', 'gif', 'bmp', 'png', 'svg'];\nconst FORMAT_VIDEO = ['m4v', 'avi', 'mpg', 'mp4', 'webm'];\n\nconst iconUrl = (icon: string) => `/assets/icons/files/${icon}.svg`;\n\n// ----------------------------------------------------------------------\n\nexport function fileFormat(fileUrl: string | undefined) {\n  let format;\n\n  switch (fileUrl?.includes(fileTypeByUrl(fileUrl))) {\n    case FORMAT_TEXT.includes(fileTypeByUrl(fileUrl)):\n      format = 'txt';\n      break;\n    case FORMAT_ZIP.includes(fileTypeByUrl(fileUrl)):\n      format = 'zip';\n      break;\n    case FORMAT_AUDIO.includes(fileTypeByUrl(fileUrl)):\n      format = 'audio';\n      break;\n    case FORMAT_IMG.includes(fileTypeByUrl(fileUrl)):\n      format = 'image';\n      break;\n    case FORMAT_VIDEO.includes(fileTypeByUrl(fileUrl)):\n      format = 'video';\n      break;\n    case FORMAT_WORD.includes(fileTypeByUrl(fileUrl)):\n      format = 'word';\n      break;\n    case FORMAT_EXCEL.includes(fileTypeByUrl(fileUrl)):\n      format = 'excel';\n      break;\n    case FORMAT_POWERPOINT.includes(fileTypeByUrl(fileUrl)):\n      format = 'powerpoint';\n      break;\n    case FORMAT_PDF.includes(fileTypeByUrl(fileUrl)):\n      format = 'pdf';\n      break;\n    case FORMAT_PHOTOSHOP.includes(fileTypeByUrl(fileUrl)):\n      format = 'photoshop';\n      break;\n    case FORMAT_ILLUSTRATOR.includes(fileTypeByUrl(fileUrl)):\n      format = 'illustrator';\n      break;\n    default:\n      format = fileTypeByUrl(fileUrl);\n  }\n\n  return format;\n}\n\n// ----------------------------------------------------------------------\n\nexport function fileThumb(fileUrl: string) {\n  let thumb;\n\n  switch (fileFormat(fileUrl)) {\n    case 'folder':\n      thumb = iconUrl('ic_folder');\n      break;\n    case 'txt':\n      thumb = iconUrl('ic_txt');\n      break;\n    case 'zip':\n      thumb = iconUrl('ic_zip');\n      break;\n    case 'audio':\n      thumb = iconUrl('ic_audio');\n      break;\n    case 'video':\n      thumb = iconUrl('ic_video');\n      break;\n    case 'word':\n      thumb = iconUrl('ic_word');\n      break;\n    case 'excel':\n      thumb = iconUrl('ic_excel');\n      break;\n    case 'powerpoint':\n      thumb = iconUrl('ic_power_point');\n      break;\n    case 'pdf':\n      thumb = iconUrl('ic_pdf');\n      break;\n    case 'photoshop':\n      thumb = iconUrl('ic_pts');\n      break;\n    case 'illustrator':\n      thumb = iconUrl('ic_ai');\n      break;\n    case 'image':\n      thumb = iconUrl('ic_img');\n      break;\n    default:\n      thumb = iconUrl('ic_file');\n  }\n  return thumb;\n}\n\n// ----------------------------------------------------------------------\n\nexport function fileTypeByUrl(fileUrl = '') {\n  return (fileUrl && fileUrl.split('.').pop()) || '';\n}\n\n// ----------------------------------------------------------------------\n\nexport function fileNameByUrl(fileUrl: string) {\n  return fileUrl.split('/').pop();\n}\n\n// ----------------------------------------------------------------------\n\nexport function fileData(file: ExtendFile | string) {\n  // Url\n  if (typeof file === 'string') {\n    return {\n      key: file,\n      preview: file,\n      name: fileNameByUrl(file),\n      type: fileTypeByUrl(file),\n    };\n  }\n\n  // File\n  return {\n    key: file.preview,\n    name: file.name,\n    size: file.size,\n    path: file.path,\n    type: file.type,\n    preview: file.preview,\n    lastModified: file.lastModified,\n    lastModifiedDate: file.lastModifiedDate,\n  };\n}\n","// @mui\nimport { useTheme } from '@mui/material/styles';\nimport { IconButton } from '@mui/material';\n// utils\nimport { bgBlur } from '../../utils/cssStyles';\n//\nimport Iconify from '../iconify';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  onDownload?: VoidFunction;\n};\n\nexport default function DownloadButton({ onDownload }: Props) {\n  const theme = useTheme();\n\n  return (\n    <IconButton\n      // color=\"inherit\"\n      onClick={onDownload}\n      sx={{\n        p: 0,\n        top: 0,\n        right: 0,\n        width: 1,\n        height: 1,\n        zIndex: 9,\n        opacity: 0,\n        position: 'absolute',\n        borderRadius: 'unset',\n        // color: 'common.white',\n        justifyContent: 'center',\n        bgcolor: 'grey.800',\n        color: 'common.white',\n        transition: theme.transitions.create('opacity'),\n\n        '&:hover': {\n          opacity: 1,\n          ...bgBlur({\n            opacity: 0.64,\n            color: theme.palette.grey[900],\n          }),\n        },\n      }}\n    >\n      <Iconify icon=\"eva:arrow-circle-down-fill\" width={24} />\n    </IconButton>\n  );\n}\n","import { Theme } from '@mui/material/styles';\nimport { Box, Tooltip, SxProps, Stack } from '@mui/material';\n//\nimport { fileData, fileFormat, fileThumb } from './utils';\nimport DownloadButton from './DownloadButton';\n\n// ----------------------------------------------------------------------\n\ntype FileIconProps = {\n  file: File | string;\n  tooltip?: boolean;\n  imageView?: boolean;\n  onDownload?: VoidFunction;\n  sx?: SxProps<Theme>;\n  imgSx?: SxProps<Theme>;\n};\n\nexport default function FileThumbnail({\n  file,\n  tooltip,\n  imageView,\n  onDownload,\n  sx,\n  imgSx,\n}: FileIconProps) {\n  const { name = '', path = '', preview = '' } = fileData(file);\n\n  const format = fileFormat(path || preview);\n\n  const renderContent =\n    format === 'image' && imageView ? (\n      <Box\n        component=\"img\"\n        src={preview}\n        sx={{\n          width: 1,\n          height: 1,\n          flexShrink: 0,\n          objectFit: 'cover',\n          ...imgSx,\n        }}\n      />\n    ) : (\n      <Box\n        component=\"img\"\n        src={fileThumb(format)}\n        sx={{\n          width: 32,\n          height: 32,\n          flexShrink: 0,\n          ...sx,\n        }}\n      />\n    );\n\n  if (tooltip) {\n    return (\n      <Tooltip title={name}>\n        <Stack\n          flexShrink={0}\n          component=\"span\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          sx={{\n            width: 'fit-content',\n            height: 'inherit',\n          }}\n        >\n          {renderContent}\n          {onDownload && <DownloadButton onDownload={onDownload} />}\n        </Stack>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <>\n      {renderContent}\n      {onDownload && <DownloadButton onDownload={onDownload} />}\n    </>\n  );\n}\n","// @mui\nimport { useTheme, alpha } from '@mui/material/styles';\nimport { GlobalStyles } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function StyledLightbox() {\n  const theme = useTheme();\n\n  const inputGlobalStyles = (\n    <GlobalStyles\n      styles={{\n        '.yarl__root': {\n          '--yarl__thumbnails_thumbnail_padding': 0,\n          '--yarl__thumbnails_thumbnail_border': 'transparent',\n          '--yarl__color_backdrop': alpha(theme.palette.grey[900], 0.9),\n          '--yarl__slide_captions_container_background': alpha(theme.palette.grey[900], 0.48),\n        },\n        // Caption\n        '.yarl__slide_title': {\n          fontSize: theme.typography.h5.fontSize,\n          fontWeight: theme.typography.h5.fontWeight,\n          lineHeight: theme.typography.h5.lineHeight,\n        },\n        '.yarl__slide_description': {\n          fontSize: theme.typography.body2.fontSize,\n          fontWeight: theme.typography.body2.fontWeight,\n          lineHeight: theme.typography.body2.lineHeight,\n        },\n        // Button\n        '.yarl__button': {\n          filter: 'unset',\n        },\n        // Thumbnails\n        '.yarl__thumbnails_thumbnail': {\n          opacity: 0.48,\n          '&.yarl__thumbnails_thumbnail_active': {\n            opacity: 1,\n          },\n        },\n        '.yarl__thumbnails_vignette': {\n          '--yarl__thumbnails_vignette_size': 0,\n        },\n        // Video\n        '.yarl__video_container': {\n          backgroundColor: theme.palette.common.black,\n        },\n      }}\n    />\n  );\n\n  return inputGlobalStyles;\n}\n","import ReactLightbox from 'yet-another-react-lightbox';\nimport Zoom from 'yet-another-react-lightbox/plugins/zoom';\nimport Video from 'yet-another-react-lightbox/plugins/video';\nimport Captions from 'yet-another-react-lightbox/plugins/captions';\nimport Slideshow from 'yet-another-react-lightbox/plugins/slideshow';\nimport Fullscreen from 'yet-another-react-lightbox/plugins/fullscreen';\nimport Thumbnails from 'yet-another-react-lightbox/plugins/thumbnails';\nimport { useLightboxState } from 'yet-another-react-lightbox/core';\n// @mui\nimport { Typography } from '@mui/material';\n//\nimport Iconify from '../iconify';\n//\nimport { LightBoxProps } from './types';\nimport StyledLightbox from './styles';\n\n// ----------------------------------------------------------------------\n\nconst ICON_SIZE = 24;\n\nexport default function Lightbox({\n  slides,\n  disabledZoom,\n  disabledVideo,\n  disabledTotal,\n  disabledCaptions,\n  disabledSlideshow,\n  disabledThumbnails,\n  disabledFullscreen,\n  onGetCurrentIndex,\n  ...other\n}: LightBoxProps) {\n  const totalItems = slides ? slides.length : 0;\n\n  return (\n    <>\n      <StyledLightbox />\n\n      <ReactLightbox\n        slides={slides}\n        animation={{ swipe: 240 }}\n        carousel={{ finite: totalItems < 5 }}\n        controller={{ closeOnBackdropClick: true }}\n        plugins={getPlugins({\n          disabledZoom,\n          disabledVideo,\n          disabledCaptions,\n          disabledSlideshow,\n          disabledThumbnails,\n          disabledFullscreen,\n        })}\n        on={{\n          view: (index: number) => {\n            if (onGetCurrentIndex) {\n              onGetCurrentIndex(index);\n            }\n          },\n        }}\n        toolbar={{\n          buttons: [\n            <DisplayTotal\n              key={0}\n              totalItems={totalItems}\n              disabledTotal={disabledTotal}\n              disabledCaptions={disabledCaptions}\n            />,\n            'close',\n          ],\n        }}\n        render={{\n          iconClose: () => <Iconify width={ICON_SIZE} icon=\"carbon:close\" />,\n          iconZoomIn: () => <Iconify width={ICON_SIZE} icon=\"carbon:zoom-in\" />,\n          iconZoomOut: () => <Iconify width={ICON_SIZE} icon=\"carbon:zoom-out\" />,\n          iconSlideshowPlay: () => <Iconify width={ICON_SIZE} icon=\"carbon:play\" />,\n          iconSlideshowPause: () => <Iconify width={ICON_SIZE} icon=\"carbon:pause\" />,\n          iconPrev: () => <Iconify width={ICON_SIZE + 8} icon=\"carbon:chevron-left\" />,\n          iconNext: () => <Iconify width={ICON_SIZE + 8} icon=\"carbon:chevron-right\" />,\n          iconExitFullscreen: () => <Iconify width={ICON_SIZE} icon=\"carbon:center-to-fit\" />,\n          iconEnterFullscreen: () => <Iconify width={ICON_SIZE} icon=\"carbon:fit-to-screen\" />,\n        }}\n        {...other}\n      />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport function getPlugins({\n  disabledZoom,\n  disabledVideo,\n  disabledCaptions,\n  disabledSlideshow,\n  disabledThumbnails,\n  disabledFullscreen,\n}: LightBoxProps) {\n  let plugins = [Captions, Fullscreen, Slideshow, Thumbnails, Video, Zoom];\n\n  if (disabledThumbnails) {\n    plugins = plugins.filter((plugin) => plugin !== Thumbnails);\n  }\n  if (disabledCaptions) {\n    plugins = plugins.filter((plugin) => plugin !== Captions);\n  }\n  if (disabledFullscreen) {\n    plugins = plugins.filter((plugin) => plugin !== Fullscreen);\n  }\n  if (disabledSlideshow) {\n    plugins = plugins.filter((plugin) => plugin !== Slideshow);\n  }\n  if (disabledZoom) {\n    plugins = plugins.filter((plugin) => plugin !== Zoom);\n  }\n  if (disabledVideo) {\n    plugins = plugins.filter((plugin) => plugin !== Video);\n  }\n\n  return plugins;\n}\n\n// ----------------------------------------------------------------------\n\ntype DisplayTotalProps = {\n  totalItems: number;\n  disabledTotal?: boolean;\n  disabledCaptions?: boolean;\n};\n\nexport function DisplayTotal({ totalItems, disabledTotal, disabledCaptions }: DisplayTotalProps) {\n  const { state } = useLightboxState();\n\n  const { currentIndex } = state;\n\n  if (disabledTotal) {\n    return null;\n  }\n\n  return (\n    <Typography\n      className=\"yarl__button\"\n      sx={{\n        pl: 3,\n        left: 0,\n        position: 'fixed',\n        typography: 'body2',\n        ...(!disabledCaptions && {\n          px: 'unset',\n          minWidth: 64,\n          position: 'unset',\n          textAlign: 'center',\n        }),\n      }}\n    >\n      <strong> {currentIndex + 1} </strong> / {totalItems}\n    </Typography>\n  );\n}\n","// @mui\nimport { Box, Skeleton, Grid, GridProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonPostItem({ ...other }: GridProps) {\n  return (\n    <Grid item xs={12} sm={6} md={3} {...other}>\n      <Skeleton variant=\"rectangular\" width=\"100%\" sx={{ height: 200, borderRadius: 2 }} />\n      <Box sx={{ display: 'flex', mt: 1.5 }}>\n        <Skeleton variant=\"circular\" sx={{ width: 40, height: 40 }} />\n        <Skeleton variant=\"text\" sx={{ mx: 1, flexGrow: 1 }} />\n      </Box>\n    </Grid>\n  );\n}\n","// @mui\nimport { Box, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonPostDetails() {\n  return (\n    <>\n      <Skeleton width=\"100%\" height={560} variant=\"rectangular\" sx={{ borderRadius: 2 }} />\n      <Box sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\n        <Skeleton variant=\"circular\" width={64} height={64} />\n        <Box sx={{ flexGrow: 1, ml: 2 }}>\n          <Skeleton variant=\"text\" height={20} />\n          <Skeleton variant=\"text\" height={20} />\n          <Skeleton variant=\"text\" height={20} />\n        </Box>\n      </Box>\n    </>\n  );\n}\n","// @mui\nimport { Stack, Skeleton, StackProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonMailNavItem({ sx, ...other }: StackProps) {\n  return (\n    <Stack spacing={1} direction=\"row\" alignItems=\"center\" sx={{ px: 3, py: 1, ...sx }} {...other}>\n      <Skeleton variant=\"circular\" width={32} height={32} />\n      <Skeleton variant=\"text\" sx={{ width: 0.5, height: 16 }} />\n    </Stack>\n  );\n}\n","// @mui\nimport { Stack, Skeleton, StackProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonConversationItem({ sx, ...other }: StackProps) {\n  return (\n    <Stack\n      spacing={1}\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{ px: 3, py: 1.5, ...sx }}\n      {...other}\n    >\n      <Skeleton variant=\"circular\" width={48} height={48} />\n\n      <Stack spacing={0.5} sx={{ flexGrow: 1 }}>\n        <Skeleton variant=\"text\" sx={{ width: 0.5, height: 16 }} />\n        <Skeleton variant=\"text\" sx={{ width: 0.25, height: 12 }} />\n      </Stack>\n    </Stack>\n  );\n}\n","import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 1000 * 60;\nvar MINUTES_IN_DAY = 60 * 24;\nvar MINUTES_IN_MONTH = MINUTES_IN_DAY * 30;\nvar MINUTES_IN_YEAR = MINUTES_IN_DAY * 365;\n/**\n * @name formatDistanceStrict\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'\n * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * const result = formatDistanceStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * const result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n *   unit: 'minute'\n * })\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2015\n * // to 28 January 2015, in months, rounded up?\n * const result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceStrict(dirtyDate, dirtyBaseDate, options) {\n  var _ref, _options$locale, _options$roundingMeth;\n\n  requiredArgs(2, arguments);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain localize.formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = assign(cloneObject(options), {\n    addSuffix: Boolean(options === null || options === void 0 ? void 0 : options.addSuffix),\n    comparison: comparison\n  });\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var roundingMethod = String((_options$roundingMeth = options === null || options === void 0 ? void 0 : options.roundingMethod) !== null && _options$roundingMeth !== void 0 ? _options$roundingMeth : 'round');\n  var roundingMethodFn;\n\n  if (roundingMethod === 'floor') {\n    roundingMethodFn = Math.floor;\n  } else if (roundingMethod === 'ceil') {\n    roundingMethodFn = Math.ceil;\n  } else if (roundingMethod === 'round') {\n    roundingMethodFn = Math.round;\n  } else {\n    throw new RangeError(\"roundingMethod must be 'floor', 'ceil' or 'round'\");\n  }\n\n  var milliseconds = dateRight.getTime() - dateLeft.getTime();\n  var minutes = milliseconds / MILLISECONDS_IN_MINUTE;\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft); // Use DST-normalized difference in minutes for years, months and days;\n  // use regular difference in minutes for hours, minutes and seconds.\n\n  var dstNormalizedMinutes = (milliseconds - timezoneOffset) / MILLISECONDS_IN_MINUTE;\n  var defaultUnit = options === null || options === void 0 ? void 0 : options.unit;\n  var unit;\n\n  if (!defaultUnit) {\n    if (minutes < 1) {\n      unit = 'second';\n    } else if (minutes < 60) {\n      unit = 'minute';\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'hour';\n    } else if (dstNormalizedMinutes < MINUTES_IN_MONTH) {\n      unit = 'day';\n    } else if (dstNormalizedMinutes < MINUTES_IN_YEAR) {\n      unit = 'month';\n    } else {\n      unit = 'year';\n    }\n  } else {\n    unit = String(defaultUnit);\n  } // 0 up to 60 seconds\n\n\n  if (unit === 'second') {\n    var seconds = roundingMethodFn(milliseconds / 1000);\n    return locale.formatDistance('xSeconds', seconds, localizeOptions); // 1 up to 60 mins\n  } else if (unit === 'minute') {\n    var roundedMinutes = roundingMethodFn(minutes);\n    return locale.formatDistance('xMinutes', roundedMinutes, localizeOptions); // 1 up to 24 hours\n  } else if (unit === 'hour') {\n    var hours = roundingMethodFn(minutes / 60);\n    return locale.formatDistance('xHours', hours, localizeOptions); // 1 up to 30 days\n  } else if (unit === 'day') {\n    var days = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 up to 12 months\n  } else if (unit === 'month') {\n    var months = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_MONTH);\n    return months === 12 && defaultUnit !== 'month' ? locale.formatDistance('xYears', 1, localizeOptions) : locale.formatDistance('xMonths', months, localizeOptions); // 1 year up to max Date\n  } else if (unit === 'year') {\n    var years = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_YEAR);\n    return locale.formatDistance('xYears', years, localizeOptions);\n  }\n\n  throw new RangeError(\"unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\");\n}","import formatDistanceStrict from \"../formatDistanceStrict/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * const result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceToNowStrict(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return formatDistanceStrict(dirtyDate, Date.now(), options);\n}","import { formatDistanceToNowStrict } from 'date-fns';\n// @mui\nimport {\n  Badge,\n  Stack,\n  Typography,\n  ListItemText,\n  ListItemButton,\n  ListItemAvatar,\n} from '@mui/material';\n// @types\nimport { IChatConversation } from '../../../../@types/chat';\n// components\nimport { CustomAvatar, CustomAvatarGroup } from '../../../../components/custom-avatar';\nimport BadgeStatus from '../../../../components/badge-status';\n\n// ----------------------------------------------------------------------\n\nconst CURRENT_USER_ID = '8864c717-587d-472a-929a-8e5f298024da-0';\n\ntype Props = {\n  conversation: IChatConversation;\n  openNav: boolean;\n  isSelected: boolean;\n  onSelect: VoidFunction;\n};\n\nexport default function ChatNavItem({ conversation, openNav, isSelected, onSelect }: Props) {\n  const details = getDetails(conversation, CURRENT_USER_ID);\n\n  const lastActivity = conversation.messages[conversation.messages.length - 1].createdAt;\n\n  const isGroup = details.otherParticipants.length > 1;\n\n  const isUnread = conversation.unreadCount > 0;\n\n  const hasOnlineInGroup =\n    isGroup && details.otherParticipants.map((item) => item.status).includes('online');\n\n  return (\n    <ListItemButton\n      disableGutters\n      onClick={onSelect}\n      sx={{\n        py: 1.5,\n        px: 2.5,\n        ...(isSelected && {\n          bgcolor: 'action.selected',\n        }),\n      }}\n    >\n      <ListItemAvatar>\n        {isGroup ? (\n          <Badge\n            overlap=\"circular\"\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n            badgeContent={hasOnlineInGroup && <BadgeStatus status=\"online\" />}\n          >\n            <CustomAvatarGroup compact sx={{ width: 48, height: 48 }}>\n              {details.otherParticipants.slice(0, 2).map((participant) => (\n                <CustomAvatar\n                  key={participant.id}\n                  alt={participant.name}\n                  src={participant.avatar}\n                />\n              ))}\n            </CustomAvatarGroup>\n          </Badge>\n        ) : (\n          <CustomAvatar\n            key={details.otherParticipants[0].id}\n            alt={details.otherParticipants[0].name}\n            src={details.otherParticipants[0].avatar}\n            BadgeProps={{\n              badgeContent: <BadgeStatus status={details.otherParticipants[0].status} />,\n            }}\n            sx={{ width: 48, height: 48 }}\n          />\n        )}\n      </ListItemAvatar>\n\n      {openNav && (\n        <>\n          <ListItemText\n            primary={details.displayNames}\n            primaryTypographyProps={{ noWrap: true, variant: 'subtitle2' }}\n            secondary={details.displayText}\n            secondaryTypographyProps={{\n              noWrap: true,\n              variant: isUnread ? 'subtitle2' : 'body2',\n              color: isUnread ? 'text.primary' : 'text.secondary',\n            }}\n          />\n\n          <Stack alignItems=\"flex-end\" sx={{ ml: 2, height: 44 }}>\n            <Typography\n              noWrap\n              variant=\"body2\"\n              component=\"span\"\n              sx={{\n                mb: 1.5,\n                fontSize: 12,\n                color: 'text.disabled',\n              }}\n            >\n              {formatDistanceToNowStrict(new Date(lastActivity), {\n                addSuffix: false,\n              })}\n            </Typography>\n\n            {isUnread && <BadgeStatus status=\"unread\" size=\"small\" />}\n          </Stack>\n        </>\n      )}\n    </ListItemButton>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nconst getDetails = (conversation: IChatConversation, currentUserId: string) => {\n  const otherParticipants = conversation.participants.filter(\n    (participant) => participant.id !== currentUserId\n  );\n\n  const displayNames = otherParticipants.map((participant) => participant.name).join(', ');\n\n  let displayText = '';\n\n  const lastMessage = conversation.messages[conversation.messages.length - 1];\n  if (lastMessage) {\n    const sender = lastMessage.senderId === currentUserId ? 'You: ' : '';\n\n    const message = lastMessage.contentType === 'image' ? 'Sent a photo' : lastMessage.body;\n\n    displayText = `${sender}${message}`;\n  }\n  return { otherParticipants, displayNames, displayText };\n};\n","import { useNavigate } from 'react-router-dom';\n// @mui\nimport { List, SxProps } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\n// hooks\nimport useResponsive from '../../../../hooks/useResponsive';\n// @types\nimport { IChatConversationsState } from '../../../../@types/chat';\n// components\nimport { SkeletonConversationItem } from '../../../../components/skeleton';\n//\nimport ChatNavItem from './ChatNavItem';\n\n// ----------------------------------------------------------------------\n\nconst CURRENT_USER_ID = '8864c717-587d-472a-929a-8e5f298024da-0';\n\ntype Props = {\n  conversations: IChatConversationsState;\n  openNav: boolean;\n  onCloseNav: VoidFunction;\n  selected: (conversationId: string) => boolean;\n  sx?: SxProps;\n};\n\nexport default function ChatNavList({\n  conversations,\n  openNav,\n  onCloseNav,\n  selected,\n  sx,\n  ...other\n}: Props) {\n  const navigate = useNavigate();\n\n  const isDesktop = useResponsive('up', 'md');\n\n  const handleSelectConversation = (conversationId: string) => {\n    let conversationKey = '';\n\n    const conversation = conversations.byId[conversationId];\n\n    if (conversation.type === 'GROUP') {\n      conversationKey = conversation.id;\n    } else {\n      const otherParticipant = conversation.participants.find(\n        (participant) => participant.id !== CURRENT_USER_ID\n      );\n\n      if (otherParticipant?.username) {\n        conversationKey = otherParticipant?.username;\n      }\n    }\n\n    navigate(PATH_DASHBOARD.chat.view(conversationKey));\n  };\n\n  const loading = !conversations.allIds.length;\n\n  return (\n    <List disablePadding sx={sx} {...other}>\n      {(loading ? [...Array(12)] : conversations.allIds).map((conversationId, index) =>\n        conversationId ? (\n          <ChatNavItem\n            key={conversationId}\n            openNav={openNav}\n            conversation={conversations.byId[conversationId]}\n            isSelected={selected(conversationId)}\n            onSelect={() => {\n              if (!isDesktop) {\n                onCloseNav();\n              }\n              handleSelectConversation(conversationId);\n            }}\n          />\n        ) : (\n          <SkeletonConversationItem key={index} />\n        )\n      )}\n    </List>\n  );\n}\n","// @mui\nimport { InputAdornment, ClickAwayListener } from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\nimport { CustomTextField } from '../../../../components/custom-input';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  value: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onClickAway: VoidFunction;\n};\n\nexport default function ChatNavSearch({ value, onChange, onClickAway }: Props) {\n  return (\n    <ClickAwayListener onClickAway={onClickAway}>\n      <CustomTextField\n        fullWidth\n        size=\"small\"\n        value={value}\n        onChange={onChange}\n        placeholder=\"Search contacts...\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          ),\n        }}\n        sx={{ mt: 2.5 }}\n      />\n    </ClickAwayListener>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  List,\n  Stack,\n  Select,\n  Divider,\n  Tooltip,\n  MenuItem,\n  Typography,\n  IconButton,\n} from '@mui/material';\n// auth\nimport { useAuthContext } from '../../../../auth/useAuthContext';\n// components\nimport Iconify from '../../../../components/iconify';\nimport { CustomAvatar } from '../../../../components/custom-avatar';\nimport MenuPopover from '../../../../components/menu-popover';\nimport BadgeStatus, { BadgeStatusValue } from '../../../../components/badge-status';\n\n// ----------------------------------------------------------------------\n\nconst STATUS = ['online', 'invisible', 'away'] as const;\n\nexport default function ChatNavAccount() {\n  const { user } = useAuthContext();\n\n  const [status, setStatus] = useState<BadgeStatusValue>('online');\n\n  const [openPopover, setOpenPopover] = useState<HTMLElement | null>(null);\n\n  const handleOpenPopover = (event: React.MouseEvent<HTMLElement>) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  return (\n    <>\n      <CustomAvatar\n        src={user?.photoURL}\n        alt={user?.displayName}\n        name={user?.displayName}\n        BadgeProps={{\n          badgeContent: <BadgeStatus status={status} />,\n        }}\n        onClick={handleOpenPopover}\n        sx={{ cursor: 'pointer', width: 48, height: 48 }}\n      />\n\n      <MenuPopover open={openPopover} onClose={handleClosePopover} arrow=\"top-left\" sx={{ p: 0 }}>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2} sx={{ py: 2, pr: 1, pl: 2.5 }}>\n          <div>\n            <Typography noWrap variant=\"subtitle2\">\n              {user?.displayName}\n            </Typography>\n\n            <Typography noWrap variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              {user?.email}\n            </Typography>\n          </div>\n\n          <Tooltip title=\"Log out\">\n            <IconButton color=\"error\">\n              <Iconify icon=\"ic:round-power-settings-new\" />\n            </IconButton>\n          </Tooltip>\n        </Stack>\n\n        <Divider />\n\n        <List sx={{ px: 1 }}>\n          <MenuItem>\n            <BadgeStatus size=\"large\" status={status} sx={{ m: 0.5, flexShrink: 0 }} />\n\n            <Select\n              native\n              fullWidth\n              value={status}\n              onChange={(event) => setStatus(event.target.value)}\n              sx={{\n                '& .MuiInputBase-input': {\n                  p: 0,\n                  pl: 2,\n                  typography: 'body2',\n                  textTransform: 'capitalize',\n                },\n                '& .MuiNativeSelect-icon': {\n                  right: -16,\n                  top: 'unset',\n                },\n                '& .MuiOutlinedInput-notchedOutline': {\n                  display: 'none',\n                },\n              }}\n            >\n              {STATUS.map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </Select>\n          </MenuItem>\n\n          <MenuItem>\n            <Iconify icon=\"ic:round-account-box\" />\n            Profile\n          </MenuItem>\n\n          <MenuItem>\n            <Iconify icon=\"eva:settings-2-fill\" />\n            Settings\n          </MenuItem>\n        </List>\n      </MenuPopover>\n    </>\n  );\n}\n","// @mui\nimport { Avatar, Typography, ListItemButton } from '@mui/material';\n// @types\nimport { IChatContact } from '../../../../@types/chat';\n//\nimport SearchNotFound from '../../../../components/search-not-found';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  searchContacts: string;\n  searchResults: IChatContact[];\n  onSelectContact: (contact: IChatContact) => void;\n};\n\nexport default function ChatNavSearchResults({\n  searchContacts,\n  searchResults,\n  onSelectContact,\n}: Props) {\n  const isNotFound = !searchResults.length && !!searchContacts;\n\n  return (\n    <>\n      <Typography\n        paragraph\n        variant=\"h6\"\n        sx={{\n          px: 2.5,\n        }}\n      >\n        Contacts\n      </Typography>\n\n      {isNotFound ? (\n        <SearchNotFound\n          query={searchContacts}\n          sx={{\n            p: 3,\n            mx: 'auto',\n            width: `calc(100% - 40px)`,\n            bgcolor: 'background.neutral',\n          }}\n        />\n      ) : (\n        <>\n          {searchResults.map((result) => (\n            <ListItemButton\n              key={result.id}\n              onClick={() => onSelectContact(result)}\n              sx={{\n                px: 2.5,\n                py: 1.5,\n                typography: 'subtitle2',\n              }}\n            >\n              <Avatar alt={result.name} src={result.avatar} sx={{ mr: 2 }} />\n              {result.name}\n            </ListItemButton>\n          ))}\n        </>\n      )}\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Stack, Drawer, IconButton, IconButtonProps } from '@mui/material';\n// hooks\nimport useResponsive from '../../../../hooks/useResponsive';\n// utils\nimport axios from '../../../../utils/axios';\n// routes\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\n// @types\nimport { IChatContact, IChatConversationsState } from '../../../../@types/chat';\n// components\nimport Iconify from '../../../../components/iconify';\nimport Scrollbar from '../../../../components/scrollbar';\n//\nimport ChatNavList from './ChatNavList';\nimport ChatNavSearch from './ChatNavSearch';\nimport ChatNavAccount from './ChatNavAccount';\nimport ChatNavSearchResults from './ChatNavSearchResults';\n\n// ----------------------------------------------------------------------\n\nconst StyledToggleButton = styled((props) => (\n  <IconButton disableRipple {...props} />\n))<IconButtonProps>(({ theme }) => ({\n  left: 0,\n  zIndex: 9,\n  width: 32,\n  height: 32,\n  position: 'absolute',\n  top: theme.spacing(13),\n  borderRadius: `0 12px 12px 0`,\n  color: theme.palette.primary.contrastText,\n  backgroundColor: theme.palette.primary.main,\n  boxShadow: theme.customShadows.primary,\n  '&:hover': {\n    backgroundColor: theme.palette.primary.darker,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nconst NAV_WIDTH = 320;\n\nconst NAV_COLLAPSE_WIDTH = 96;\n\ntype Props = {\n  conversations: IChatConversationsState;\n  activeConversationId: string | null;\n};\n\nexport default function ChatNav({ conversations, activeConversationId }: Props) {\n  const theme = useTheme();\n\n  const navigate = useNavigate();\n\n  const isDesktop = useResponsive('up', 'md');\n\n  const [openNav, setOpenNav] = useState(false);\n\n  const [searchResults, setSearchResults] = useState([]);\n\n  const [searchContacts, setSearchContacts] = useState('');\n\n  const isCollapse = isDesktop && !openNav;\n\n  useEffect(() => {\n    if (!isDesktop) {\n      handleCloseNav();\n    } else {\n      handleOpenNav();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDesktop]);\n\n  const handleToggleNav = () => {\n    setOpenNav(!openNav);\n  };\n\n  const handleOpenNav = () => {\n    setOpenNav(true);\n  };\n\n  const handleCloseNav = () => {\n    setOpenNav(false);\n  };\n\n  const handleChangeSearch = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    try {\n      const { value } = event.target;\n\n      setSearchContacts(value);\n\n      if (value) {\n        const response = await axios.get('/api/chat/search', {\n          params: { query: value },\n        });\n\n        setSearchResults(response.data.results);\n      } else {\n        setSearchResults([]);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSelectContact = (result: IChatContact) => {\n    setSearchContacts('');\n    navigate(PATH_DASHBOARD.chat.view(result.username));\n  };\n\n  const renderContent = (\n    <>\n      <Box sx={{ p: 2.5 }}>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n          {!isCollapse && (\n            <>\n              <ChatNavAccount />\n              <Box sx={{ flexGrow: 1 }} />\n            </>\n          )}\n\n          <IconButton onClick={handleToggleNav}>\n            <Iconify icon={openNav ? 'eva:arrow-ios-back-fill' : 'eva:arrow-ios-forward-fill'} />\n          </IconButton>\n\n          {!isCollapse && (\n            <IconButton component={RouterLink} to={PATH_DASHBOARD.chat.new}>\n              <Iconify icon=\"eva:edit-fill\" />\n            </IconButton>\n          )}\n        </Stack>\n\n        {!isCollapse && (\n          <ChatNavSearch\n            value={searchContacts}\n            onChange={handleChangeSearch}\n            onClickAway={() => setSearchContacts('')}\n          />\n        )}\n      </Box>\n\n      <Scrollbar>\n        {!searchContacts ? (\n          <ChatNavList\n            openNav={openNav}\n            onCloseNav={handleCloseNav}\n            conversations={conversations}\n            selected={(conversationId: string) => activeConversationId === conversationId}\n          />\n        ) : (\n          <ChatNavSearchResults\n            searchContacts={searchContacts}\n            searchResults={searchResults}\n            onSelectContact={handleSelectContact}\n          />\n        )}\n      </Scrollbar>\n    </>\n  );\n\n  return (\n    <>\n      {!isDesktop && (\n        <StyledToggleButton onClick={handleToggleNav}>\n          <Iconify width={16} icon=\"eva:people-fill\" />\n        </StyledToggleButton>\n      )}\n\n      {isDesktop ? (\n        <Drawer\n          open={openNav}\n          variant=\"persistent\"\n          PaperProps={{\n            sx: {\n              pb: 1,\n              width: 1,\n              position: 'static',\n              ...(isCollapse && {\n                transform: 'none !important',\n                visibility: 'visible !important',\n              }),\n            },\n          }}\n          sx={{\n            width: NAV_WIDTH,\n            transition: theme.transitions.create('width'),\n            ...(isCollapse && {\n              width: NAV_COLLAPSE_WIDTH,\n            }),\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      ) : (\n        <Drawer\n          open={openNav}\n          onClose={handleCloseNav}\n          ModalProps={{ keepMounted: true }}\n          PaperProps={{\n            sx: {\n              pb: 1,\n              width: NAV_WIDTH,\n            },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </>\n  );\n}\n","// @mui\nimport { Button, ButtonProps } from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends ButtonProps {\n  isCollapse: boolean;\n  onCollapse: VoidFunction;\n}\n\nexport default function ChatRoomCollapseButton({\n  isCollapse,\n  onCollapse,\n  children,\n  sx,\n  ...other\n}: Props) {\n  return (\n    <Button\n      fullWidth\n      color=\"inherit\"\n      onClick={onCollapse}\n      endIcon={\n        <Iconify\n          width={16}\n          icon={isCollapse ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\n        />\n      }\n      sx={{\n        height: 40,\n        flexShrink: 0,\n        borderRadius: 0,\n        typography: 'overline',\n        color: 'text.disabled',\n        justifyContent: 'space-between',\n        p: (theme) => theme.spacing(1, 1.5, 1, 2.5),\n        ...sx,\n      }}\n      {...other}\n    >\n      {children}\n    </Button>\n  );\n}\n","import uniq from 'lodash/uniq';\nimport flatten from 'lodash/flatten';\n// @mui\nimport { Box, Typography, Stack } from '@mui/material';\n// utils\nimport { fDateTime } from '../../../../utils/formatTime';\n// @types\nimport { IChatConversation, IChatAttachment } from '../../../../@types/chat';\n// components\nimport Scrollbar from '../../../../components/scrollbar';\nimport FileThumbnail from '../../../../components/file-thumbnail';\n//\nimport ChatRoomCollapseButton from './ChatRoomCollapseButton';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  conversation: IChatConversation;\n  isCollapse: boolean;\n  onCollapse: VoidFunction;\n};\n\nexport default function ChatRoomAttachments({ conversation, isCollapse, onCollapse }: Props) {\n  const totalAttachments = uniq(flatten(conversation.messages.map((item) => item.attachments)));\n\n  return (\n    <Stack\n      flexGrow={1}\n      sx={{\n        pb: 2,\n        height: 1,\n        overflow: 'hidden',\n        borderTop: (theme) => `solid 1px ${theme.palette.divider}`,\n      }}\n    >\n      <ChatRoomCollapseButton\n        isCollapse={isCollapse && !!totalAttachments.length}\n        onCollapse={onCollapse}\n        disabled={!totalAttachments.length}\n        sx={{\n          ...(!isCollapse && {\n            borderBottom: (theme) => `solid 1px ${theme.palette.divider}`,\n          }),\n        }}\n      >\n        Attachments ({totalAttachments.length})\n      </ChatRoomCollapseButton>\n\n      <Box\n        sx={{\n          overflow: 'hidden',\n          height: isCollapse ? 1 : 0,\n          transition: (theme) =>\n            theme.transitions.create('height', {\n              duration: theme.transitions.duration.shorter,\n            }),\n        }}\n      >\n        <Scrollbar>\n          {totalAttachments.map((attachment, index) => (\n            <AttachmentItem key={attachment.name + index} attachment={attachment} />\n          ))}\n        </Scrollbar>\n      </Box>\n    </Stack>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ntype AttachmentItemProps = {\n  attachment: IChatAttachment;\n};\n\nfunction AttachmentItem({ attachment }: AttachmentItemProps) {\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" sx={{ mt: 2, px: 2.5 }}>\n      <Stack\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        sx={{\n          width: 40,\n          height: 40,\n          flexShrink: 0,\n          borderRadius: 1,\n          overflow: 'hidden',\n          position: 'relative',\n          backgroundColor: 'background.neutral',\n        }}\n      >\n        <FileThumbnail\n          imageView\n          file={attachment.preview}\n          onDownload={() => console.log('DOWNLOAD')}\n          sx={{ width: 28, height: 28 }}\n        />\n      </Stack>\n\n      <Stack flexGrow={1} sx={{ ml: 1.5, minWidth: 0 }}>\n        <Typography variant=\"body2\" noWrap>\n          {attachment.name}\n        </Typography>\n\n        <Typography noWrap variant=\"caption\" sx={{ color: 'text.secondary', display: 'block' }}>\n          {fDateTime(attachment.dateCreated)}\n        </Typography>\n      </Stack>\n    </Stack>\n  );\n}\n","// @mui\nimport { Avatar, Divider, Collapse, Typography, Stack } from '@mui/material';\n// @types\nimport { IChatParticipant } from '../../../../@types/chat';\n// components\nimport Iconify from '../../../../components/iconify';\n//\nimport ChatRoomCollapseButton from './ChatRoomCollapseButton';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  participant: IChatParticipant;\n  isCollapse: boolean;\n  onCollapse: VoidFunction;\n};\n\nexport default function ChatRoomSingle({ participant, isCollapse, onCollapse }: Props) {\n  if (!participant) {\n    return null;\n  }\n\n  return (\n    <div>\n      <Stack alignItems=\"center\" sx={{ py: 4 }}>\n        <Avatar\n          alt={participant.name}\n          src={participant.avatar}\n          sx={{ width: 96, height: 96, mb: 2 }}\n        />\n\n        <Typography variant=\"subtitle1\">{participant.name}</Typography>\n\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary', mt: 0.5 }}>\n          {participant.role}\n        </Typography>\n      </Stack>\n\n      <Divider />\n\n      <ChatRoomCollapseButton isCollapse={isCollapse} onCollapse={onCollapse}>\n        information\n      </ChatRoomCollapseButton>\n\n      <Collapse in={isCollapse}>\n        <Stack\n          spacing={2}\n          sx={{\n            p: (theme) => theme.spacing(2, 2.5, 2.5, 2.5),\n          }}\n        >\n          {[\n            { icon: 'eva:pin-fill', value: participant.address },\n            { icon: 'eva:phone-fill', value: participant.phone },\n            { icon: 'eva:email-fill', value: participant.email },\n          ].map((row, index) => (\n            <Stack key={row.icon} direction=\"row\">\n              <Iconify\n                icon={row.icon}\n                sx={{\n                  mr: 1,\n                  mt: 0.5,\n                  flexShrink: 0,\n                  color: 'text.disabled',\n                }}\n              />\n              <Typography variant=\"body2\" noWrap={index === 2}>\n                {row.value}\n              </Typography>\n            </Stack>\n          ))}\n        </Stack>\n      </Collapse>\n    </div>\n  );\n}\n","// @mui\nimport { Typography, Dialog, DialogContent, Stack, IconButton } from '@mui/material';\n// @types\nimport { IChatParticipant } from '../../../../@types/chat';\n// components\nimport { CustomAvatar } from '../../../../components/custom-avatar';\nimport Iconify from '../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  participant: IChatParticipant;\n  open: boolean;\n  onClose: VoidFunction;\n};\n\nexport default function ChatRoomParticipantInfoDialog({ participant, open, onClose }: Props) {\n  const { name, avatar, role, address } = participant;\n\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose}>\n      <IconButton onClick={onClose} sx={{ position: 'absolute', right: 8, top: 8 }}>\n        <Iconify icon=\"eva:close-fill\" />\n      </IconButton>\n\n      <DialogContent sx={{ p: 5 }}>\n        <Stack direction=\"row\" spacing={3}>\n          <CustomAvatar alt={name} src={avatar} name={name} sx={{ width: 96, height: 96 }} />\n\n          <Stack spacing={1}>\n            <Typography variant=\"caption\" sx={{ color: 'primary.main' }}>\n              {role}\n            </Typography>\n\n            <Typography variant=\"h6\">{name}</Typography>\n\n            <Stack direction=\"row\" sx={{ typography: 'caption', color: 'text.secondary' }}>\n              <Iconify icon=\"eva:pin-fill\" width={16} sx={{ flexShrink: 0, mr: 0.5 }} />\n              {address}\n            </Stack>\n\n            <Stack direction=\"row\" sx={{ pt: 1 }}>\n              <IconButton color=\"info\">\n                <Iconify icon=\"eva:message-square-fill\" />\n              </IconButton>\n\n              <IconButton color=\"warning\">\n                <Iconify icon=\"eva:email-fill\" />\n              </IconButton>\n\n              <IconButton color=\"success\">\n                <Iconify icon=\"eva:phone-fill\" />\n              </IconButton>\n\n              <IconButton color=\"error\">\n                <Iconify icon=\"eva:video-fill\" />\n              </IconButton>\n            </Stack>\n          </Stack>\n        </Stack>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","// @mui\nimport { Box, ListItemText, ListItemAvatar, ListItemButton } from '@mui/material';\n// @types\nimport { IChatParticipant } from '../../../../@types/chat';\n// components\nimport { CustomAvatar } from '../../../../components/custom-avatar';\nimport Scrollbar from '../../../../components/scrollbar';\nimport BadgeStatus from '../../../../components/badge-status';\n//\nimport ChatRoomParticipantInfoDialog from './ChatRoomParticipantInfoDialog';\nimport ChatRoomCollapseButton from './ChatRoomCollapseButton';\n\n// ----------------------------------------------------------------------\n\nconst HEIGHT = 60;\n\ntype Props = {\n  participants: IChatParticipant[];\n  selectUserId: string | null;\n  onOpenUserInfo: (id: string | null) => void;\n  isCollapse: boolean;\n  onCollapse: VoidFunction;\n};\n\nexport default function ChatRoomGroup({\n  participants,\n  selectUserId,\n  onOpenUserInfo,\n  isCollapse,\n  onCollapse,\n}: Props) {\n  return (\n    <>\n      <ChatRoomCollapseButton isCollapse={isCollapse} onCollapse={onCollapse}>\n        In room ({participants.length})\n      </ChatRoomCollapseButton>\n\n      <Box\n        sx={{\n          height: isCollapse ? HEIGHT * 4 : 0,\n          transition: (theme) =>\n            theme.transitions.create('height', {\n              duration: theme.transitions.duration.shorter,\n            }),\n        }}\n      >\n        <Scrollbar>\n          {participants.map((participant) => (\n            <Participant\n              key={participant.id}\n              participant={participant}\n              open={selectUserId === participant.id}\n              onOpen={() => onOpenUserInfo(participant.id)}\n              onClose={() => onOpenUserInfo(null)}\n            />\n          ))}\n        </Scrollbar>\n      </Box>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ntype ParticipantProps = {\n  participant: IChatParticipant;\n  open: boolean;\n  onClose: VoidFunction;\n  onOpen: VoidFunction;\n};\n\nfunction Participant({ participant, open, onClose, onOpen }: ParticipantProps) {\n  const { name, avatar, status, role } = participant;\n\n  return (\n    <>\n      <ListItemButton onClick={onOpen} sx={{ height: HEIGHT, px: 2.5 }}>\n        <ListItemAvatar>\n          <CustomAvatar\n            alt={name}\n            src={avatar}\n            BadgeProps={{\n              badgeContent: <BadgeStatus status={status} />,\n            }}\n          />\n        </ListItemAvatar>\n\n        <ListItemText\n          primary={name}\n          secondary={role}\n          primaryTypographyProps={{ noWrap: true, variant: 'subtitle2' }}\n          secondaryTypographyProps={{ noWrap: true }}\n        />\n      </ListItemButton>\n\n      <ChatRoomParticipantInfoDialog participant={participant} open={open} onClose={onClose} />\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Drawer, IconButton, IconButtonProps } from '@mui/material';\n// hooks\nimport useResponsive from '../../../../hooks/useResponsive';\n// @types\nimport { IChatConversation, IChatParticipant } from '../../../../@types/chat';\n// components\nimport Iconify from '../../../../components/iconify';\n//\nimport ChatRoomAttachments from './ChatRoomAttachments';\nimport ChatRoomSingle from './ChatRoomSingle';\nimport ChatRoomGroup from './ChatRoomGroup';\n\n// ----------------------------------------------------------------------\n\nconst StyledToggleButton = styled((props) => (\n  <IconButton disableRipple {...props} />\n))<IconButtonProps>(({ theme }) => ({\n  right: 0,\n  zIndex: 9,\n  width: 32,\n  height: 32,\n  position: 'absolute',\n  top: theme.spacing(1),\n  boxShadow: theme.customShadows.z8,\n  backgroundColor: theme.palette.background.paper,\n  border: `solid 1px ${theme.palette.divider}`,\n  borderRight: 0,\n  borderRadius: `12px 0 0 12px`,\n  transition: theme.transitions.create('all'),\n  '&:hover': {\n    backgroundColor: theme.palette.background.neutral,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nconst NAV_WIDTH = 240;\n\ntype Props = {\n  conversation: IChatConversation;\n  participants: IChatParticipant[];\n};\n\nexport default function ChatRoom({ conversation, participants }: Props) {\n  const theme = useTheme();\n\n  const isDesktop = useResponsive('up', 'lg');\n\n  const [openNav, setOpenNav] = useState(true);\n\n  const [openInfo, setOpenInfo] = useState(true);\n\n  const [openAttachments, setOpenAttachments] = useState(true);\n\n  const [openParticipants, setOpenParticipants] = useState(true);\n\n  const [selectUser, setSelectUser] = useState<string | null>(null);\n\n  const onOpenNav = () => {\n    setOpenNav(true);\n  };\n\n  const onCloseNav = () => {\n    setOpenNav(false);\n  };\n\n  const isGroup = participants.length > 1;\n\n  useEffect(() => {\n    if (!isDesktop) {\n      onCloseNav();\n    } else {\n      onOpenNav();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDesktop]);\n\n  const renderContent = (\n    <>\n      {isGroup ? (\n        <ChatRoomGroup\n          selectUserId={selectUser}\n          participants={participants}\n          isCollapse={openParticipants}\n          onCollapse={() => setOpenParticipants(!openParticipants)}\n          onOpenUserInfo={(participantId) => setSelectUser(participantId)}\n        />\n      ) : (\n        <ChatRoomSingle\n          participant={participants[0]}\n          isCollapse={openInfo}\n          onCollapse={() => setOpenInfo(!openInfo)}\n        />\n      )}\n\n      <ChatRoomAttachments\n        conversation={conversation}\n        isCollapse={openAttachments}\n        onCollapse={() => setOpenAttachments(!openAttachments)}\n      />\n    </>\n  );\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <StyledToggleButton\n        onClick={() => setOpenNav(!openNav)}\n        sx={{\n          ...(openNav &&\n            isDesktop && {\n              right: NAV_WIDTH,\n            }),\n        }}\n      >\n        <Iconify\n          width={16}\n          icon={openNav ? 'eva:arrow-ios-forward-fill' : 'eva:arrow-ios-back-fill'}\n        />\n      </StyledToggleButton>\n\n      {isDesktop ? (\n        <Drawer\n          open={openNav}\n          anchor=\"right\"\n          variant=\"persistent\"\n          PaperProps={{\n            sx: {\n              width: 1,\n              position: 'static',\n            },\n          }}\n          sx={{\n            height: 1,\n            width: NAV_WIDTH,\n            transition: theme.transitions.create('width'),\n            ...(!openNav && {\n              width: 0,\n            }),\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      ) : (\n        <Drawer\n          anchor=\"right\"\n          open={openNav}\n          onClose={onCloseNav}\n          ModalProps={{ keepMounted: true }}\n          PaperProps={{\n            sx: {\n              width: NAV_WIDTH,\n            },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </Box>\n  );\n}\n","import { useRef, useState } from 'react';\n// @mui\nimport { Stack, InputBase, InputBaseProps, IconButton, InputAdornment } from '@mui/material';\n// utils\nimport uuidv4 from '../../../../utils/uuidv4';\n// @types\nimport { IChatSendMessage } from '../../../../@types/chat';\n// components\nimport Iconify from '../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nconst CURRENT_USER_ID = '8864c717-587d-472a-929a-8e5f298024da-0';\n\ninterface Props extends InputBaseProps {\n  conversationId: string | null;\n  onSend: (data: IChatSendMessage) => void;\n}\n\nexport default function ChatMessageInput({\n  disabled,\n  conversationId,\n  onSend,\n  sx,\n  ...other\n}: Props) {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const [message, setMessage] = useState('');\n\n  const handleClickAttach = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleSend = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      if (onSend && message && conversationId) {\n        onSend({\n          conversationId,\n          messageId: uuidv4(),\n          message,\n          contentType: 'text',\n          attachments: [],\n          createdAt: new Date(),\n          senderId: CURRENT_USER_ID,\n        });\n      }\n      setMessage('');\n    }\n  };\n\n  return (\n    <>\n      <InputBase\n        value={message}\n        onKeyUp={handleSend}\n        onChange={(event) => setMessage(event.target.value)}\n        placeholder=\"Type a message\"\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <IconButton size=\"small\">\n              <Iconify icon=\"eva:smiling-face-fill\" />\n            </IconButton>\n          </InputAdornment>\n        }\n        endAdornment={\n          <Stack direction=\"row\" spacing={1} sx={{ flexShrink: 0, mr: 1.5 }}>\n            <IconButton disabled={disabled} size=\"small\" onClick={handleClickAttach}>\n              <Iconify icon=\"ic:round-add-photo-alternate\" />\n            </IconButton>\n\n            <IconButton disabled={disabled} size=\"small\" onClick={handleClickAttach}>\n              <Iconify icon=\"eva:attach-2-fill\" />\n            </IconButton>\n\n            <IconButton disabled={disabled} size=\"small\">\n              <Iconify icon=\"eva:mic-fill\" />\n            </IconButton>\n          </Stack>\n        }\n        sx={{\n          pl: 1,\n          height: 56,\n          flexShrink: 0,\n          borderTop: (theme) => `solid 1px ${theme.palette.divider}`,\n          ...sx,\n        }}\n        {...other}\n      />\n\n      <input type=\"file\" ref={fileInputRef} style={{ display: 'none' }} />\n    </>\n  );\n}\n","/* eslint-disable */\n// ----------------------------------------------------------------------\n\nexport default function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n","import { formatDistanceToNowStrict } from 'date-fns';\n// @mui\nimport { Avatar, Typography, Stack } from '@mui/material';\n// @types\nimport { IChatConversation, IChatMessage } from '../../../../@types/chat';\n// components\nimport Image from '../../../../components/image';\n\n// ----------------------------------------------------------------------\n\nconst CURRENT_USER_ID = '8864c717-587d-472a-929a-8e5f298024da-0';\n\ntype Props = {\n  message: IChatMessage;\n  conversation: IChatConversation;\n  onOpenLightbox: (value: string) => void;\n};\n\nexport default function ChatMessageItem({ message, conversation, onOpenLightbox }: Props) {\n  const sender = conversation.participants.find(\n    (participant) => participant.id === message.senderId\n  );\n\n  const senderDetails =\n    message.senderId === CURRENT_USER_ID\n      ? {\n          type: 'me',\n        }\n      : {\n          avatar: sender?.avatar,\n          name: sender?.name,\n        };\n\n  const currentUser = senderDetails.type === 'me';\n\n  const isImage = message.contentType === 'image';\n\n  const firstName = senderDetails.name && senderDetails.name.split(' ')[0];\n\n  return (\n    <Stack direction=\"row\" justifyContent={currentUser ? 'flex-end' : 'unset'} sx={{ mb: 3 }}>\n      {!currentUser && (\n        <Avatar\n          alt={senderDetails.name}\n          src={senderDetails.avatar}\n          sx={{ width: 32, height: 32, mr: 2 }}\n        />\n      )}\n\n      <Stack spacing={1} alignItems=\"flex-end\">\n        <Typography\n          noWrap\n          variant=\"caption\"\n          sx={{\n            color: 'text.disabled',\n            ...(!currentUser && {\n              mr: 'auto',\n            }),\n          }}\n        >\n          {!currentUser && `${firstName},`} &nbsp;\n          {formatDistanceToNowStrict(new Date(message.createdAt), {\n            addSuffix: true,\n          })}\n        </Typography>\n\n        <Stack\n          sx={{\n            p: 1.5,\n            minWidth: 48,\n            maxWidth: 320,\n            borderRadius: 1,\n            overflow: 'hidden',\n            typography: 'body2',\n            bgcolor: 'background.neutral',\n            ...(currentUser && {\n              color: 'grey.800',\n              bgcolor: 'primary.lighter',\n            }),\n            ...(isImage && {\n              p: 0,\n            }),\n          }}\n        >\n          {isImage ? (\n            <Image\n              alt=\"attachment\"\n              src={message.body}\n              onClick={() => onOpenLightbox(message.body)}\n              sx={{\n                cursor: 'pointer',\n                '&:hover': {\n                  opacity: 0.9,\n                },\n              }}\n            />\n          ) : (\n            message.body\n          )}\n        </Stack>\n      </Stack>\n    </Stack>\n  );\n}\n","import { useEffect, useState, useRef } from 'react';\n// @types\nimport { IChatConversation } from '../../../../@types/chat';\n//\nimport Scrollbar from '../../../../components/scrollbar';\nimport Lightbox from '../../../../components/lightbox';\n//\nimport ChatMessageItem from './ChatMessageItem';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  conversation: IChatConversation;\n};\n\nexport default function ChatMessageList({ conversation }: Props) {\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  const [selectedImage, setSelectedImage] = useState<number>(-1);\n\n  useEffect(() => {\n    const scrollMessagesToBottom = () => {\n      if (scrollRef.current) {\n        scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n      }\n    };\n    scrollMessagesToBottom();\n  }, [conversation.messages]);\n\n  const imagesLightbox = conversation.messages\n    .filter((messages) => messages.contentType === 'image')\n    .map((messages) => ({ src: messages.body }));\n\n  const handleOpenLightbox = (imageUrl: string) => {\n    const imageIndex = imagesLightbox.findIndex((image) => image.src === imageUrl);\n    setSelectedImage(imageIndex);\n  };\n\n  const handleCloseLightbox = () => {\n    setSelectedImage(-1);\n  };\n\n  return (\n    <>\n      <Scrollbar\n        scrollableNodeProps={{\n          ref: scrollRef,\n        }}\n        sx={{ p: 3, height: 1 }}\n      >\n        {conversation.messages.map((message) => (\n          <ChatMessageItem\n            key={message.id}\n            message={message}\n            conversation={conversation}\n            onOpenLightbox={() => handleOpenLightbox(message.body)}\n          />\n        ))}\n      </Scrollbar>\n\n      <Lightbox\n        index={selectedImage}\n        slides={imagesLightbox}\n        open={selectedImage >= 0}\n        close={handleCloseLightbox}\n      />\n    </>\n  );\n}\n","// @mui\nimport { Stack, Box, Link, Typography, IconButton } from '@mui/material';\n// utils\nimport { fToNow } from '../../../../utils/formatTime';\n// @types\nimport { IChatParticipant } from '../../../../@types/chat';\n// components\nimport Iconify from '../../../../components/iconify';\nimport BadgeStatus from '../../../../components/badge-status';\nimport { CustomAvatar, CustomAvatarGroup } from '../../../../components/custom-avatar';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  participants: IChatParticipant[];\n};\n\nexport default function ChatHeaderDetail({ participants }: Props) {\n  const isGroup = participants.length > 1;\n\n  const participantInfo = participants.length ? participants[0] : null;\n\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        p: (theme) => theme.spacing(2, 1, 2, 2),\n      }}\n    >\n      {isGroup ? (\n        <Stack flexGrow={1}>\n          <CustomAvatarGroup max={3}>\n            {participants.map((participant) => (\n              <CustomAvatar key={participant.id} alt={participant.name} src={participant.avatar} />\n            ))}\n          </CustomAvatarGroup>\n\n          <Link\n            variant=\"body2\"\n            sx={{\n              mt: 0.5,\n              alignItems: 'center',\n              display: 'inline-flex',\n              color: 'text.secondary',\n            }}\n          >\n            {participants.length} persons\n            <Iconify icon=\"eva:arrow-ios-forward-fill\" width={16} />\n          </Link>\n        </Stack>\n      ) : (\n        <Stack flexGrow={1} direction=\"row\" alignItems=\"center\" spacing={2}>\n          <CustomAvatar\n            src={participantInfo?.avatar}\n            alt={participantInfo?.name}\n            BadgeProps={{\n              badgeContent: <BadgeStatus status={participantInfo?.status} />,\n            }}\n          />\n\n          <div>\n            <Typography variant=\"subtitle2\">{participantInfo?.name}</Typography>\n\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              {participantInfo?.status === 'offline' ? (\n                participantInfo?.lastActivity && fToNow(participantInfo?.lastActivity)\n              ) : (\n                <Box component=\"span\" sx={{ textTransform: 'capitalize' }}>\n                  {participantInfo?.status}\n                </Box>\n              )}\n            </Typography>\n          </div>\n        </Stack>\n      )}\n\n      <IconButton>\n        <Iconify icon=\"eva:phone-fill\" />\n      </IconButton>\n\n      <IconButton>\n        <Iconify icon=\"eva:video-fill\" />\n      </IconButton>\n\n      <IconButton>\n        <Iconify icon=\"eva:more-vertical-fill\" />\n      </IconButton>\n    </Stack>\n  );\n}\n","import { useState } from 'react';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport {\n  Box,\n  Chip,\n  Stack,\n  Avatar,\n  TextField,\n  Typography,\n  StackProps,\n  Autocomplete,\n} from '@mui/material';\n// @types\nimport { IChatParticipant } from '../../../../@types/chat';\n// components\nimport Iconify from '../../../../components/iconify';\nimport SearchNotFound from '../../../../components/search-not-found';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends StackProps {\n  contacts: IChatParticipant[];\n  recipients: IChatParticipant[];\n  onAddRecipients: (data: IChatParticipant[]) => void;\n}\n\nexport default function ChatHeaderCompose({\n  contacts,\n  recipients,\n  onAddRecipients,\n  sx,\n  ...other\n}: Props) {\n  const [searchRecipients, setSearchRecipients] = useState('');\n\n  const handleAddRecipients = (selectedRecipients: any) => {\n    setSearchRecipients('');\n    onAddRecipients(selectedRecipients);\n  };\n\n  return (\n    <Stack\n      spacing={1}\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        py: 2,\n        px: 2.5,\n        ...sx,\n      }}\n      {...other}\n    >\n      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n        To:\n      </Typography>\n\n      <Autocomplete\n        sx={{ minWidth: 240 }}\n        multiple\n        popupIcon={null}\n        noOptionsText={<SearchNotFound query={searchRecipients} />}\n        onChange={(event, value) => handleAddRecipients(value)}\n        onInputChange={(event, value) => setSearchRecipients(value)}\n        options={contacts}\n        getOptionLabel={(recipient: IChatParticipant) => recipient.name}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            size=\"small\"\n            placeholder={recipients.length ? '+Recipients' : ''}\n          />\n        )}\n        renderOption={(props, recipient, { inputValue, selected }) => {\n          const { name, avatar } = recipient;\n          const matches = match(name, inputValue);\n          const parts = parse(name, matches);\n\n          return (\n            <Box\n              component=\"li\"\n              sx={{\n                p: '12px !important',\n              }}\n              {...props}\n            >\n              <Box\n                sx={{\n                  mr: 1.5,\n                  width: 32,\n                  height: 32,\n                  overflow: 'hidden',\n                  borderRadius: '50%',\n                  position: 'relative',\n                }}\n              >\n                <Avatar alt={name} src={avatar} />\n                <Box\n                  sx={{\n                    top: 0,\n                    opacity: 0,\n                    width: '100%',\n                    height: '100%',\n                    display: 'flex',\n                    position: 'absolute',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    bgcolor: (theme) => alpha(theme.palette.grey[900], 0.8),\n                    transition: (theme) =>\n                      theme.transitions.create('opacity', {\n                        easing: theme.transitions.easing.easeInOut,\n                        duration: theme.transitions.duration.shorter,\n                      }),\n                    ...(selected && {\n                      opacity: 1,\n                      color: 'primary.main',\n                    }),\n                  }}\n                >\n                  <Iconify icon=\"eva:checkmark-fill\" />\n                </Box>\n              </Box>\n\n              {parts.map((part, index) => (\n                <Typography\n                  key={index}\n                  variant=\"subtitle2\"\n                  color={part.highlight ? 'primary' : 'textPrimary'}\n                >\n                  {part.text}\n                </Typography>\n              ))}\n            </Box>\n          );\n        }}\n        renderTags={(selectedRecipients, getTagProps) =>\n          selectedRecipients.map((recipient, index) => (\n            <Chip\n              {...getTagProps({ index })}\n              key={recipient.id}\n              size=\"small\"\n              label={recipient.name}\n              avatar={<Avatar alt={recipient.name} src={recipient.avatar} />}\n            />\n          ))\n        }\n      />\n    </Stack>\n  );\n}\n","import { useEffect } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\n// @mui\nimport { Card, Container, Stack } from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport {\n  getContacts,\n  getConversation,\n  getParticipants,\n  getConversations,\n  addRecipients,\n  sendMessage,\n  markConversationAsRead,\n  resetActiveConversation,\n} from '../../../redux/slices/chat';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// components\nimport { useSettingsContext } from '../../../components/settings';\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\n// @types\nimport { IChatParticipant, IChatSendMessage } from '../../../@types/chat';\n// sections\nimport ChatNav from './nav/ChatNav';\nimport ChatRoom from './room/ChatRoom';\nimport ChatMessageInput from './message/ChatMessageInput';\nimport ChatMessageList from './message/ChatMessageList';\nimport ChatHeaderDetail from './header/ChatHeaderDetail';\nimport ChatHeaderCompose from './header/ChatHeaderCompose';\n\n// ----------------------------------------------------------------------\n\nconst CURRENT_USER_ID = '8864c717-587d-472a-929a-8e5f298024da-0';\n\nexport default function Chat() {\n  const { themeStretch } = useSettingsContext();\n\n  const dispatch = useDispatch();\n\n  const navigate = useNavigate();\n\n  const { pathname } = useLocation();\n\n  const { conversationKey = '' } = useParams();\n\n  const { contacts, recipients, participants, activeConversationId, conversations } = useSelector(\n    (state) => state.chat\n  );\n\n  const selectedConversation = useSelector(() => {\n    if (activeConversationId) {\n      return conversations.byId[activeConversationId];\n    }\n\n    return {\n      id: '',\n      messages: [],\n      participants: [],\n      unreadCount: 0,\n      type: '',\n    };\n  });\n\n  const detailView = !!conversationKey;\n\n  const displayParticipants = participants.filter((item) => item.id !== CURRENT_USER_ID);\n\n  useEffect(() => {\n    dispatch(getConversations());\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const getDetails = async () => {\n      dispatch(getParticipants(`${conversationKey}`));\n      try {\n        await dispatch(getConversation(`${conversationKey}`));\n      } catch (error) {\n        console.error(error);\n        navigate(PATH_DASHBOARD.chat.new);\n      }\n    };\n\n    if (conversationKey) {\n      getDetails();\n    } else if (activeConversationId) {\n      dispatch(resetActiveConversation());\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [conversationKey]);\n\n  useEffect(() => {\n    if (activeConversationId) {\n      dispatch(markConversationAsRead(activeConversationId));\n    }\n  }, [dispatch, activeConversationId]);\n\n  const handleAddRecipients = (selectedRecipients: IChatParticipant[]) => {\n    dispatch(addRecipients(selectedRecipients));\n  };\n\n  const handleSendMessage = async (value: IChatSendMessage) => {\n    try {\n      dispatch(sendMessage(value));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Container maxWidth={themeStretch ? false : 'xl'}>\n      <CustomBreadcrumbs\n        heading=\"Chat\"\n        links={[\n          {\n            name: 'Dashboard',\n            href: PATH_DASHBOARD.root,\n          },\n          { name: 'Chat' },\n        ]}\n      />\n\n      <Card sx={{ height: '72vh', display: 'flex' }}>\n        <ChatNav conversations={conversations} activeConversationId={activeConversationId} />\n\n        <Stack flexGrow={1}>\n          {detailView ? (\n            <ChatHeaderDetail participants={displayParticipants} />\n          ) : (\n            <ChatHeaderCompose\n              recipients={recipients}\n              contacts={Object.values(contacts.byId)}\n              onAddRecipients={handleAddRecipients}\n            />\n          )}\n\n          <Stack\n            direction=\"row\"\n            flexGrow={1}\n            sx={{\n              overflow: 'hidden',\n              borderTop: (theme) => `solid 1px ${theme.palette.divider}`,\n            }}\n          >\n            <Stack flexGrow={1}>\n              <ChatMessageList conversation={selectedConversation} />\n\n              <ChatMessageInput\n                conversationId={activeConversationId}\n                onSend={handleSendMessage}\n                disabled={\n                  pathname === PATH_DASHBOARD.chat.root || pathname === PATH_DASHBOARD.chat.new\n                }\n              />\n            </Stack>\n\n            {detailView && (\n              <ChatRoom conversation={selectedConversation} participants={displayParticipants} />\n            )}\n          </Stack>\n        </Stack>\n      </Card>\n    </Container>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport { Chat } from '../../sections/@dashboard/chat';\n\n// ----------------------------------------------------------------------\n\nexport default function ChatPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Chat | Minimal UI</title>\n      </Helmet>\n\n      <Chat />\n    </>\n  );\n}\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDialogContentUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContent', slot);\n}\nconst dialogContentClasses = generateUtilityClasses('MuiDialogContent', ['root', 'dividers']);\nexport default dialogContentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"dividers\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogContentUtilityClass } from './dialogContentClasses';\nimport dialogTitleClasses from '../DialogTitle/dialogTitleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    dividers\n  } = ownerState;\n  const slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\nconst DialogContentRoot = styled('div', {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.dividers && styles.dividers];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  overflowY: 'auto',\n  padding: '20px 24px'\n}, ownerState.dividers ? {\n  padding: '16px 24px',\n  borderTop: `1px solid ${(theme.vars || theme).palette.divider}`,\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`\n} : {\n  [`.${dialogTitleClasses.root} + &`]: {\n    paddingTop: 0\n  }\n}));\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n  const {\n      className,\n      dividers = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    dividers\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDialogTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogTitle', slot);\n}\nconst dialogTitleClasses = generateUtilityClasses('MuiDialogTitle', ['root']);\nexport default dialogTitleClasses;"],"names":["StyledBadgeStatus","styled","theme","ownerState","status","size","width","height","display","borderRadius","alignItems","justifyContent","content","backgroundColor","palette","common","white","warning","main","transform","error","success","text","disabled","info","BadgeStatus","sx","useTheme","BreadcrumbsLink","link","activeLast","name","href","icon","styles","color","cursor","pointerEvents","renderContent","Box","component","mr","Link","RouterLink","to","CustomBreadcrumbs","links","action","heading","moreLink","other","lastLink","length","mb","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","flexShrink","mt","noWrap","target","rel","bgcolor","props","TextField","select","SelectProps","native","typography","subtitle2","padding","spacing","paddingRight","Number","shape","alpha","grey","shouldForwardProp","prop","border","transition","transitions","create","duration","shorter","boxShadow","customShadows","z20","breakpoints","up","FORMAT_PDF","FORMAT_TEXT","FORMAT_PHOTOSHOP","FORMAT_WORD","FORMAT_EXCEL","FORMAT_ZIP","FORMAT_ILLUSTRATOR","FORMAT_POWERPOINT","FORMAT_AUDIO","FORMAT_IMG","FORMAT_VIDEO","iconUrl","fileFormat","fileUrl","format","includes","fileTypeByUrl","fileThumb","thumb","split","pop","fileData","file","key","preview","type","path","lastModified","lastModifiedDate","DownloadButton","onDownload","IconButton","onClick","p","top","right","zIndex","opacity","position","bgBlur","FileThumbnail","tooltip","imageView","imgSx","src","objectFit","Tooltip","title","StyledLightbox","GlobalStyles","fontSize","h5","fontWeight","lineHeight","body2","filter","black","ICON_SIZE","Lightbox","slides","disabledZoom","disabledVideo","disabledTotal","disabledCaptions","disabledSlideshow","disabledThumbnails","disabledFullscreen","onGetCurrentIndex","totalItems","animation","swipe","carousel","finite","controller","closeOnBackdropClick","plugins","getPlugins","on","view","index","toolbar","buttons","DisplayTotal","render","iconClose","iconZoomIn","iconZoomOut","iconSlideshowPlay","iconSlideshowPause","iconPrev","iconNext","iconExitFullscreen","iconEnterFullscreen","Captions","Fullscreen","Slideshow","Thumbnails","Video","Zoom","plugin","currentIndex","useLightboxState","state","className","pl","left","px","minWidth","textAlign","SkeletonPostItem","item","xs","sm","md","mx","SkeletonPostDetails","ml","SkeletonMailNavItem","py","SkeletonConversationItem","MILLISECONDS_IN_MINUTE","MINUTES_IN_DAY","MINUTES_IN_MONTH","MINUTES_IN_YEAR","formatDistanceStrict","dirtyDate","dirtyBaseDate","options","_ref","_options$locale","_options$roundingMeth","requiredArgs","arguments","defaultOptions","getDefaultOptions","locale","defaultLocale","formatDistance","RangeError","comparison","compareAsc","isNaN","dateLeft","dateRight","localizeOptions","assign","cloneObject","addSuffix","Boolean","toDate","roundingMethodFn","roundingMethod","String","Math","floor","ceil","round","unit","milliseconds","getTime","minutes","timezoneOffset","getTimezoneOffsetInMilliseconds","dstNormalizedMinutes","defaultUnit","seconds","roundedMinutes","hours","days","months","years","formatDistanceToNowStrict","Date","now","ChatNavItem","conversation","openNav","isSelected","onSelect","details","getDetails","lastActivity","messages","createdAt","isGroup","otherParticipants","isUnread","unreadCount","hasOnlineInGroup","ListItemButton","disableGutters","ListItemAvatar","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","compact","slice","participant","alt","avatar","id","BadgeProps","ListItemText","primary","displayNames","primaryTypographyProps","secondary","displayText","secondaryTypographyProps","currentUserId","participants","join","lastMessage","sender","senderId","message","contentType","body","ChatNavList","conversations","onCloseNav","selected","navigate","useNavigate","isDesktop","useResponsive","loading","allIds","List","disablePadding","Array","conversationId","byId","conversationKey","otherParticipant","find","username","PATH_DASHBOARD","handleSelectConversation","ChatNavSearch","value","onChange","onClickAway","ClickAwayListener","fullWidth","placeholder","InputProps","startAdornment","InputAdornment","STATUS","ChatNavAccount","user","useAuthContext","useState","setStatus","openPopover","setOpenPopover","photoURL","displayName","event","currentTarget","open","onClose","arrow","pr","email","Divider","MenuItem","m","Select","textTransform","option","ChatNavSearchResults","searchContacts","searchResults","onSelectContact","isNotFound","paragraph","query","result","Avatar","StyledToggleButton","disableRipple","contrastText","darker","ChatNav","activeConversationId","setOpenNav","setSearchResults","setSearchContacts","isCollapse","useEffect","handleOpenNav","handleCloseNav","handleToggleNav","handleChangeSearch","axios","params","response","data","results","console","Drawer","PaperProps","pb","visibility","ModalProps","keepMounted","ChatRoomCollapseButton","onCollapse","children","Button","endIcon","ChatRoomAttachments","totalAttachments","uniq","flatten","attachments","overflow","borderTop","divider","borderBottom","attachment","AttachmentItem","log","fDateTime","dateCreated","ChatRoomSingle","role","Collapse","in","address","phone","row","ChatRoomParticipantInfoDialog","Dialog","maxWidth","DialogContent","pt","ChatRoomGroup","selectUserId","onOpenUserInfo","HEIGHT","Participant","onOpen","z8","background","paper","borderRight","neutral","ChatRoom","openInfo","setOpenInfo","openAttachments","setOpenAttachments","openParticipants","setOpenParticipants","selectUser","setSelectUser","participantId","anchor","ChatMessageInput","onSend","fileInputRef","useRef","setMessage","handleClickAttach","current","click","InputBase","onKeyUp","messageId","replace","c","r","random","toString","endAdornment","ref","style","ChatMessageItem","onOpenLightbox","senderDetails","currentUser","isImage","firstName","ChatMessageList","scrollRef","selectedImage","setSelectedImage","scrollTop","scrollHeight","imagesLightbox","scrollableNodeProps","imageUrl","imageIndex","findIndex","image","handleOpenLightbox","close","ChatHeaderDetail","participantInfo","max","fToNow","ChatHeaderCompose","contacts","recipients","onAddRecipients","searchRecipients","setSearchRecipients","Autocomplete","multiple","popupIcon","noOptionsText","selectedRecipients","onInputChange","getOptionLabel","recipient","renderInput","renderOption","inputValue","matches","match","parts","parse","easing","easeInOut","part","highlight","renderTags","getTagProps","Chip","label","Chat","themeStretch","useSettingsContext","dispatch","useDispatch","pathname","useLocation","useParams","useSelector","chat","selectedConversation","detailView","displayParticipants","getConversations","getContacts","getParticipants","getConversation","resetActiveConversation","markConversationAsRead","handleSendMessage","sendMessage","Container","Card","Object","values","addRecipients","ChatPage","getDialogContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentRoot","overridesResolver","root","dividers","_extends","flex","WebkitOverflowScrolling","overflowY","vars","dialogTitleClasses","paddingTop","React","inProps","useThemeProps","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","getDialogTitleUtilityClass"],"sourceRoot":""}