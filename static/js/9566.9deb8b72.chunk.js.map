{"version":3,"file":"static/js/9566.9deb8b72.chunk.js","mappings":"mUAKe,SAASA,EAAiB,GAA0B,IAArBC,EAAK,iCACjD,OACE,UAAC,MAAI,gBAACC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAAOJ,GAAK,eACxC,SAAC,IAAQ,CAACK,QAAQ,cAAcC,MAAM,OAAOC,GAAI,CAAEC,OAAQ,IAAKC,aAAc,MAC9E,UAAC,IAAG,CAACF,GAAI,CAAEG,QAAS,OAAQC,GAAI,KAAM,WACpC,SAAC,IAAQ,CAACN,QAAQ,WAAWE,GAAI,CAAED,MAAO,GAAIE,OAAQ,OACtD,SAAC,IAAQ,CAACH,QAAQ,OAAOE,GAAI,CAAEK,GAAI,EAAGC,SAAU,WAIxD,CCVe,SAASC,IACtB,OACE,iCACE,SAAC,IAAQ,CAACR,MAAM,OAAOE,OAAQ,IAAKH,QAAQ,cAAcE,GAAI,CAAEE,aAAc,MAC9E,UAAC,IAAG,CAACF,GAAI,CAAEI,GAAI,EAAGD,QAAS,OAAQK,WAAY,UAAW,WACxD,SAAC,IAAQ,CAACV,QAAQ,WAAWC,MAAO,GAAIE,OAAQ,MAChD,UAAC,IAAG,CAACD,GAAI,CAAEM,SAAU,EAAGG,GAAI,GAAI,WAC9B,SAAC,IAAQ,CAACX,QAAQ,OAAOG,OAAQ,MACjC,SAAC,IAAQ,CAACH,QAAQ,OAAOG,OAAQ,MACjC,SAAC,IAAQ,CAACH,QAAQ,OAAOG,OAAQ,aAK3C,C,mCCde,SAASS,EAAoB,GAA+B,IAA7BV,EAAE,EAAFA,GAAOP,GAAK,YACxD,OACE,UAAC,KAAK,gBAACkB,QAAS,EAAGC,UAAU,MAAMJ,WAAW,SAASR,IAAE,QAAIa,GAAI,EAAGC,GAAI,GAAMd,IAAUP,GAAK,eAC3F,SAAC,IAAQ,CAACK,QAAQ,WAAWC,MAAO,GAAIE,OAAQ,MAChD,SAAC,IAAQ,CAACH,QAAQ,OAAOE,GAAI,CAAED,MAAO,GAAKE,OAAQ,SAGzD,C,aCPe,SAASc,EAAyB,GAA+B,IAA7Bf,EAAE,EAAFA,GAAOP,GAAK,YAC7D,OACE,UAAC,KAAK,gBACJkB,QAAS,EACTC,UAAU,MACVJ,WAAW,SACXR,IAAE,QAAIa,GAAI,EAAGC,GAAI,KAAQd,IACrBP,GAAK,eAET,SAAC,IAAQ,CAACK,QAAQ,WAAWC,MAAO,GAAIE,OAAQ,MAEhD,UAAC,IAAK,CAACU,QAAS,GAAKX,GAAI,CAAEM,SAAU,GAAI,WACvC,SAAC,IAAQ,CAACR,QAAQ,OAAOE,GAAI,CAAED,MAAO,GAAKE,OAAQ,OACnD,SAAC,IAAQ,CAACH,QAAQ,OAAOE,GAAI,CAAED,MAAO,IAAME,OAAQ,YAI5D,C,kSCKe,SAASe,IACtB,IAAQC,GAAiBC,EAAAA,EAAAA,MAAjBD,aAEAE,GAAUC,EAAAA,EAAAA,MAAVD,MAER,GAAsCE,EAAAA,EAAAA,UAAsB,IAAG,eAAxDC,EAAW,KAAEC,EAAc,KAElC,GAAwBF,EAAAA,EAAAA,UAA2B,MAAK,eAAjDG,EAAI,KAAEC,EAAO,KAEpB,GAAsCJ,EAAAA,EAAAA,WAAS,GAAK,eAA7CK,EAAW,KAAEC,EAAc,KAElC,GAAgCN,EAAAA,EAAAA,UAAS,MAAK,eAAvCO,EAAQ,KAAEC,EAAW,KAEtBC,GAAUC,EAAAA,EAAAA,cAAW,uBAAC,kHAEDC,EAAAA,EAAAA,IAAU,iBAAkB,CACjDC,OAAQ,CAAEd,MAAAA,KACT,KAAD,EAFIe,EAAQ,OAGdT,EAAQS,EAASC,KAAKX,MACtBG,GAAe,GAAO,gDAEtBS,QAAQC,MAAM,EAAD,IACbV,GAAe,GACfE,EAAY,KAAMS,SAAS,yDAE5B,CAACnB,IAEEoB,GAAiBR,EAAAA,EAAAA,cAAW,uBAAC,kHAERC,EAAAA,EAAAA,IAAU,yBAA0B,CACzDC,OAAQ,CAAEd,MAAAA,KACT,KAAD,EAFIe,EAAQ,OAIdX,EAAeW,EAASC,KAAKb,aAAa,gDAE1Cc,QAAQC,MAAM,EAAD,IAAQ,yDAEtB,CAAClB,IAYJ,OAVAqB,EAAAA,EAAAA,YAAU,WACRD,GACF,GAAG,CAACA,KAEJC,EAAAA,EAAAA,YAAU,WACJrB,GACFW,GAEJ,GAAG,CAACA,EAASX,KAGX,iCACE,SAAC,KAAM,WACL,4CAAqB,OAAJK,QAAI,IAAJA,OAAI,EAAJA,EAAML,QAAS,GAAE,sBAGpC,UAAC,IAAS,CAACsB,UAAUxB,GAAuB,KAAK,WAC/C,SAAC,IAAiB,CAChByB,QAAQ,eACRC,MAAO,CACL,CACEC,KAAM,YACNC,KAAMC,EAAAA,GAAAA,MAER,CACEF,KAAM,OACNC,KAAMC,EAAAA,GAAAA,KAAAA,MAER,CACEF,KAAU,OAAJpB,QAAI,IAAJA,OAAI,EAAJA,EAAML,UAKjBK,IACC,UAAC,IAAK,CACJxB,GAAI,CACFE,aAAc,EACd6C,UAAW,SAACC,GAAK,MAAM,CACrBnD,GAAImD,EAAMC,cAAcC,KACzB,GACD,WAEF,SAAC,KAAY,CAAC1B,KAAMA,KAEpB,SAAC,IAAU,CACT1B,QAAQ,KACRE,GAAI,CACFc,GAAI,EACJD,GAAI,CAAEhB,GAAI,IACV,SAED2B,EAAK2B,eAGR,SAAC,IAAQ,CACPC,SAAU5B,EAAK6B,KACfrD,GAAI,CACFa,GAAI,CAAEhB,GAAI,OAId,UAAC,IAAK,CACJc,QAAS,EACTX,GAAI,CACFc,GAAI,EACJD,GAAI,CAAEhB,GAAI,IACV,WAEF,SAAC,IAAO,KAER,SAAC,KAAY,CAAC2B,KAAMA,KAEpB,SAAC,IAAO,QAGV,UAAC,IAAK,CACJxB,GAAI,CACFa,GAAI,CAAEhB,GAAI,IACV,WAEF,UAAC,IAAK,CAACe,UAAU,MAAMZ,GAAI,CAAEsD,GAAI,GAAI,WACnC,SAAC,IAAU,CAACxD,QAAQ,KAAI,uBAExB,UAAC,IAAU,CAACA,QAAQ,YAAYE,GAAI,CAAEuD,MAAO,iBAAkB,cAC3D/B,EAAKgC,SAASC,OAAM,WAI1B,SAAC,KAAmB,KAEpB,SAAC,IAAO,CAACzD,GAAI,CAAEI,GAAI,EAAGkD,GAAI,SAG5B,UAAC,IAAK,CACJtD,GAAI,CACFa,GAAI,CAAEhB,GAAI,IACV,WAEF,SAAC,KAAmB,CAAC2D,SAAUhC,EAAKgC,YAEpC,SAAC,IAAU,CACTE,MAAO,EACP1D,GAAI,CACF2D,GAAI,EACJlD,GAAI,OACJmD,GAAI,CAAEjE,GAAI,OAAQE,GAAI,YAO/B+B,IAAaF,IAAe,UAAC,IAAU,CAAC5B,QAAQ,KAAI,iBAAM8B,KAE1DF,IAAe,SAAC,KAAmB,MAEjCJ,EAAYmC,SACb,iCACE,SAAC,IAAU,CAAC3D,QAAQ,KAAKE,GAAI,CAAE2D,GAAI,GAAI,2BAIvC,SAAC,IAAG,CACFE,IAAK,EACL1D,QAAQ,OACR2D,oBAAqB,CACnBnE,GAAI,iBACJC,GAAI,iBACJC,GAAI,kBACJ,SAEDyB,EAAYyC,MAAMzC,EAAYmC,OAAS,GAAGO,KAAI,SAACC,GAAU,OACxD,SAAC,KAAY,CAAqBzC,KAAMyC,GAArBA,EAAWC,GAAwB,cAQtE,C,2DCxMA,KAAeC,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,+DACD,Y,2DCFJ,KAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,+DACD,W","sources":["components/skeleton/SkeletonPostItem.tsx","components/skeleton/SkeletonPostDetails.tsx","components/skeleton/SkeletonMailNavItem.tsx","components/skeleton/SkeletonConversationItem.tsx","pages/dashboard/BlogPostPage.tsx","../node_modules/@mui/material/esm/internal/svg-icons/FirstPage.js","../node_modules/@mui/material/esm/internal/svg-icons/LastPage.js"],"sourcesContent":["// @mui\nimport { Box, Skeleton, Grid, GridProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonPostItem({ ...other }: GridProps) {\n  return (\n    <Grid item xs={12} sm={6} md={3} {...other}>\n      <Skeleton variant=\"rectangular\" width=\"100%\" sx={{ height: 200, borderRadius: 2 }} />\n      <Box sx={{ display: 'flex', mt: 1.5 }}>\n        <Skeleton variant=\"circular\" sx={{ width: 40, height: 40 }} />\n        <Skeleton variant=\"text\" sx={{ mx: 1, flexGrow: 1 }} />\n      </Box>\n    </Grid>\n  );\n}\n","// @mui\nimport { Box, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonPostDetails() {\n  return (\n    <>\n      <Skeleton width=\"100%\" height={560} variant=\"rectangular\" sx={{ borderRadius: 2 }} />\n      <Box sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\n        <Skeleton variant=\"circular\" width={64} height={64} />\n        <Box sx={{ flexGrow: 1, ml: 2 }}>\n          <Skeleton variant=\"text\" height={20} />\n          <Skeleton variant=\"text\" height={20} />\n          <Skeleton variant=\"text\" height={20} />\n        </Box>\n      </Box>\n    </>\n  );\n}\n","// @mui\nimport { Stack, Skeleton, StackProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonMailNavItem({ sx, ...other }: StackProps) {\n  return (\n    <Stack spacing={1} direction=\"row\" alignItems=\"center\" sx={{ px: 3, py: 1, ...sx }} {...other}>\n      <Skeleton variant=\"circular\" width={32} height={32} />\n      <Skeleton variant=\"text\" sx={{ width: 0.5, height: 16 }} />\n    </Stack>\n  );\n}\n","// @mui\nimport { Stack, Skeleton, StackProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonConversationItem({ sx, ...other }: StackProps) {\n  return (\n    <Stack\n      spacing={1}\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{ px: 3, py: 1.5, ...sx }}\n      {...other}\n    >\n      <Skeleton variant=\"circular\" width={48} height={48} />\n\n      <Stack spacing={0.5} sx={{ flexGrow: 1 }}>\n        <Skeleton variant=\"text\" sx={{ width: 0.5, height: 16 }} />\n        <Skeleton variant=\"text\" sx={{ width: 0.25, height: 12 }} />\n      </Stack>\n    </Stack>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\nimport { useEffect, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n// @mui\nimport { Box, Divider, Stack, Container, Typography, Pagination } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// utils\nimport axios from '../../utils/axios';\n// @types\nimport { IBlogPost } from '../../@types/blog';\n// components\nimport Markdown from '../../components/markdown';\nimport CustomBreadcrumbs from '../../components/custom-breadcrumbs';\nimport { useSettingsContext } from '../../components/settings';\nimport { SkeletonPostDetails } from '../../components/skeleton';\n// sections\nimport {\n  BlogPostHero,\n  BlogPostTags,\n  BlogPostCard,\n  BlogPostCommentList,\n  BlogPostCommentForm,\n} from '../../sections/@dashboard/blog';\n\n// ----------------------------------------------------------------------\n\nexport default function BlogPostPage() {\n  const { themeStretch } = useSettingsContext();\n\n  const { title } = useParams();\n\n  const [recentPosts, setRecentPosts] = useState<IBlogPost[]>([]);\n\n  const [post, setPost] = useState<IBlogPost | null>(null);\n\n  const [loadingPost, setLoadingPost] = useState(true);\n\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  const getPost = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/blog/post', {\n        params: { title },\n      });\n      setPost(response.data.post);\n      setLoadingPost(false);\n    } catch (error) {\n      console.error(error);\n      setLoadingPost(false);\n      setErrorMsg(error.message);\n    }\n  }, [title]);\n\n  const getRecentPosts = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/blog/posts/recent', {\n        params: { title },\n      });\n\n      setRecentPosts(response.data.recentPosts);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [title]);\n\n  useEffect(() => {\n    getRecentPosts();\n  }, [getRecentPosts]);\n\n  useEffect(() => {\n    if (title) {\n      getPost();\n    }\n  }, [getPost, title]);\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Blog: ${post?.title || ''} | Minimal UI`}</title>\n      </Helmet>\n\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <CustomBreadcrumbs\n          heading=\"Post Details\"\n          links={[\n            {\n              name: 'Dashboard',\n              href: PATH_DASHBOARD.root,\n            },\n            {\n              name: 'Blog',\n              href: PATH_DASHBOARD.blog.root,\n            },\n            {\n              name: post?.title,\n            },\n          ]}\n        />\n\n        {post && (\n          <Stack\n            sx={{\n              borderRadius: 2,\n              boxShadow: (theme) => ({\n                md: theme.customShadows.card,\n              }),\n            }}\n          >\n            <BlogPostHero post={post} />\n\n            <Typography\n              variant=\"h6\"\n              sx={{\n                py: 5,\n                px: { md: 5 },\n              }}\n            >\n              {post.description}\n            </Typography>\n\n            <Markdown\n              children={post.body}\n              sx={{\n                px: { md: 5 },\n              }}\n            />\n\n            <Stack\n              spacing={3}\n              sx={{\n                py: 5,\n                px: { md: 5 },\n              }}\n            >\n              <Divider />\n\n              <BlogPostTags post={post} />\n\n              <Divider />\n            </Stack>\n\n            <Stack\n              sx={{\n                px: { md: 5 },\n              }}\n            >\n              <Stack direction=\"row\" sx={{ mb: 3 }}>\n                <Typography variant=\"h4\">Comments</Typography>\n\n                <Typography variant=\"subtitle2\" sx={{ color: 'text.disabled' }}>\n                  ({post.comments.length})\n                </Typography>\n              </Stack>\n\n              <BlogPostCommentForm />\n\n              <Divider sx={{ mt: 5, mb: 2 }} />\n            </Stack>\n\n            <Stack\n              sx={{\n                px: { md: 5 },\n              }}\n            >\n              <BlogPostCommentList comments={post.comments} />\n\n              <Pagination\n                count={8}\n                sx={{\n                  my: 5,\n                  ml: 'auto',\n                  mr: { xs: 'auto', md: 0 },\n                }}\n              />\n            </Stack>\n          </Stack>\n        )}\n\n        {errorMsg && !loadingPost && <Typography variant=\"h6\">404 {errorMsg}</Typography>}\n\n        {loadingPost && <SkeletonPostDetails />}\n\n        {!!recentPosts.length && (\n          <>\n            <Typography variant=\"h4\" sx={{ my: 5 }}>\n              Recent posts\n            </Typography>\n\n            <Box\n              gap={3}\n              display=\"grid\"\n              gridTemplateColumns={{\n                xs: 'repeat(1, 1fr)',\n                sm: 'repeat(2, 1fr)',\n                md: 'repeat(4, 1fr)',\n              }}\n            >\n              {recentPosts.slice(recentPosts.length - 4).map((recentPost) => (\n                <BlogPostCard key={recentPost.id} post={recentPost} />\n              ))}\n            </Box>\n          </>\n        )}\n      </Container>\n    </>\n  );\n}\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');"],"names":["SkeletonPostItem","other","item","xs","sm","md","variant","width","sx","height","borderRadius","display","mt","mx","flexGrow","SkeletonPostDetails","alignItems","ml","SkeletonMailNavItem","spacing","direction","px","py","SkeletonConversationItem","BlogPostPage","themeStretch","useSettingsContext","title","useParams","useState","recentPosts","setRecentPosts","post","setPost","loadingPost","setLoadingPost","errorMsg","setErrorMsg","getPost","useCallback","axios","params","response","data","console","error","message","getRecentPosts","useEffect","maxWidth","heading","links","name","href","PATH_DASHBOARD","boxShadow","theme","customShadows","card","description","children","body","mb","color","comments","length","count","my","mr","gap","gridTemplateColumns","slice","map","recentPost","id","createSvgIcon","_jsx","d"],"sourceRoot":""}