{"version":3,"file":"static/js/6118.7652df48.chunk.js","mappings":"qYAce,SAASA,EAAgB,GAAwC,IAAtCC,EAAI,EAAJA,KAAMC,EAAU,EAAVA,WAAYC,EAAQ,EAARA,SAClDC,EAAqBH,EAArBG,KAAMC,EAAeJ,EAAfI,KAAMC,EAASL,EAATK,KAEdC,GAAM,QACVC,QAAS,cACTC,WAAY,SACZC,MAAO,gBACHP,IACDD,GAAc,CACbS,OAAQ,UACRC,cAAe,OACfF,MAAO,kBAIPG,GACJ,gCACGP,IACC,SAACQ,EAAA,EAAG,CACFC,UAAU,OACVC,GAAI,CACFC,GAAI,EACJT,QAAS,UACT,QAAS,CAAEU,MAAO,GAAIC,OAAQ,KAC9B,SAEDb,IAIJF,KAIL,OAAIC,GAEA,SAACe,EAAA,EAAI,CAACL,UAAWM,EAAAA,GAAYC,GAAIjB,EAAMW,GAAIT,EAAO,SAC/CM,KAKA,UAACC,EAAA,EAAG,CAACE,GAAIT,EAAO,cAAGM,EAAa,MACzC,C,gECjDe,SAASU,EAAkB,GAQd,IAP1BC,EAAK,EAALA,MACAC,EAAM,EAANA,OACAC,EAAO,EAAPA,QACAC,EAAQ,EAARA,SACAzB,EAAU,EAAVA,WACAc,EAAE,EAAFA,GACGY,GAAK,YAEFC,EAAWL,EAAMA,EAAMM,OAAS,GAAG1B,KAEzC,OACE,UAACU,EAAA,EAAG,CAACE,IAAE,QAAIe,GAAI,GAAMf,GAAK,WACxB,UAACgB,EAAA,EAAK,CAACC,UAAU,MAAMxB,WAAW,SAAQ,WACxC,UAACK,EAAA,EAAG,CAACE,GAAI,CAAEkB,SAAU,GAAI,UAEtBR,IACC,SAACS,EAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,WAClCX,MAKFF,EAAMM,SACP,SAACQ,EAAA,GAAW,gBAACC,WAAW,SAACC,EAAS,KAASZ,GAAK,aAC7CJ,EAAMiB,KAAI,SAACxC,GAAI,OACd,SAAC,EAAQ,CAEPA,KAAMA,EACNC,WAAYA,EACZC,SAAUF,EAAKG,OAASyB,GAHnB5B,EAAKG,MAAQ,GAIlB,UAMTqB,IAAU,UAACX,EAAA,EAAG,CAACE,GAAI,CAAE0B,WAAY,GAAI,cAAGjB,EAAM,YAI9CE,IACD,SAACb,EAAA,EAAG,CAACE,GAAI,CAAE2B,GAAI,GAAI,SAChBhB,EAASc,KAAI,SAACpC,GAAI,OACjB,SAACe,EAAA,EAAI,CACHwB,QAAM,EAENvC,KAAMA,EACN+B,QAAQ,QACRS,OAAO,SACPC,IAAI,WACJ9B,GAAI,CAAER,QAAS,SAAU,SAExBH,GAPIA,EAQA,QAMnB,CAIA,SAASmC,IACP,OACE,SAAC1B,EAAA,EAAG,CACFC,UAAU,OACVC,GAAI,CAAEE,MAAO,EAAGC,OAAQ,EAAG4B,aAAc,MAAOC,QAAS,kBAG/D,C,oRCvEMC,EAAwB,CAC5B,CACEC,MAAO,KACPC,WAAY,KACZjC,MAAO,KAET,CACEgC,MAAO,YACPC,WAAY,aACZjC,MAAO,IACPkC,UAAU,GAEZ,CACEF,MAAO,WACPC,WAAY,YACZjC,MAAO,IACPkC,UAAU,GAEZ,CACEF,MAAO,MACPC,WAAY,MACZE,KAAM,SACNnC,MAAO,IACPkC,UAAU,EACVE,MAAO,SACPC,YAAa,UAEf,CACEL,MAAO,WACPC,WAAY,YACZK,YAAa,sDACbC,KAAM,EACNC,YAAa,SAACC,GAA6B,gBACtCA,EAAOC,IAAIC,WAAa,GAAE,YAAIF,EAAOC,IAAIE,UAAY,GAAE,GAE9D,CACEZ,MAAO,SACPC,WAAY,IACZjC,MAAO,GACPoC,MAAO,QACPS,UAAU,EACVC,mBAAmB,EACnBC,WAAY,kBACV,SAACC,EAAA,EAAU,WACT,SAAC,IAAO,CAAC5D,KAAK,4BACH,IAqBJ,SAAS6D,EAAc,GAAkB,IAAhBC,EAAI,EAAJA,KACtC,OAAO,SAACC,EAAA,EAAQ,CAACpB,QAASA,EAASqB,KAAMF,EAAMG,mBAAiB,EAACC,yBAAuB,GAC1F,C,2HCvDMvB,EAAwB,CAkB5B,CACEC,MAAO,KACPuB,MAAM,GAER,CACEvB,MAAO,SACPC,WAAY,SACZG,MAAO,SACPC,YAAa,SACbrC,MAAO,GACP6C,UAAU,EACVW,YAAY,EACZV,mBAAmB,EACnBC,WAAY,SAACN,GAAM,OAAK,SAAC,IAAY,CAACvD,KAAMuD,EAAOC,IAAIxD,KAAMY,GAAI,CAAEE,MAAO,GAAIC,OAAQ,KAAQ,GAEhG,CACE+B,MAAO,OACPC,WAAY,OACZM,KAAM,EACNL,UAAU,GAEZ,CACEF,MAAO,QACPC,WAAY,QACZM,KAAM,EACNL,UAAU,EACVa,WAAY,SAACN,GAAM,OACjB,SAACxB,EAAA,EAAU,CAACC,QAAQ,QAAQpB,GAAI,CAAE2D,eAAgB,aAAe/B,QAAM,WACpEe,EAAOC,IAAIgB,OACD,GAGjB,CACE1B,MAAO,YACPG,KAAM,WACNF,WAAY,aACZG,MAAO,QACPC,YAAa,QACbrC,MAAO,KAET,CACEgC,MAAO,SACPG,KAAM,SACNF,WAAY,SACZjC,MAAO,IACP8C,mBAAmB,EACnBC,WAAY,SAACN,GAAM,OACjB,SAACkB,EAAA,EAAM,CAACC,KAAK,QAAQC,MAAOpB,EAAOC,IAAIoB,OAAQC,UAAW,GAAKC,UAAQ,GAAG,GAG9E,CACEhC,MAAO,SACPG,KAAM,eACNF,WAAY,SACZgC,aAAc,CAAC,SAAU,OAAQ,QACjC7B,MAAO,SACPC,YAAa,SACbrC,MAAO,IACP+C,WAAY,SAACN,GAAM,OAmHvB,SAAsByB,GACpB,IACMC,EAAiC,WADzBC,EAAAA,EAAAA,KACQC,QAAQC,KAC9B,OACE,SAAC,IAAK,CACJpD,QAASiD,EAAU,OAAS,SAC5B3E,OAAsB,SAAd0E,EAAwB,QAA2B,SAAdA,GAAwB,YAAc,UACnFpE,GAAI,CAAEyE,GAAI,QAAS,SAElBL,GAGP,CA/H4BM,CAAa/B,EAAOC,IAAI+B,OAAO,GAEzD,CACEzC,MAAO,UACPG,KAAM,UACNC,MAAO,SACPC,YAAa,SACbrC,MAAO,IAEP+C,WAAY,SAACN,GAAM,OACjBA,EAAOC,IAAIgC,SACT,SAAC,IAAO,CAACtF,KAAK,8BAA8BU,GAAI,CAAEN,MAAO,kBAEzD,GACD,GAEL,CACEwC,MAAO,cACPG,KAAM,SACNF,WAAY,cACZG,MAAO,SACPC,YAAa,SACbrC,MAAO,IACP+C,WAAY,SAACN,GAAM,OACjB,UAAC3B,EAAA,EAAK,CAAC6D,QAAS,EAAG5D,UAAU,MAAMxB,WAAW,SAASO,GAAI,CAAE8E,GAAI,EAAG5E,MAAO,EAAGC,OAAQ,GAAI,WACxF,SAAC4E,EAAA,EAAc,CACbhB,MAAOpB,EAAOC,IAAIoC,YAClB5D,QAAQ,cACR1B,OACGiD,EAAOC,IAAIoC,YAAc,GAAM,QAC/BrC,EAAOC,IAAIoC,YAAc,IAAMrC,EAAOC,IAAIoC,YAAc,IAAM,YAC/D,UAEFhF,GAAI,CAAEE,MAAO,EAAGC,OAAQ,MAE1B,SAACgB,EAAA,EAAU,CAACC,QAAQ,UAAUpB,GAAI,CAAEE,MAAO,IAAK,UAC7C+E,EAAAA,EAAAA,IAAStC,EAAOC,IAAIoC,iBAEjB,GAGZ,CACE9C,MAAO,SACPC,WAAY,IACZG,MAAO,QACPpC,MAAO,GACP6C,UAAU,EACVW,YAAY,EACZV,mBAAmB,EACnBC,WAAY,SAACN,GAAM,OACjB,SAACO,EAAA,EAAU,CAACgC,QAAS,kBAAMC,QAAQC,IAAI,KAAMzC,EAAOC,IAAIyC,GAAG,EAAC,UAC1D,SAAC,IAAO,CAAC/F,KAAK,4BACH,IAuBJ,SAASgG,EAAe,GAAkB,IAAhBlC,EAAI,EAAJA,KACvC,GAA4CmC,EAAAA,EAAAA,UAA6B,IAAG,eAArEC,EAAc,KAAEC,EAAiB,KAExC,GAAIxD,EAAQnB,OAAS,EAAG,CACtB,IAAM4E,EAAezD,EAAQ0D,MAAK,SAACC,GAAM,MAAsB,WAAjBA,EAAO1D,KAAkB,IACjE2D,EAAiB5D,EAAQ6D,WAAU,SAACC,GAAG,MAAmB,WAAdA,EAAI7D,KAAkB,IAElE8D,GAAwBC,EAAAA,EAAAA,MAA0BxE,KAAI,SAACyE,GAAQ,yBAChEA,GAAQ,IACXC,eAAgBC,GAAgB,IAElCnE,EAAQ4D,IAAe,kBAClBH,GAAY,IACfW,gBAAiBL,GAErB,CAEA,IAAMM,EAAWlD,EAAKmD,QAAO,SAAC3D,GAAG,OAAK4C,EAAegB,SAAS5D,EAAIyC,GAAG,IAIrE,OAFAF,QAAQC,IAAI,WAAYkB,IAGtB,SAACjD,EAAA,EAAQ,CACPE,mBAAiB,EACjBC,yBAAuB,EACvBF,KAAMF,EACNnB,QAASA,EACTwE,YAAU,EACVC,uBAAwB,SAACC,GACvBlB,EAAkBkB,EACpB,EACAC,WAAY,CACVC,QAASC,EAAAA,IAIjB,CAoBA,SAASV,EAAiB,GAAkD,IAAhDW,EAAI,EAAJA,KAAMC,EAAU,EAAVA,WAChC,OACE,SAAClH,EAAA,EAAG,CAACE,GAAI,CAAEiH,EAAG,EAAG9G,OAAQ,EAAGV,WAAY,WAAYD,QAAS,QAAS,UACpE,SAACqE,EAAA,EAAM,CACLC,KAAK,QACLG,UAAW,GACXiD,YAAY,eACZnD,MAAOoD,OAAOJ,EAAKhD,OACnBqD,SAAU,SAACC,EAAOC,GAChBN,GAAW,kBAAKD,GAAI,IAAEhD,MAAOuD,IAC/B,KAIR,CCnOO,IAAMC,GAAY,OAAIC,MAAM,KAAK/F,KAAI,SAACgG,EAAGC,GAAK,MAAM,CACzDrC,GAAIsC,EAAAA,GAAAA,GAASD,GACbtI,KAAMuI,EAAAA,GAAAA,KAAAA,SAAoBD,GAC1B9D,MAAO+D,EAAAA,GAAAA,MAAYD,GACnBE,UAAWD,EAAAA,GAAAA,KAAWD,GACtB1C,YAAa2C,EAAAA,GAAAA,OAAAA,QAAqBD,GAClC1D,OAAQ2D,EAAAA,GAAAA,OAAAA,OAAoBD,GAC5B/C,QAAQkD,EAAAA,EAAAA,IAAc,CAAC,SAAU,OAAQ,SACzCjD,QAAS+C,EAAAA,GAAAA,QAAcD,GACvB5E,SAAU6E,EAAAA,GAAAA,KAAAA,SAAoBD,GAC9B7E,UAAW8E,EAAAA,GAAAA,KAAAA,UAAqBD,GAChCI,IAAKH,EAAAA,GAAAA,OAAAA,IAAiBD,GACvB,IAIc,SAASK,IACtB,OACE,iCACE,SAAC,KAAM,WACL,yEAGF,SAACjI,EAAA,EAAG,CACFE,GAAI,CACFgI,GAAI,EACJC,GAAI,EACJjG,QAAS,SAACkG,GAAK,MAA6B,UAAvBA,EAAM3D,QAAQC,KAAmB,WAAa,UAAU,GAC7E,UAEF,UAAC2D,EAAA,EAAS,YACR,SAAC,IAAiB,CAChBzH,QAAQ,WACRF,MAAO,CACL,CACEpB,KAAM,aACNC,KAAM+I,EAAAA,GAAAA,YAER,CAAEhJ,KAAM,aAEVuB,SAAU,CAAC,sCACXX,GAAI,CAAEe,GAAI,MAGZ,UAACI,EAAA,EAAU,CAACC,QAAQ,QAAQpB,GAAI,CAAEqI,GAAI,GAAI,wCACd,qCAAqB,SAAK,qCAAqB,uBAEzE,kBAAM,yDACiD,KACvD,SAACjI,EAAA,EAAI,CAACf,KAAK,qCAAqCwC,OAAO,SAASC,IAAI,WAAU,2BAOpF,SAACqG,EAAA,EAAS,CAACnI,GAAI,CAAEqI,GAAI,IAAK,UACxB,UAACrH,EAAA,EAAK,CAAC6D,QAAS,EAAE,WAChB,UAACyD,EAAA,EAAI,YACH,SAACC,EAAA,EAAU,CAACC,MAAM,QAAQxI,GAAI,CAAEe,GAAI,MACpC,SAACjB,EAAA,EAAG,CAACE,GAAI,CAAEG,OAAQ,KAAM,UACvB,SAACgD,EAAa,CAACC,KAAMmE,UAIzB,UAACe,EAAA,EAAI,YACH,SAACC,EAAA,EAAU,CAACC,MAAM,SAASxI,GAAI,CAAEe,GAAI,MACrC,SAACjB,EAAA,EAAG,CAACE,GAAI,CAAEG,OAAQ,KAAM,UACvB,SAACmF,EAAc,CAAClC,KAAMmE,gBAOpC,C,iLCpFO,SAASkB,EAAQC,GACtB,OAAOC,IAAQD,GAAQE,QACzB,CAEO,SAASC,EAAUH,GAGxB,OAAOI,EAFQJ,EAASC,IAAQD,GAAQE,OAAO,WAAa,GAEtC,MACxB,CAEO,SAAS3D,EAASyD,GAGvB,OAAOI,EAFQJ,EAASC,IAAQxB,OAAOuB,GAAU,KAAKE,OAAO,QAAU,GAEjD,KACxB,CAEO,SAASG,EAAeL,GAG7B,OAAOI,EAFQJ,EAASC,IAAQD,GAAQE,OAAO,SAAW,GAEpC,MACxB,CAEO,SAASI,EAAMN,GAGpB,OAAOI,EAFQJ,EAASC,IAAQD,GAAQE,OAAO,SAAW,GAEpC,KACxB,CAEA,SAASE,EAAOF,GAA8B,IAAdK,EAAG,uDAAG,MAC9BC,EAAYN,EAAOpC,SAASyC,GAElC,OAAOC,EAAYN,EAAOO,QAAQF,EAAK,IAAML,CAC/C,C","sources":["components/custom-breadcrumbs/LinkItem.tsx","components/custom-breadcrumbs/CustomBreadcrumbs.tsx","sections/_examples/mui/data-grid/DataGridBasic.tsx","sections/_examples/mui/data-grid/DataGridCustom.tsx","pages/components/mui/MUIDataGridPage.tsx","utils/formatNumber.ts"],"sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link } from '@mui/material';\n//\nimport { BreadcrumbsLinkProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  link: BreadcrumbsLinkProps;\n  activeLast?: boolean;\n  disabled: boolean;\n};\n\nexport default function BreadcrumbsLink({ link, activeLast, disabled }: Props) {\n  const { name, href, icon } = link;\n\n  const styles = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    color: 'text.primary',\n    ...(disabled &&\n      !activeLast && {\n        cursor: 'default',\n        pointerEvents: 'none',\n        color: 'text.disabled',\n      }),\n  };\n\n  const renderContent = (\n    <>\n      {icon && (\n        <Box\n          component=\"span\"\n          sx={{\n            mr: 1,\n            display: 'inherit',\n            '& svg': { width: 20, height: 20 },\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n\n      {name}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link component={RouterLink} to={href} sx={styles}>\n        {renderContent}\n      </Link>\n    );\n  }\n\n  return <Box sx={styles}> {renderContent} </Box>;\n}\n","// @mui\nimport { Box, Link, Stack, Typography, Breadcrumbs } from '@mui/material';\n//\nimport { CustomBreadcrumbsProps } from './types';\nimport LinkItem from './LinkItem';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink,\n  activeLast,\n  sx,\n  ...other\n}: CustomBreadcrumbsProps) {\n  const lastLink = links[links.length - 1].name;\n\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          {/* HEADING */}\n          {heading && (\n            <Typography variant=\"h4\" gutterBottom>\n              {heading}\n            </Typography>\n          )}\n\n          {/* BREADCRUMBS */}\n          {!!links.length && (\n            <Breadcrumbs separator={<Separator />} {...other}>\n              {links.map((link) => (\n                <LinkItem\n                  key={link.name || ''}\n                  link={link}\n                  activeLast={activeLast}\n                  disabled={link.name === lastLink}\n                />\n              ))}\n            </Breadcrumbs>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\n      </Stack>\n\n      {/* MORE LINK */}\n      {!!moreLink && (\n        <Box sx={{ mt: 2 }}>\n          {moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Separator() {\n  return (\n    <Box\n      component=\"span\"\n      sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\n    />\n  );\n}\n","// @mui\nimport { DataGrid, GridColDef, GridValueGetterParams } from '@mui/x-data-grid';\nimport { IconButton } from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nconst columns: GridColDef[] = [\n  {\n    field: 'id',\n    headerName: 'ID',\n    width: 120,\n  },\n  {\n    field: 'firstName',\n    headerName: 'First name',\n    width: 160,\n    editable: true,\n  },\n  {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 160,\n    editable: true,\n  },\n  {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 120,\n    editable: true,\n    align: 'center',\n    headerAlign: 'center',\n  },\n  {\n    field: 'fullName',\n    headerName: 'Full name',\n    description: 'This column has a value getter and is not sortable.',\n    flex: 1,\n    valueGetter: (params: GridValueGetterParams) =>\n      `${params.row.firstName || ''} ${params.row.lastName || ''}`,\n  },\n  {\n    field: 'action',\n    headerName: ' ',\n    width: 80,\n    align: 'right',\n    sortable: false,\n    disableColumnMenu: true,\n    renderCell: () => (\n      <IconButton>\n        <Iconify icon=\"eva:more-vertical-fill\" />\n      </IconButton>\n    ),\n  },\n];\n\ntype Props = {\n  data: {\n    id: string;\n    name: string;\n    email: string;\n    lastLogin: Date;\n    performance: number;\n    rating: number;\n    status: string;\n    isAdmin: boolean;\n    lastName: string;\n    firstName: string;\n    age: number;\n  }[];\n};\n\nexport default function DataGridBasic({ data }: Props) {\n  return <DataGrid columns={columns} rows={data} checkboxSelection disableSelectionOnClick />;\n}\n","import { useState } from 'react';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport { Stack, Typography, Box, Rating, LinearProgress, IconButton } from '@mui/material';\nimport {\n  DataGrid,\n  GridColDef,\n  GridToolbar,\n  GridSelectionModel,\n  getGridNumericOperators,\n  GridFilterInputValueProps,\n} from '@mui/x-data-grid';\n// utils\nimport { fPercent } from '../../../../utils/formatNumber';\n// components\nimport Label from '../../../../components/label';\nimport Iconify from '../../../../components/iconify';\nimport { CustomAvatar } from '../../../../components/custom-avatar';\n\n// ----------------------------------------------------------------------\n\nconst columns: GridColDef[] = [\n  // OPTIONS\n  // https://mui.com/x/api/data-grid/grid-col-def/#main-content\n  // - hide: false (default)\n  // - editable: false (default)\n  // - filterable: true (default)\n  // - sortable: true (default)\n  // - disableColumnMenu: false (default)\n\n  // FIELD TYPES\n  // --------------------\n  // 'string' (default)\n  // 'number'\n  // 'date'\n  // 'dateTime'\n  // 'boolean'\n  // 'singleSelect'\n\n  {\n    field: 'id',\n    hide: true,\n  },\n  {\n    field: 'avatar',\n    headerName: 'Avatar',\n    align: 'center',\n    headerAlign: 'center',\n    width: 64,\n    sortable: false,\n    filterable: false,\n    disableColumnMenu: true,\n    renderCell: (params) => <CustomAvatar name={params.row.name} sx={{ width: 36, height: 36 }} />,\n  },\n  {\n    field: 'name',\n    headerName: 'Name',\n    flex: 1,\n    editable: true,\n  },\n  {\n    field: 'email',\n    headerName: 'Email',\n    flex: 1,\n    editable: true,\n    renderCell: (params) => (\n      <Typography variant=\"body2\" sx={{ textDecoration: 'underline' }} noWrap>\n        {params.row.email}\n      </Typography>\n    ),\n  },\n  {\n    field: 'lastLogin',\n    type: 'dateTime',\n    headerName: 'Last login',\n    align: 'right',\n    headerAlign: 'right',\n    width: 200,\n  },\n  {\n    field: 'rating',\n    type: 'number',\n    headerName: 'Rating',\n    width: 160,\n    disableColumnMenu: true,\n    renderCell: (params) => (\n      <Rating size=\"small\" value={params.row.rating} precision={0.5} readOnly />\n    ),\n  },\n  {\n    field: 'status',\n    type: 'singleSelect',\n    headerName: 'Status',\n    valueOptions: ['online', 'away', 'busy'],\n    align: 'center',\n    headerAlign: 'center',\n    width: 120,\n    renderCell: (params) => RenderStatus(params.row.status),\n  },\n  {\n    field: 'isAdmin',\n    type: 'boolean',\n    align: 'center',\n    headerAlign: 'center',\n    width: 120,\n\n    renderCell: (params) =>\n      params.row.isAdmin ? (\n        <Iconify icon=\"eva:checkmark-circle-2-fill\" sx={{ color: 'primary.main' }} />\n      ) : (\n        '-'\n      ),\n  },\n  {\n    field: 'performance',\n    type: 'number',\n    headerName: 'Performance',\n    align: 'center',\n    headerAlign: 'center',\n    width: 160,\n    renderCell: (params) => (\n      <Stack spacing={1} direction=\"row\" alignItems=\"center\" sx={{ px: 1, width: 1, height: 1 }}>\n        <LinearProgress\n          value={params.row.performance}\n          variant=\"determinate\"\n          color={\n            (params.row.performance < 30 && 'error') ||\n            (params.row.performance > 30 && params.row.performance < 70 && 'warning') ||\n            'primary'\n          }\n          sx={{ width: 1, height: 6 }}\n        />\n        <Typography variant=\"caption\" sx={{ width: 80 }}>\n          {fPercent(params.row.performance)}\n        </Typography>\n      </Stack>\n    ),\n  },\n  {\n    field: 'action',\n    headerName: ' ',\n    align: 'right',\n    width: 80,\n    sortable: false,\n    filterable: false,\n    disableColumnMenu: true,\n    renderCell: (params) => (\n      <IconButton onClick={() => console.log('ID', params.row.id)}>\n        <Iconify icon=\"eva:more-vertical-fill\" />\n      </IconButton>\n    ),\n  },\n];\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  data: {\n    id: string;\n    name: string;\n    email: string;\n    lastLogin: Date;\n    performance: number;\n    rating: number;\n    status: string;\n    isAdmin: boolean;\n    lastName: string;\n    firstName: string;\n    age: number;\n  }[];\n};\n\nexport default function DataGridCustom({ data }: Props) {\n  const [selectionModel, setSelectionModel] = useState<GridSelectionModel>([]);\n\n  if (columns.length > 0) {\n    const ratingColumn = columns.find((column) => column.field === 'rating')!;\n    const ratingColIndex = columns.findIndex((col) => col.field === 'rating');\n\n    const ratingFilterOperators = getGridNumericOperators().map((operator) => ({\n      ...operator,\n      InputComponent: RatingInputValue,\n    }));\n    columns[ratingColIndex] = {\n      ...ratingColumn,\n      filterOperators: ratingFilterOperators,\n    };\n  }\n\n  const selected = data.filter((row) => selectionModel.includes(row.id));\n\n  console.log('SELECTED', selected);\n\n  return (\n    <DataGrid\n      checkboxSelection\n      disableSelectionOnClick\n      rows={data}\n      columns={columns}\n      pagination\n      onSelectionModelChange={(newSelectionModel) => {\n        setSelectionModel(newSelectionModel);\n      }}\n      components={{\n        Toolbar: GridToolbar,\n      }}\n    />\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction RenderStatus(getStatus: string) {\n  const theme = useTheme();\n  const isLight = theme.palette.mode === 'light';\n  return (\n    <Label\n      variant={isLight ? 'soft' : 'filled'}\n      color={(getStatus === 'busy' && 'error') || (getStatus === 'away' && 'warning') || 'success'}\n      sx={{ mx: 'auto' }}\n    >\n      {getStatus}\n    </Label>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction RatingInputValue({ item, applyValue }: GridFilterInputValueProps) {\n  return (\n    <Box sx={{ p: 1, height: 1, alignItems: 'flex-end', display: 'flex' }}>\n      <Rating\n        size=\"small\"\n        precision={0.5}\n        placeholder=\"Filter value\"\n        value={Number(item.value)}\n        onChange={(event, newValue) => {\n          applyValue({ ...item, value: newValue });\n        }}\n      />\n    </Box>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// @mui\nimport { Box, Container, Stack, Card, CardHeader, Typography, Link } from '@mui/material';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// _mock_\nimport _mock, { randomInArray } from '../../../_mock';\n// components\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\n// sections\nimport DataGridBasic from '../../../sections/_examples/mui/data-grid/DataGridBasic';\nimport DataGridCustom from '../../../sections/_examples/mui/data-grid/DataGridCustom';\n\n// ----------------------------------------------------------------------\n\nexport const _dataGrid = [...Array(36)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  email: _mock.email(index),\n  lastLogin: _mock.time(index),\n  performance: _mock.number.percent(index),\n  rating: _mock.number.rating(index),\n  status: randomInArray(['online', 'away', 'busy']),\n  isAdmin: _mock.boolean(index),\n  lastName: _mock.name.lastName(index),\n  firstName: _mock.name.firstName(index),\n  age: _mock.number.age(index),\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function MUIDataGridPage() {\n  return (\n    <>\n      <Helmet>\n        <title> MUI Components: DataGrid | Minimal UI</title>\n      </Helmet>\n\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"DataGrid\"\n            links={[\n              {\n                name: 'Components',\n                href: PATH_PAGE.components,\n              },\n              { name: 'DataGrid' },\n            ]}\n            moreLink={['https://mui.com/x/react-data-grid/']}\n            sx={{ mb: 0 }}\n          />\n\n          <Typography variant=\"body2\" sx={{ my: 3 }}>\n            This component includes 2 <strong>Free</strong> and <strong>Paid</strong> versions from\n            MUI.\n            <br />\n            Paid version will have more features. Please read more{' '}\n            <Link href=\"https://mui.com/x/react-data-grid/\" target=\"_blank\" rel=\"noopener\">\n              here\n            </Link>\n          </Typography>\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Stack spacing={5}>\n          <Card>\n            <CardHeader title=\"Basic\" sx={{ mb: 2 }} />\n            <Box sx={{ height: 390 }}>\n              <DataGridBasic data={_dataGrid} />\n            </Box>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Custom\" sx={{ mb: 2 }} />\n            <Box sx={{ height: 720 }}>\n              <DataGridCustom data={_dataGrid} />\n            </Box>\n          </Card>\n        </Stack>\n      </Container>\n    </>\n  );\n}\n","import numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\ntype InputValue = string | number | null;\n\nexport function fNumber(number: InputValue) {\n  return numeral(number).format();\n}\n\nexport function fCurrency(number: InputValue) {\n  const format = number ? numeral(number).format('$0,0.00') : '';\n\n  return result(format, '.00');\n}\n\nexport function fPercent(number: InputValue) {\n  const format = number ? numeral(Number(number) / 100).format('0.0%') : '';\n\n  return result(format, '.0');\n}\n\nexport function fShortenNumber(number: InputValue) {\n  const format = number ? numeral(number).format('0.00a') : '';\n\n  return result(format, '.00');\n}\n\nexport function fData(number: InputValue) {\n  const format = number ? numeral(number).format('0.0 b') : '';\n\n  return result(format, '.0');\n}\n\nfunction result(format: string, key = '.00') {\n  const isInteger = format.includes(key);\n\n  return isInteger ? format.replace(key, '') : format;\n}\n"],"names":["BreadcrumbsLink","link","activeLast","disabled","name","href","icon","styles","display","alignItems","color","cursor","pointerEvents","renderContent","Box","component","sx","mr","width","height","Link","RouterLink","to","CustomBreadcrumbs","links","action","heading","moreLink","other","lastLink","length","mb","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","flexShrink","mt","noWrap","target","rel","borderRadius","bgcolor","columns","field","headerName","editable","type","align","headerAlign","description","flex","valueGetter","params","row","firstName","lastName","sortable","disableColumnMenu","renderCell","IconButton","DataGridBasic","data","DataGrid","rows","checkboxSelection","disableSelectionOnClick","hide","filterable","textDecoration","email","Rating","size","value","rating","precision","readOnly","valueOptions","getStatus","isLight","useTheme","palette","mode","mx","RenderStatus","status","isAdmin","spacing","px","LinearProgress","performance","fPercent","onClick","console","log","id","DataGridCustom","useState","selectionModel","setSelectionModel","ratingColumn","find","column","ratingColIndex","findIndex","col","ratingFilterOperators","getGridNumericOperators","operator","InputComponent","RatingInputValue","filterOperators","selected","filter","includes","pagination","onSelectionModelChange","newSelectionModel","components","Toolbar","GridToolbar","item","applyValue","p","placeholder","Number","onChange","event","newValue","_dataGrid","Array","_","index","_mock","lastLogin","randomInArray","age","MUIDataGridPage","pt","pb","theme","Container","PATH_PAGE","my","Card","CardHeader","title","fNumber","number","numeral","format","fCurrency","result","fShortenNumber","fData","key","isInteger","replace"],"sourceRoot":""}