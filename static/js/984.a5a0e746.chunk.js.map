{"version":3,"file":"static/js/984.a5a0e746.chunk.js","mappings":"qRAce,SAASA,EAAgB,GAAwC,IAAtCC,EAAI,EAAJA,KAAMC,EAAU,EAAVA,WAAYC,EAAQ,EAARA,SAClDC,EAAqBH,EAArBG,KAAMC,EAAeJ,EAAfI,KAAMC,EAASL,EAATK,KAEdC,GAAM,QACVC,QAAS,cACTC,WAAY,SACZC,MAAO,gBACHP,IACDD,GAAc,CACbS,OAAQ,UACRC,cAAe,OACfF,MAAO,kBAIPG,GACJ,gCACGP,IACC,SAACQ,EAAA,EAAG,CACFC,UAAU,OACVC,GAAI,CACFC,GAAI,EACJT,QAAS,UACT,QAAS,CAAEU,MAAO,GAAIC,OAAQ,KAC9B,SAEDb,IAIJF,KAIL,OAAIC,GAEA,SAACe,EAAA,EAAI,CAACL,UAAWM,EAAAA,GAAYC,GAAIjB,EAAMW,GAAIT,EAAO,SAC/CM,KAKA,UAACC,EAAA,EAAG,CAACE,GAAIT,EAAO,cAAGM,EAAa,MACzC,C,gECjDe,SAASU,EAAkB,GAQd,IAP1BC,EAAK,EAALA,MACAC,EAAM,EAANA,OACAC,EAAO,EAAPA,QACAC,EAAQ,EAARA,SACAzB,EAAU,EAAVA,WACAc,EAAE,EAAFA,GACGY,GAAK,YAEFC,EAAWL,EAAMA,EAAMM,OAAS,GAAG1B,KAEzC,OACE,UAACU,EAAA,EAAG,CAACE,IAAE,QAAIe,GAAI,GAAMf,GAAK,WACxB,UAACgB,EAAA,EAAK,CAACC,UAAU,MAAMxB,WAAW,SAAQ,WACxC,UAACK,EAAA,EAAG,CAACE,GAAI,CAAEkB,SAAU,GAAI,UAEtBR,IACC,SAACS,EAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,WAClCX,MAKFF,EAAMM,SACP,SAACQ,EAAA,GAAW,gBAACC,WAAW,SAACC,EAAS,KAASZ,GAAK,aAC7CJ,EAAMiB,KAAI,SAACxC,GAAI,OACd,SAAC,EAAQ,CAEPA,KAAMA,EACNC,WAAYA,EACZC,SAAUF,EAAKG,OAASyB,GAHnB5B,EAAKG,MAAQ,GAIlB,UAMTqB,IAAU,UAACX,EAAA,EAAG,CAACE,GAAI,CAAE0B,WAAY,GAAI,cAAGjB,EAAM,YAI9CE,IACD,SAACb,EAAA,EAAG,CAACE,GAAI,CAAE2B,GAAI,GAAI,SAChBhB,EAASc,KAAI,SAACpC,GAAI,OACjB,SAACe,EAAA,EAAI,CACHwB,QAAM,EAENvC,KAAMA,EACN+B,QAAQ,QACRS,OAAO,SACPC,IAAI,WACJ9B,GAAI,CAAER,QAAS,SAAU,SAExBH,GAPIA,EAQA,QAMnB,CAIA,SAASmC,IACP,OACE,SAAC1B,EAAA,EAAG,CACFC,UAAU,OACVC,GAAI,CAAEE,MAAO,EAAGC,OAAQ,EAAG4B,aAAc,MAAOC,QAAS,kBAG/D,C,iNCtEO,SAASC,IACd,IAAMC,GAAQC,EAAAA,EAAAA,KAmCd,OAhCE,SAACC,EAAA,EAAY,CACX7C,OAAQ,CACN,qCAAsC,CACpCwC,aAAc,MACdM,UAAWH,EAAMI,cAAcC,IAEjC,yBAA0B,CACxBR,aAAc,eAEhB,yBAA0B,CACxBA,aAAc,eAEhB,4BAA6B,CAC3B,sBAAuB,CACrBS,UAAW,iBAGf,qCAAsC,CACpCC,UAAU,aAAD,OAAeP,EAAMQ,QAAQC,UAExC,qCAAsC,CACpCC,OAAQ,OACRC,WAAY,OACZd,aAAc,MACdrC,MAAOwC,EAAMQ,QAAQI,OAAOC,MAC5BC,WAAYd,EAAMe,WAAWC,eAC7BC,gBAAgB,0DAO1B,CAIO,IAAMC,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,EAAc,YAAgB,IAAbnB,EAAK,EAALA,MACpCqB,EAA4B,QAApBrB,EAAMjB,UAEpB,MAAO,CACL,4BAA6B,CAC3BuC,SAAU,IACVC,QAASvB,EAAMwB,QAAQ,GACvBrB,UAAWH,EAAMI,cAAcqB,IAC/B5B,aAAcG,EAAM0B,MAAM7B,aAC1B8B,gBAAiB3B,EAAMQ,QAAQoB,KAAK,MAEtC,iCAAkC,CAChC5D,MAAO,GACPC,OAAQ,GACR4D,SAAU,GACVC,QAAS,IACTtE,MAAOwC,EAAMQ,QAAQI,OAAOC,MAC5BkB,MAAOV,GAAS,IAChBW,KAAMX,GAAS,OACf,UAAW,CACTS,QAAS,GAEX,UAAW,CACTG,QAAS,SAGb,kDAAmD,CACjDC,cAAe,EACfC,kBAAmBnC,EAAMQ,QAAQoB,KAAK,MAExC,oDAAqD,CACnDQ,YAAa,EACbC,gBAAiBrC,EAAMQ,QAAQoB,KAAK,MAEtC,qDAAsD,CACpDU,WAAY,EACZC,eAAgBvC,EAAMQ,QAAQoB,KAAK,MAErC,mDAAoD,CAClDY,aAAc,EACdC,iBAAkBzC,EAAMQ,QAAQoB,KAAK,MAG3C,IAIac,GAAqBvB,EAAAA,EAAAA,IAAO,MAAPA,EAAc,gBAAGnB,EAAK,EAALA,MAAK,0BACnD2C,EAAAA,EAAAA,IAAO,CAAEnF,MAAOwC,EAAMQ,QAAQoB,KAAK,QAAO,IAC7CgB,OAAQ,EACRC,SAAU,IACVC,SAAU,WACVC,IAAK/C,EAAMwB,QAAQ,GACnBO,MAAO/B,EAAMwB,QAAQ,GACrBD,QAASvB,EAAMwB,QAAQ,GACvB3B,aAAcG,EAAM0B,MAAM7B,cAAY,I,+BC3FzB,SAASmD,EAAS,GAAmD,IAAjDlF,EAAE,EAAFA,GAAImF,EAAQ,EAARA,SAAavE,GAAK,YACvD,OACE,SAACwC,GAAW,gBAACgC,OAAO,SAASpF,GAAIA,GAAQY,GAAK,aAC3CuE,IAGP,C,0BCNe,SAASE,EAAU,GAA4B,IAAvBzE,EAAK,iCAC1C,OACE,SAAC,MAAM,kBAAKA,GAAK,cACf,SAACd,EAAA,EAAG,CACFC,UAAU,MACVuF,QAAQ,YACRtF,GAAI,CACFG,OAfG,GAgBHoF,OAAQ,OACR5F,OAAQ,UACR6F,KAAM,SAACtD,GAAK,OAAKA,EAAMQ,QAAQ+C,MAAMC,IAAI,EACzClD,UAAU,aAAD,QAAe,GAAS,eAnB9B,GAmByC,QAC5C,UAEF,iBAAMmD,EApBJ,gRAwBV,CCnBe,SAASC,EAAW,GAKxB,IAJTC,EAAgB,EAAhBA,iBACAC,EAAoB,EAApBA,qBACAC,EAAqB,EAArBA,sBACAC,EAAsB,EAAtBA,uBAEA,OACE,iCACE,SAAC/D,EAAiB,KAEhB6D,IACA,SAAC,KAAgB,CAACd,SAAS,WAAWiB,gBAAiB,CAAEC,oBAAoB,MAG7EH,IAAyB,SAAC,KAAiB,CAACf,SAAS,cAErDa,IAAoB,SAAC,KAAY,CAACb,SAAS,iBAE3CgB,IAA0B,SAAC,KAAiB,CAAChB,SAAS,kBAG9D,C,gMClCamB,EAAS,CACpB,CACEC,KAAM,WACNC,WAAY,YACZC,MACE,mGACFC,MAAO,WACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,cACNC,WAAY,YACZC,MACE,qHACFC,MAAO,aACPC,SAAU,QACVC,WAAY,UAEd,CACEL,KAAM,UACNC,WAAY,YACZC,MACE,mJACFC,MAAO,WACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,UACNC,WAAY,YACZC,MACE,uKACFC,MAAO,QACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,UACNC,WAAY,YACZC,MACE,6JACFC,MAAO,UACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,eACNC,WAAY,YACZC,MACE,uGACFC,MAAO,eACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,cACNC,WAAY,YACZC,MACE,6HACFC,MAAO,QACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,YACNC,WAAY,YACZC,MACE,qXACFC,MAAO,aACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,SACNC,WAAY,YACZC,MACE,uHACFC,MAAO,QACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,WACNC,WAAY,UACZC,MACE,6HACFC,MAAO,aACPC,SAAU,QACVC,WAAY,UAEd,CACEL,KAAM,SACNC,WAAY,UACZC,MACE,2GACFC,MAAO,QACPC,SAAU,QACVC,WAAY,QAEd,CACEL,KAAM,eACNC,WAAY,UACZC,MACE,iLACFC,MAAO,UACPC,SAAU,OACVC,WAAY,SAEd,CACEL,KAAM,gBACNC,WAAY,UACZC,MACE,qJACFC,MAAO,aACPC,SAAU,QACVC,WAAY,UAEd,CACEL,KAAM,WACNC,WAAY,UACZC,MACE,uIACFC,MAAO,OACPC,SAAU,QACVC,WAAY,QAEd,CACEL,KAAM,eACNC,WAAY,UACZC,MACE,uJACFC,MAAO,UACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,aACNC,WAAY,UACZC,MACE,uHACFC,MAAO,QACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,YACNC,WAAY,UACZC,MACE,uHACFC,MAAO,iBACPC,SAAU,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","sources":["components/custom-breadcrumbs/LinkItem.tsx","components/custom-breadcrumbs/CustomBreadcrumbs.tsx","components/map/styles.tsx","components/map/MapPopup.tsx","components/map/MapMarker.tsx","components/map/MapControl.tsx","_mock/map/cities.ts","_mock/map/countries.ts","sections/_examples/extra/map/heatmap/ControlPanel.tsx","sections/_examples/extra/map/heatmap/map-style.ts","sections/_examples/extra/map/heatmap/index.tsx","sections/_examples/extra/map/clusters/layers.ts","sections/_examples/extra/map/clusters/index.tsx","sections/_examples/extra/map/interaction/ControlPanel.tsx","sections/_examples/extra/map/interaction/index.tsx","sections/_examples/extra/map/change-theme/ControlPanel.tsx","sections/_examples/extra/map/change-theme/index.tsx","sections/_examples/extra/map/MapMarkersPopups.tsx","sections/_examples/extra/map/draggable-markers/ControlPanel.tsx","sections/_examples/extra/map/draggable-markers/index.tsx","sections/_examples/extra/map/MapGeoJSONAnimation.tsx","sections/_examples/extra/map/viewport-animation/ControlPanel.tsx","sections/_examples/extra/map/viewport-animation/index.tsx","sections/_examples/extra/map/MapHighlightByFilter.tsx","sections/_examples/extra/map/side-by-side/ControlPanel.tsx","sections/_examples/extra/map/side-by-side/index.tsx","pages/components/extra/DemoMapPage.tsx"],"sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link } from '@mui/material';\n//\nimport { BreadcrumbsLinkProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  link: BreadcrumbsLinkProps;\n  activeLast?: boolean;\n  disabled: boolean;\n};\n\nexport default function BreadcrumbsLink({ link, activeLast, disabled }: Props) {\n  const { name, href, icon } = link;\n\n  const styles = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    color: 'text.primary',\n    ...(disabled &&\n      !activeLast && {\n        cursor: 'default',\n        pointerEvents: 'none',\n        color: 'text.disabled',\n      }),\n  };\n\n  const renderContent = (\n    <>\n      {icon && (\n        <Box\n          component=\"span\"\n          sx={{\n            mr: 1,\n            display: 'inherit',\n            '& svg': { width: 20, height: 20 },\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n\n      {name}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link component={RouterLink} to={href} sx={styles}>\n        {renderContent}\n      </Link>\n    );\n  }\n\n  return <Box sx={styles}> {renderContent} </Box>;\n}\n","// @mui\nimport { Box, Link, Stack, Typography, Breadcrumbs } from '@mui/material';\n//\nimport { CustomBreadcrumbsProps } from './types';\nimport LinkItem from './LinkItem';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink,\n  activeLast,\n  sx,\n  ...other\n}: CustomBreadcrumbsProps) {\n  const lastLink = links[links.length - 1].name;\n\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          {/* HEADING */}\n          {heading && (\n            <Typography variant=\"h4\" gutterBottom>\n              {heading}\n            </Typography>\n          )}\n\n          {/* BREADCRUMBS */}\n          {!!links.length && (\n            <Breadcrumbs separator={<Separator />} {...other}>\n              {links.map((link) => (\n                <LinkItem\n                  key={link.name || ''}\n                  link={link}\n                  activeLast={activeLast}\n                  disabled={link.name === lastLink}\n                />\n              ))}\n            </Breadcrumbs>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\n      </Stack>\n\n      {/* MORE LINK */}\n      {!!moreLink && (\n        <Box sx={{ mt: 2 }}>\n          {moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Separator() {\n  return (\n    <Box\n      component=\"span\"\n      sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\n    />\n  );\n}\n","import { Popup } from 'react-map-gl';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { GlobalStyles } from '@mui/material';\n// utils\nimport { bgBlur } from '../../utils/cssStyles';\n\n// ----------------------------------------------------------------------\n\nexport function StyledMapControls() {\n  const theme = useTheme();\n\n  const inputGlobalStyles = (\n    <GlobalStyles\n      styles={{\n        '.mapboxgl-ctrl.mapboxgl-ctrl-group': {\n          borderRadius: '8px',\n          boxShadow: theme.customShadows.z8,\n        },\n        '.mapboxgl-ctrl-zoom-in': {\n          borderRadius: '8px 8px 0 0',\n        },\n        '.mapboxgl-ctrl-compass': {\n          borderRadius: '0 0 8px 8px',\n        },\n        '.mapboxgl-ctrl-fullscreen': {\n          '.mapboxgl-ctrl-icon': {\n            transform: ' scale(0.75)',\n          },\n        },\n        '.mapboxgl-ctrl-group button+button': {\n          borderTop: `1px solid ${theme.palette.divider}`,\n        },\n        '.mapboxgl-ctrl.mapboxgl-ctrl-scale': {\n          border: 'none',\n          lineHeight: '14px',\n          borderRadius: '4px',\n          color: theme.palette.common.white,\n          fontWeight: theme.typography.fontWeightBold,\n          backgroundImage: `linear-gradient(to right, #8a2387, #e94057, #f27121)`,\n        },\n      }}\n    />\n  );\n\n  return inputGlobalStyles;\n}\n\n// ----------------------------------------------------------------------\n\nexport const StyledPopup = styled(Popup)(({ theme }) => {\n  const isRTL = theme.direction === 'rtl';\n\n  return {\n    '& .mapboxgl-popup-content': {\n      maxWidth: 180,\n      padding: theme.spacing(1),\n      boxShadow: theme.customShadows.z20,\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.grey[800],\n    },\n    '& .mapboxgl-popup-close-button': {\n      width: 24,\n      height: 24,\n      fontSize: 16,\n      opacity: 0.48,\n      color: theme.palette.common.white,\n      right: isRTL && '0',\n      left: isRTL && 'auto',\n      '&:hover': {\n        opacity: 1,\n      },\n      '&:focus': {\n        outline: 'none',\n      },\n    },\n    '&.mapboxgl-popup-anchor-top .mapboxgl-popup-tip': {\n      marginBottom: -1,\n      borderBottomColor: theme.palette.grey[800],\n    },\n    '&.mapboxgl-popup-anchor-right .mapboxgl-popup-tip': {\n      marginLeft: -1,\n      borderLeftColor: theme.palette.grey[800],\n    },\n    '&.mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip': {\n      marginTop: -1,\n      borderTopColor: theme.palette.grey[800],\n    },\n    '&.mapboxgl-popup-anchor-left .mapboxgl-popup-tip': {\n      marginRight: -1,\n      borderRightColor: theme.palette.grey[800],\n    },\n  };\n});\n\n// ----------------------------------------------------------------------\n\nexport const StyledControlPanel = styled('div')(({ theme }) => ({\n  ...bgBlur({ color: theme.palette.grey[900] }),\n  zIndex: 9,\n  minWidth: 200,\n  position: 'absolute',\n  top: theme.spacing(1),\n  right: theme.spacing(1),\n  padding: theme.spacing(2),\n  borderRadius: theme.shape.borderRadius,\n}));\n","import { PopupProps } from 'react-map-gl';\n// @mui\nimport { Theme, SxProps } from '@mui/material/styles';\n//\nimport { StyledPopup } from './styles';\n\n// ----------------------------------------------------------------------\n\ninterface MapControlPopupProps extends PopupProps {\n  sx?: SxProps<Theme>;\n}\n\n// ----------------------------------------------------------------------\n\nexport default function MapPopup({ sx, children, ...other }: MapControlPopupProps) {\n  return (\n    <StyledPopup anchor=\"bottom\" sx={sx} {...other}>\n      {children}\n    </StyledPopup>\n  );\n}\n","import { Marker, MarkerProps } from 'react-map-gl';\n// @mui\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst SIZE = 20;\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\n// ----------------------------------------------------------------------\n\nexport default function MapMarker({ ...other }: MarkerProps) {\n  return (\n    <Marker {...other}>\n      <Box\n        component=\"svg\"\n        viewBox=\"0 0 24 24\"\n        sx={{\n          height: SIZE,\n          stroke: 'none',\n          cursor: 'pointer',\n          fill: (theme) => theme.palette.error.main,\n          transform: `translate(${-SIZE / 2}px,${-SIZE}px)`,\n        }}\n      >\n        <path d={ICON} />\n      </Box>\n    </Marker>\n  );\n}\n","import { NavigationControl, FullscreenControl, ScaleControl, GeolocateControl } from 'react-map-gl';\n//\nimport { StyledMapControls } from './styles';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  hideScaleControl?: boolean;\n  hideGeolocateControl?: boolean;\n  hideFullscreenControl?: boolean;\n  hideNavigationnControl?: boolean;\n};\n\nexport default function MapControl({\n  hideScaleControl,\n  hideGeolocateControl,\n  hideFullscreenControl,\n  hideNavigationnControl,\n}: Props) {\n  return (\n    <>\n      <StyledMapControls />\n\n      {!hideGeolocateControl && (\n        <GeolocateControl position=\"top-left\" positionOptions={{ enableHighAccuracy: true }} />\n      )}\n\n      {!hideFullscreenControl && <FullscreenControl position=\"top-left\" />}\n\n      {!hideScaleControl && <ScaleControl position=\"bottom-left\" />}\n\n      {!hideNavigationnControl && <NavigationControl position=\"bottom-left\" />}\n    </>\n  );\n}\n","export const cities = [\n  {\n    city: 'New York',\n    population: '8,175,133',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Above_Gotham.jpg/240px-Above_Gotham.jpg',\n    state: 'New York',\n    latitude: 40.6643,\n    longitude: -73.9385,\n  },\n  {\n    city: 'Los Angeles',\n    population: '3,792,621',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/5/57/LA_Skyline_Mountains2.jpg/240px-LA_Skyline_Mountains2.jpg',\n    state: 'California',\n    latitude: 34.0194,\n    longitude: -118.4108,\n  },\n  {\n    city: 'Chicago',\n    population: '2,695,598',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/8/85/2008-06-10_3000x1000_chicago_skyline.jpg/240px-2008-06-10_3000x1000_chicago_skyline.jpg',\n    state: 'Illinois',\n    latitude: 41.8376,\n    longitude: -87.6818,\n  },\n  {\n    city: 'Houston',\n    population: '2,100,263',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/6/60/Aerial_views_of_the_Houston%2C_Texas%2C_28005u.jpg/240px-Aerial_views_of_the_Houston%2C_Texas%2C_28005u.jpg',\n    state: 'Texas',\n    latitude: 29.7805,\n    longitude: -95.3863,\n  },\n  {\n    city: 'Phoenix',\n    population: '1,445,632',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Downtown_Phoenix_Aerial_Looking_Northeast.jpg/207px-Downtown_Phoenix_Aerial_Looking_Northeast.jpg',\n    state: 'Arizona',\n    latitude: 33.5722,\n    longitude: -112.088,\n  },\n  {\n    city: 'Philadelphia',\n    population: '1,526,006',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Philly_skyline.jpg/240px-Philly_skyline.jpg',\n    state: 'Pennsylvania',\n    latitude: 40.0094,\n    longitude: -75.1333,\n  },\n  {\n    city: 'San Antonio',\n    population: '1,327,407',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Downtown_San_Antonio_View.JPG/240px-Downtown_San_Antonio_View.JPG',\n    state: 'Texas',\n    latitude: 29.4724,\n    longitude: -98.5251,\n  },\n  {\n    city: 'San Diego',\n    population: '1,307,402',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/5/53/US_Navy_110604-N-NS602-574_Navy_and_Marine_Corps_personnel%2C_along_with_community_leaders_from_the_greater_San_Diego_area_come_together_to_commemora.jpg/240px-US_Navy_110604-N-NS602-574_Navy_and_Marine_Corps_personnel%2C_along_with_community_leaders_from_the_greater_San_Diego_area_come_together_to_commemora.jpg',\n    state: 'California',\n    latitude: 32.8153,\n    longitude: -117.135,\n  },\n  {\n    city: 'Dallas',\n    population: '1,197,816',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Dallas_skyline_daytime.jpg/240px-Dallas_skyline_daytime.jpg',\n    state: 'Texas',\n    latitude: 32.7757,\n    longitude: -96.7967,\n  },\n  {\n    city: 'San Jose',\n    population: '945,942',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/1/1e/Downtown_San_Jose_skyline.PNG/240px-Downtown_San_Jose_skyline.PNG',\n    state: 'California',\n    latitude: 37.2969,\n    longitude: -121.8193,\n  },\n  {\n    city: 'Austin',\n    population: '790,390',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/9/97/Austin2012-12-01.JPG/240px-Austin2012-12-01.JPG',\n    state: 'Texas',\n    latitude: 30.3072,\n    longitude: -97.756,\n  },\n  {\n    city: 'Jacksonville',\n    population: '821,784',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Skyline_of_Jacksonville_FL%2C_South_view_20160706_1.jpg/240px-Skyline_of_Jacksonville_FL%2C_South_view_20160706_1.jpg',\n    state: 'Florida',\n    latitude: 30.337,\n    longitude: -81.6613,\n  },\n  {\n    city: 'San Francisco',\n    population: '805,235',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/San_Francisco_skyline_from_Coit_Tower.jpg/240px-San_Francisco_skyline_from_Coit_Tower.jpg',\n    state: 'California',\n    latitude: 37.7751,\n    longitude: -122.4193,\n  },\n  {\n    city: 'Columbus',\n    population: '787,033',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/f/fc/Columbus-ohio-skyline-panorama.jpg/240px-Columbus-ohio-skyline-panorama.jpg',\n    state: 'Ohio',\n    latitude: 39.9848,\n    longitude: -82.985,\n  },\n  {\n    city: 'Indianapolis',\n    population: '820,445',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/1/16/Downtown_indy_from_parking_garage_zoom.JPG/213px-Downtown_indy_from_parking_garage_zoom.JPG',\n    state: 'Indiana',\n    latitude: 39.7767,\n    longitude: -86.1459,\n  },\n  {\n    city: 'Fort Worth',\n    population: '741,206',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/d/db/FortWorthTexasSkylineW.jpg/240px-FortWorthTexasSkylineW.jpg',\n    state: 'Texas',\n    latitude: 32.7795,\n    longitude: -97.3463,\n  },\n  {\n    city: 'Charlotte',\n    population: '731,424',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/7/7d/Charlotte_skyline45647.jpg/222px-Charlotte_skyline45647.jpg',\n    state: 'North Carolina',\n    latitude: 35.2087,\n    longitude: -80.8307,\n  },\n  {\n    city: 'Seattle',\n    population: '608,660',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/3/36/SeattleI5Skyline.jpg/240px-SeattleI5Skyline.jpg',\n    state: 'Washington',\n    latitude: 47.6205,\n    longitude: -122.3509,\n  },\n  {\n    city: 'Denver',\n    population: '600,158',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/DenverCP.JPG/240px-DenverCP.JPG',\n    state: 'Colorado',\n    latitude: 39.7618,\n    longitude: -104.8806,\n  },\n  {\n    city: 'El Paso',\n    population: '649,121',\n    image:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/6/6d/Downtown_El_Paso_at_sunset.jpeg/240px-Downtown_El_Paso_at_sunset.jpeg',\n    state: 'Texas',\n    latitude: 31.8484,\n    longitude: -106.427,\n  },\n];\n","import _mock from '../_mock';\n\n// ----------------------------------------------------------------------\n\nexport const countries = [\n  {\n    timezones: ['America/Aruba'],\n    latlng: [12.5, -69.96666666],\n    name: 'Aruba',\n    country_code: 'AW',\n    capital: 'Oranjestad',\n    photo: _mock.image.cover(1),\n  },\n  {\n    timezones: ['Asia/Kabul'],\n    latlng: [33, 65],\n    name: 'Afghanistan',\n    country_code: 'AF',\n    capital: 'Kabul',\n    photo: _mock.image.cover(2),\n  },\n  {\n    timezones: ['Africa/Luanda'],\n    latlng: [-12.5, 18.5],\n    name: 'Angola',\n    country_code: 'AO',\n    capital: 'Luanda',\n    photo: _mock.image.cover(3),\n  },\n  {\n    timezones: ['Pacific/Efate'],\n    latlng: [-16, 167],\n    name: 'Vanuatu',\n    country_code: 'VU',\n    capital: 'Port Vila',\n    photo: _mock.image.cover(4),\n  },\n  {\n    timezones: ['Pacific/Wallis'],\n    latlng: [-13.3, -176.2],\n    name: 'Wallis and Futuna',\n    country_code: 'WF',\n    capital: 'Mata-Utu',\n    photo: _mock.image.cover(5),\n  },\n  {\n    timezones: ['Pacific/Apia'],\n    latlng: [-13.58333333, -172.33333333],\n    name: 'Samoa',\n    country_code: 'WS',\n    capital: 'Apia',\n    photo: _mock.image.cover(6),\n  },\n  {\n    timezones: ['Asia/Aden'],\n    latlng: [15, 48],\n    name: 'Yemen',\n    country_code: 'YE',\n    capital: \"Sana'a\",\n    photo: _mock.image.cover(7),\n  },\n  {\n    timezones: ['Africa/Johannesburg'],\n    latlng: [-29, 24],\n    name: 'South Africa',\n    country_code: 'ZA',\n    capital: 'Pretoria',\n    photo: _mock.image.cover(8),\n  },\n  {\n    timezones: ['Africa/Lusaka'],\n    latlng: [-15, 30],\n    name: 'Zambia',\n    country_code: 'ZM',\n    capital: 'Lusaka',\n    photo: _mock.image.cover(9),\n  },\n  {\n    timezones: ['Africa/Harare'],\n    latlng: [-20, 30],\n    name: 'Zimbabwe',\n    country_code: 'ZW',\n    capital: 'Harare',\n    photo: _mock.image.cover(10),\n  },\n];\n","import { memo } from 'react';\n// @mui\nimport { Box, Slider, Switch, Typography } from '@mui/material';\n// utils\nimport { fDate } from '../../../../../utils/formatTime';\n// components\nimport { StyledControlPanel } from '../../../../../components/map';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  startTime: number;\n  endTime: number;\n  allDays: boolean;\n  selectedTime: number;\n  onChangeTime: (value: number) => void;\n  onChangeAllDays: (value: boolean) => void;\n};\n\nfunction ControlPanel({\n  startTime,\n  endTime,\n  allDays,\n  selectedTime,\n  onChangeTime,\n  onChangeAllDays,\n}: Props) {\n  const day = 24 * 60 * 60 * 1000;\n\n  const days = Math.round((endTime - startTime) / day);\n\n  const selectedDay = Math.round((selectedTime - startTime) / day);\n\n  const handleChangeDays = (value: number) => {\n    const daysToAdd = value;\n\n    const newTime = startTime + daysToAdd * day;\n\n    onChangeTime(newTime);\n  };\n\n  return (\n    <StyledControlPanel>\n      <Box\n        sx={{\n          width: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Typography variant=\"subtitle2\" sx={{ color: 'common.white' }}>\n          All Days\n        </Typography>\n\n        <Switch\n          size=\"small\"\n          checked={allDays}\n          onChange={(event) => onChangeAllDays(event.target.checked)}\n        />\n      </Box>\n\n      <br />\n\n      <Typography\n        gutterBottom\n        variant=\"body2\"\n        sx={{ color: allDays ? 'text.disabled' : 'common.white' }}\n      >\n        Each Day: {fDate(selectedTime)}\n      </Typography>\n\n      <Slider\n        min={1}\n        step={1}\n        max={days}\n        disabled={allDays}\n        value={selectedDay}\n        onChange={(event, value) => {\n          if (typeof value === 'number') handleChangeDays(value);\n        }}\n      />\n    </StyledControlPanel>\n  );\n}\n\nexport default memo(ControlPanel);\n","import type { HeatmapLayer } from 'react-map-gl';\n\n// ----------------------------------------------------------------------\n\nconst MAX_ZOOM_LEVEL = 9;\n\nexport const heatmapLayer: HeatmapLayer = {\n  id: 'heatmap',\n  maxzoom: MAX_ZOOM_LEVEL,\n  type: 'heatmap',\n  paint: {\n    // Increase the heatmap weight based on frequency and property magnitude\n    'heatmap-weight': ['interpolate', ['linear'], ['get', 'mag'], 0, 0, 6, 1],\n    // Increase the heatmap color weight weight by zoom level\n    // heatmap-intensity is a multiplier on top of heatmap-weight\n    'heatmap-intensity': ['interpolate', ['linear'], ['zoom'], 0, 1, MAX_ZOOM_LEVEL, 3],\n    // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n    // Begin color ramp at 0-stop with a 0-transparancy color\n    // to create a blur-like effect.\n    'heatmap-color': [\n      'interpolate',\n      ['linear'],\n      ['heatmap-density'],\n      0,\n      'rgba(33,102,172,0)',\n      0.2,\n      'rgb(103,169,207)',\n      0.4,\n      'rgb(209,229,240)',\n      0.6,\n      'rgb(253,219,199)',\n      0.8,\n      'rgb(239,138,98)',\n      0.9,\n      'rgb(255,201,101)',\n    ],\n    // Adjust the heatmap radius by zoom level\n    'heatmap-radius': ['interpolate', ['linear'], ['zoom'], 0, 2, MAX_ZOOM_LEVEL, 20],\n    // Transition from heatmap to circle layer by zoom level\n    'heatmap-opacity': ['interpolate', ['linear'], ['zoom'], 7, 1, 9, 0],\n  },\n};\n","import { useState, useEffect, useMemo, memo } from 'react';\nimport Map, { Source, Layer } from 'react-map-gl';\n// components\nimport { MapBoxProps } from '../../../../../components/map';\n//\nimport ControlPanel from './ControlPanel';\nimport { heatmapLayer } from './map-style';\n\n// ----------------------------------------------------------------------\n\nfunction MapHeatmap({ ...other }: MapBoxProps) {\n  const [allDays, useAllDays] = useState(true);\n\n  const [timeRange, setTimeRange] = useState([0, 0]);\n\n  const [selectedTime, selectTime] = useState(0);\n\n  const [earthquakes, setEarthQuakes] = useState();\n\n  useEffect(() => {\n    fetch('https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson')\n      .then((resp) => resp.json())\n      .then((json) => {\n        const { features } = json;\n\n        const endTime = features[0].properties.time;\n\n        const startTime = features[features.length - 1].properties.time;\n\n        setTimeRange([startTime, endTime]);\n\n        setEarthQuakes(json);\n\n        selectTime(endTime);\n      })\n      .catch((err) => console.error('Could not load data', err));\n  }, []);\n\n  const data: any = useMemo(\n    () => (allDays ? earthquakes : filterFeaturesByDay(earthquakes, selectedTime)),\n    [earthquakes, allDays, selectedTime]\n  );\n\n  return (\n    <>\n      <Map\n        initialViewState={{\n          latitude: 40,\n          longitude: -100,\n          zoom: 3,\n        }}\n        {...other}\n      >\n        {data && (\n          <Source type=\"geojson\" data={data}>\n            <Layer {...heatmapLayer} />\n          </Source>\n        )}\n      </Map>\n\n      <ControlPanel\n        startTime={timeRange[0]}\n        endTime={timeRange[1]}\n        selectedTime={selectedTime}\n        allDays={allDays}\n        onChangeTime={selectTime}\n        onChangeAllDays={useAllDays}\n      />\n    </>\n  );\n}\n\nexport default memo(MapHeatmap);\n\n// ----------------------------------------------------------------------\n\nfunction filterFeaturesByDay(\n  featureCollection:\n    | {\n        features: any[];\n      }\n    | undefined,\n  time: number\n) {\n  const date = new Date(time);\n\n  const year = date.getFullYear();\n\n  const month = date.getMonth();\n\n  const day = date.getDate();\n\n  const features = featureCollection?.features.filter((feature) => {\n    const featureDate = new Date(feature.properties?.time);\n\n    return (\n      featureDate.getFullYear() === year &&\n      featureDate.getMonth() === month &&\n      featureDate.getDate() === day\n    );\n  });\n  return { type: 'FeatureCollection', features };\n}\n","import type { LayerProps } from 'react-map-gl';\n\n// ----------------------------------------------------------------------\n\nexport const clusterLayer: LayerProps = {\n  id: 'clusters',\n  type: 'circle',\n  source: 'earthquakes',\n  filter: ['has', 'point_count'],\n  paint: {\n    'circle-color': ['step', ['get', 'point_count'], '#51bbd6', 100, '#f1f075', 750, '#f28cb1'],\n    'circle-radius': ['step', ['get', 'point_count'], 20, 100, 30, 750, 40],\n  },\n};\n\nexport const clusterCountLayer: LayerProps = {\n  id: 'cluster-count',\n  type: 'symbol',\n  source: 'earthquakes',\n  filter: ['has', 'point_count'],\n  layout: {\n    'text-field': '{point_count_abbreviated}',\n    'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n    'text-size': 12,\n  },\n};\n\nexport const unclusteredPointLayer: LayerProps = {\n  id: 'unclustered-point',\n  type: 'circle',\n  source: 'earthquakes',\n  filter: ['!', ['has', 'point_count']],\n  paint: {\n    'circle-color': '#11b4da',\n    'circle-radius': 4,\n    'circle-stroke-width': 1,\n    'circle-stroke-color': '#fff',\n  },\n};\n","import { useRef, memo } from 'react';\nimport Map, {\n  Layer,\n  Source,\n  MapRef,\n  LngLatLike,\n  GeoJSONSource,\n  MapLayerMouseEvent,\n} from 'react-map-gl';\n// components\nimport { MapBoxProps } from '../../../../../components/map';\n//\nimport { clusterLayer, clusterCountLayer, unclusteredPointLayer } from './layers';\n\n// ----------------------------------------------------------------------\n\nfunction MapClusters({ ...other }: MapBoxProps) {\n  const mapRef = useRef<MapRef>(null);\n\n  const onClick = (event: MapLayerMouseEvent) => {\n    const feature = event.features?.[0];\n\n    const clusterId = feature?.properties?.cluster_id;\n\n    const mapboxSource = mapRef.current?.getSource('earthquakes') as GeoJSONSource;\n\n    mapboxSource.getClusterExpansionZoom(clusterId, (err, zoom) => {\n      if (err) {\n        return;\n      }\n\n      if (feature?.geometry.type === 'Point') {\n        mapRef.current?.easeTo({\n          center: feature?.geometry.coordinates as LngLatLike | undefined,\n          zoom: Number.isNaN(zoom) ? 3 : zoom,\n          duration: 500,\n        });\n      }\n    });\n  };\n\n  return (\n    <Map\n      initialViewState={{\n        latitude: 40.67,\n        longitude: -103.59,\n        zoom: 3,\n      }}\n      interactiveLayerIds={[clusterLayer.id || '']}\n      onClick={onClick}\n      ref={mapRef}\n      {...other}\n    >\n      <Source\n        id=\"earthquakes\"\n        type=\"geojson\"\n        data=\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\"\n        cluster\n        clusterMaxZoom={14}\n        clusterRadius={50}\n      >\n        <Layer {...clusterLayer} />\n        <Layer {...clusterCountLayer} />\n        <Layer {...unclusteredPointLayer} />\n      </Source>\n    </Map>\n  );\n}\n\nexport default memo(MapClusters);\n","import { memo } from 'react';\n// @mui\nimport { styled, alpha } from '@mui/material/styles';\nimport { Switch, InputBase, Typography } from '@mui/material';\n// components\nimport { MapSettingKeys, MapSettings, StyledControlPanel } from '../../../../../components/map';\n\n// ----------------------------------------------------------------------\n\nconst StyledRow = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  textTransform: 'capitalize',\n  justifyContent: 'space-between',\n  color: theme.palette.common.white,\n  '&:not(:last-of-type)': {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nconst camelPattern = /(^|[A-Z])[a-z]*/g;\n\nfunction formatSettingName(name: string) {\n  return name.match(camelPattern)?.join(' ');\n}\n\ntype Props = {\n  settings: MapSettings;\n  onChange: (name: MapSettingKeys, value: boolean | number) => void;\n};\n\nfunction ControlPanel({ settings, onChange }: Props) {\n  const renderSetting = (name: MapSettingKeys, value: boolean | number) => {\n    switch (typeof value) {\n      case 'boolean':\n        return (\n          <StyledRow key={name}>\n            <Typography variant=\"body2\">{formatSettingName(name)}</Typography>\n            <Switch\n              size=\"small\"\n              checked={value}\n              onChange={(event) => onChange(name, event.target.checked)}\n            />\n          </StyledRow>\n        );\n      case 'number':\n        return (\n          <StyledRow key={name}>\n            <Typography variant=\"body2\">{formatSettingName(name)}</Typography>\n            <InputBase\n              value={value}\n              onChange={(event) => onChange(name, Number(event.target.value))}\n              inputProps={{ type: 'number' }}\n              sx={{\n                '& input': {\n                  py: 0.25,\n                  width: 40,\n                  fontSize: 14,\n                  borderRadius: 0.5,\n                  textAlign: 'center',\n                  color: 'common.white',\n                  bgcolor: (theme) => alpha(theme.palette.grey[500], 0.12),\n                },\n              }}\n            />\n          </StyledRow>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <StyledControlPanel>\n      {Object.keys(settings).map((name) =>\n        renderSetting(name as MapSettingKeys, settings[name as MapSettingKeys])\n      )}\n    </StyledControlPanel>\n  );\n}\n\nexport default memo(ControlPanel);\n","import { useState, useCallback, memo } from 'react';\nimport Map from 'react-map-gl';\n// components\nimport { MapControl, MapBoxProps } from '../../../../../components/map';\n//\nimport ControlPanel from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\nfunction MapInteraction({ ...other }: MapBoxProps) {\n  const [settings, setSettings] = useState({\n    minZoom: 0,\n    maxZoom: 20,\n    minPitch: 0,\n    maxPitch: 85,\n    dragPan: true,\n    boxZoom: true,\n    keyboard: true,\n    touchZoom: true,\n    dragRotate: true,\n    scrollZoom: true,\n    touchPitch: true,\n    touchRotate: true,\n    doubleClickZoom: true,\n    touchZoomRotate: true,\n  });\n\n  const updateSettings = useCallback(\n    (name: string, value: boolean | number) =>\n      setSettings((prevSettings) => ({\n        ...prevSettings,\n        [name]: value,\n      })),\n    []\n  );\n\n  return (\n    <Map\n      {...settings}\n      initialViewState={{\n        latitude: 37.729,\n        longitude: -122.36,\n        zoom: 11,\n        bearing: 0,\n        pitch: 50,\n      }}\n      {...other}\n    >\n      <MapControl />\n\n      <ControlPanel settings={settings} onChange={updateSettings} />\n    </Map>\n  );\n}\n\nexport default memo(MapInteraction);\n","import { memo } from 'react';\n// @mui\nimport { Radio, Typography, RadioGroup, FormControlLabel } from '@mui/material';\n// components\nimport { StyledControlPanel } from '../../../../../components/map';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  themes: {\n    [key: string]: string;\n  };\n  selectTheme: string;\n  onChangeTheme: (theme: string) => void;\n};\n\nfunction ControlPanel({ themes, selectTheme, onChangeTheme }: Props) {\n  return (\n    <StyledControlPanel>\n      <Typography gutterBottom variant=\"subtitle2\" sx={{ color: 'common.white' }}>\n        Select Theme:\n      </Typography>\n\n      <RadioGroup value={selectTheme} onChange={(event, value) => onChangeTheme(value)}>\n        {Object.keys(themes).map((item) => (\n          <FormControlLabel\n            key={item}\n            value={item}\n            control={<Radio size=\"small\" />}\n            label={item}\n            sx={{ color: 'common.white', textTransform: 'capitalize' }}\n          />\n        ))}\n      </RadioGroup>\n    </StyledControlPanel>\n  );\n}\n\nexport default memo(ControlPanel);\n","import { useState, useCallback, memo } from 'react';\nimport Map from 'react-map-gl';\n// components\nimport { MapControl, MapBoxProps } from '../../../../../components/map';\n//\nimport ControlPanel from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends MapBoxProps {\n  themes: {\n    [key: string]: string;\n  };\n}\n\nfunction MapChangeTheme({ themes, ...other }: Props) {\n  const [selectTheme, setSelectTheme] = useState('outdoors');\n\n  const handleChangeTheme = useCallback((value: string) => setSelectTheme(value), []);\n\n  return (\n    <>\n      <Map\n        initialViewState={{\n          latitude: 37.785164,\n          longitude: -100,\n          zoom: 3.5,\n          bearing: 0,\n          pitch: 0,\n        }}\n        mapStyle={themes?.[selectTheme]}\n        {...other}\n      >\n        <MapControl />\n      </Map>\n\n      <ControlPanel themes={themes} selectTheme={selectTheme} onChangeTheme={handleChangeTheme} />\n    </>\n  );\n}\n\nexport default memo(MapChangeTheme);\n","import { useState, memo } from 'react';\nimport Map from 'react-map-gl';\n// @mui\nimport { Box, Typography } from '@mui/material';\n// components\nimport Image from '../../../../components/image';\nimport { MapPopup, MapMarker, MapControl, MapBoxProps } from '../../../../components/map';\n\n// ----------------------------------------------------------------------\n\ntype CountryProps = {\n  name: string;\n  photo: string;\n  capital: string;\n  latlng: number[];\n  timezones: string[];\n  country_code: string;\n};\n\ninterface Props extends MapBoxProps {\n  data: CountryProps[];\n}\n\nfunction MapMarkersPopups({ data, ...other }: Props) {\n  const [popupInfo, setPopupInfo] = useState<CountryProps | null>(null);\n\n  return (\n    <Map\n      initialViewState={{\n        zoom: 2,\n      }}\n      {...other}\n    >\n      <MapControl />\n\n      {data.map((city, index) => (\n        <MapMarker\n          key={`marker-${index}`}\n          latitude={city.latlng[0]}\n          longitude={city.latlng[1]}\n          onClick={(event) => {\n            event.originalEvent.stopPropagation();\n            setPopupInfo(city);\n          }}\n        />\n      ))}\n\n      {popupInfo && (\n        <MapPopup\n          latitude={popupInfo.latlng[0]}\n          longitude={popupInfo.latlng[1]}\n          onClose={() => setPopupInfo(null)}\n        >\n          <Box sx={{ color: 'common.white' }}>\n            <Box\n              sx={{\n                mb: 1,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <Box\n                sx={{\n                  height: '18px',\n                  minWidth: '28px',\n                  marginRight: '8px',\n                  borderRadius: '4px',\n                  backgroundSize: 'cover',\n                  backgroundPosition: 'center',\n                  backgroundRepeat: 'no-repeat',\n                  backgroundImage: `url(https://cdn.staticaly.com/gh/hjnilsson/country-flags/master/svg/${popupInfo.country_code.toLowerCase()}.svg)`,\n                }}\n              />\n              <Typography variant=\"subtitle2\">{popupInfo.name}</Typography>\n            </Box>\n\n            <Typography component=\"div\" variant=\"caption\">\n              Timezones: {popupInfo.timezones}\n            </Typography>\n\n            <Typography component=\"div\" variant=\"caption\">\n              Lat: {popupInfo.latlng[0]}\n            </Typography>\n\n            <Typography component=\"div\" variant=\"caption\">\n              Long: {popupInfo.latlng[1]}\n            </Typography>\n\n            <Image\n              alt={popupInfo.name}\n              src={popupInfo.photo}\n              ratio=\"4/3\"\n              sx={{ mt: 1, borderRadius: 1 }}\n            />\n          </Box>\n        </MapPopup>\n      )}\n    </Map>\n  );\n}\n\nexport default memo(MapMarkersPopups);\n","import { memo } from 'react';\nimport { LngLat } from 'react-map-gl';\n// @mui\nimport { Typography } from '@mui/material';\n// components\nimport { StyledControlPanel } from '../../../../../components/map';\n\n// ----------------------------------------------------------------------\n\nconst EVENT_NAMES = ['onDragStart', 'onDrag', 'onDragEnd'] as const;\n\nfunction round5(value: number) {\n  return (Math.round(value * 1e5) / 1e5).toFixed(5);\n}\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  events: Record<string, LngLat>;\n};\n\nfunction ControlPanel({ events = {} }: Props) {\n  return (\n    <StyledControlPanel>\n      {EVENT_NAMES.map((event) => {\n        const lngLat = events[event];\n\n        return (\n          <div key={event}>\n            <Typography variant=\"subtitle2\" sx={{ color: 'common.white' }}>\n              {event}:\n            </Typography>\n\n            {lngLat ? (\n              <Typography variant=\"subtitle2\" sx={{ color: 'primary.main' }}>\n                {`${round5(lngLat.lng)}, ${round5(lngLat.lat)}`}\n              </Typography>\n            ) : (\n              <Typography variant=\"body2\" component=\"em\" sx={{ color: 'error.main' }}>\n                null\n              </Typography>\n            )}\n          </div>\n        );\n      })}\n    </StyledControlPanel>\n  );\n}\nexport default memo(ControlPanel);\n","import { useState, useCallback, memo } from 'react';\nimport Map, { MarkerDragEvent, LngLat } from 'react-map-gl';\n// components\nimport { MapMarker, MapControl, MapBoxProps } from '../../../../../components/map';\n//\nimport ControlPanel from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\nfunction MapDraggableMarkers({ ...other }: MapBoxProps) {\n  const [marker, setMarker] = useState({\n    latitude: 40,\n    longitude: -100,\n  });\n\n  const [events, logEvents] = useState<Record<string, LngLat>>({});\n\n  const onMarkerDragStart = useCallback((event: MarkerDragEvent) => {\n    logEvents((_events) => ({ ..._events, onDragStart: event.lngLat }));\n  }, []);\n\n  const onMarkerDrag = useCallback((event: MarkerDragEvent) => {\n    logEvents((_events) => ({ ..._events, onDrag: event.lngLat }));\n\n    setMarker({\n      longitude: event.lngLat.lng,\n      latitude: event.lngLat.lat,\n    });\n  }, []);\n\n  const onMarkerDragEnd = useCallback((event: MarkerDragEvent) => {\n    logEvents((_events) => ({ ..._events, onDragEnd: event.lngLat }));\n  }, []);\n\n  return (\n    <>\n      <Map initialViewState={{ latitude: 40, longitude: -100, zoom: 3.5 }} {...other}>\n        <MapControl />\n\n        <MapMarker\n          longitude={marker.longitude}\n          latitude={marker.latitude}\n          anchor=\"bottom\"\n          draggable\n          onDragStart={onMarkerDragStart}\n          onDrag={onMarkerDrag}\n          onDragEnd={onMarkerDragEnd}\n        />\n      </Map>\n\n      <ControlPanel events={events} />\n    </>\n  );\n}\n\nexport default memo(MapDraggableMarkers);\n","import { useState, useEffect, memo } from 'react';\nimport Map, { Layer, LayerProps, Source } from 'react-map-gl';\n// @mui\nimport { useTheme } from '@mui/material/styles';\n// components\nimport { MapControl, MapBoxProps } from '../../../../components/map';\n\n// ----------------------------------------------------------------------\n\nfunction MapGeoJSONAnimation({ ...other }: MapBoxProps) {\n  const theme = useTheme();\n\n  const pointLayer: LayerProps = {\n    id: 'point',\n    type: 'circle',\n    paint: {\n      'circle-radius': 10,\n      'circle-color': theme.palette.error.main,\n    },\n  };\n\n  const [pointData, setPointData] = useState<\n    | {\n        type: string;\n        coordinates: number[];\n      }\n    | any\n  >(null);\n\n  useEffect(() => {\n    const animation = window.requestAnimationFrame(() =>\n      setPointData(\n        pointOnCircle({\n          center: [-100, 0],\n          angle: Date.now() / 1000,\n          radius: 20,\n        })\n      )\n    );\n\n    return () => window.cancelAnimationFrame(animation);\n  });\n\n  return (\n    <Map\n      initialViewState={{\n        latitude: 0,\n        longitude: -100,\n        zoom: 3,\n      }}\n      mapStyle=\"mapbox://styles/mapbox/satellite-streets-v11\"\n      {...other}\n    >\n      <MapControl />\n\n      {pointData && (\n        <Source type=\"geojson\" data={pointData}>\n          <Layer {...pointLayer} />\n        </Source>\n      )}\n    </Map>\n  );\n}\n\nexport default memo(MapGeoJSONAnimation);\n\n// ----------------------------------------------------------------------\n\nfunction pointOnCircle({\n  center,\n  angle,\n  radius,\n}: {\n  center: [number, number];\n  angle: number;\n  radius: number;\n}) {\n  return {\n    type: 'Point',\n    coordinates: [center[0] + Math.cos(angle) * radius, center[1] + Math.sin(angle) * radius],\n  };\n}\n","import { memo } from 'react';\n// @mui\nimport { Radio, RadioGroup, FormControlLabel } from '@mui/material';\n// components\nimport { StyledControlPanel } from '../../../../../components/map';\n\n// ----------------------------------------------------------------------\n\nexport type CityProps = {\n  city: string;\n  population: string;\n  image: string;\n  state: string;\n  latitude: number;\n  longitude: number;\n};\n\ntype Props = {\n  data: CityProps[];\n  selectedCity: string;\n  onSelectCity: (event: React.ChangeEvent<HTMLInputElement>, city: CityProps) => void;\n};\n\nfunction ControlPanel({ data, selectedCity, onSelectCity }: Props) {\n  return (\n    <StyledControlPanel>\n      {data.map((city) => (\n        <RadioGroup\n          key={city.city}\n          value={selectedCity}\n          onChange={(event) => onSelectCity(event, city)}\n        >\n          <FormControlLabel\n            value={city.city}\n            label={city.city}\n            control={<Radio size=\"small\" />}\n            sx={{ color: 'common.white' }}\n          />\n        </RadioGroup>\n      ))}\n    </StyledControlPanel>\n  );\n}\n\nexport default memo(ControlPanel);\n","import { useRef, useState, useCallback, memo } from 'react';\nimport Map, { MapRef } from 'react-map-gl';\n// components\nimport { MapControl, MapBoxProps } from '../../../../../components/map';\n//\nimport ControlPanel, { CityProps } from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends MapBoxProps {\n  data: CityProps[];\n}\n\nfunction MapViewportAnimation({ data, ...other }: Props) {\n  const mapRef = useRef<MapRef>(null);\n\n  const [selectedCity, setSelectedCity] = useState(data[2].city);\n\n  const onSelectCity = useCallback(\n    (\n      event: React.ChangeEvent<HTMLInputElement>,\n      { longitude, latitude }: { longitude: number; latitude: number }\n    ) => {\n      setSelectedCity(event.target.value);\n      mapRef.current?.flyTo({ center: [longitude, latitude], duration: 2000 });\n    },\n    []\n  );\n\n  return (\n    <Map\n      initialViewState={{\n        latitude: 37.7751,\n        longitude: -122.4193,\n        zoom: 11,\n        bearing: 0,\n        pitch: 0,\n      }}\n      ref={mapRef}\n      {...other}\n    >\n      <MapControl />\n\n      <ControlPanel data={data} selectedCity={selectedCity} onSelectCity={onSelectCity} />\n    </Map>\n  );\n}\n\nexport default memo(MapViewportAnimation);\n","import { useState, useCallback, useMemo, memo } from 'react';\nimport Map, { Layer, Source, FillLayer, MapLayerMouseEvent } from 'react-map-gl';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport { Typography } from '@mui/material';\n// components\nimport { MapPopup, MapControl, MapBoxProps } from '../../../../components/map';\n\n// ----------------------------------------------------------------------\n\nfunction MapHighlightByFilter({ ...other }: MapBoxProps) {\n  const theme = useTheme();\n\n  const countiesLayer: FillLayer = {\n    id: 'counties',\n    type: 'fill',\n    'source-layer': 'original',\n    paint: {\n      'fill-outline-color': theme.palette.grey[900],\n      'fill-color': theme.palette.grey[900],\n      'fill-opacity': 0.12,\n    },\n  };\n\n  const highlightLayer: FillLayer = {\n    id: 'counties-highlighted',\n    type: 'fill',\n    source: 'counties',\n    'source-layer': 'original',\n    paint: {\n      'fill-outline-color': theme.palette.error.main,\n      'fill-color': theme.palette.error.main,\n      'fill-opacity': 0.48,\n    },\n  };\n\n  const [hoverInfo, setHoverInfo] = useState<{\n    countyName: string;\n    longitude: number;\n    latitude: number;\n  } | null>(null);\n\n  const onHover = useCallback((event: MapLayerMouseEvent) => {\n    const county = event.features && event.features[0];\n\n    setHoverInfo({\n      longitude: event.lngLat.lng,\n      latitude: event.lngLat.lat,\n      countyName: county && county.properties?.COUNTY,\n    });\n  }, []);\n\n  const selectedCounty = (hoverInfo && hoverInfo.countyName) || '';\n\n  const filter = useMemo(() => ['in', 'COUNTY', selectedCounty], [selectedCounty]);\n\n  return (\n    <Map\n      initialViewState={{\n        latitude: 38.88,\n        longitude: -98,\n        zoom: 3,\n      }}\n      minZoom={2}\n      onMouseMove={onHover}\n      interactiveLayerIds={['counties']}\n      {...other}\n    >\n      <MapControl />\n\n      <Source type=\"vector\" url=\"mapbox://mapbox.82pkq93d\">\n        <Layer beforeId=\"waterway-label\" {...countiesLayer} />\n        <Layer beforeId=\"waterway-label\" {...highlightLayer} filter={filter} />\n      </Source>\n\n      {selectedCounty && hoverInfo && (\n        <MapPopup longitude={hoverInfo.longitude} latitude={hoverInfo.latitude} closeButton={false}>\n          <Typography variant=\"body2\" sx={{ color: 'common.white' }}>\n            {selectedCounty}\n          </Typography>\n        </MapPopup>\n      )}\n    </Map>\n  );\n}\n\nexport default memo(MapHighlightByFilter);\n","import { memo } from 'react';\n// @mui\nimport { ToggleButton, ToggleButtonGroup } from '@mui/material';\n// components\nimport { StyledControlPanel } from '../../../../../components/map';\n\n// ----------------------------------------------------------------------\n\nexport type ModeProps = 'side-by-side' | 'split-screen';\n\ntype Props = {\n  mode: ModeProps;\n  onModeChange: (event: React.MouseEvent<HTMLElement>, newMode: ModeProps | null) => void;\n};\n\nfunction ControlPanel({ mode, onModeChange }: Props) {\n  return (\n    <StyledControlPanel>\n      <ToggleButtonGroup color=\"primary\" value={mode} exclusive onChange={onModeChange}>\n        <ToggleButton value=\"side-by-side\">Side by side</ToggleButton>\n\n        <ToggleButton value=\"split-screen\">Split screen</ToggleButton>\n      </ToggleButtonGroup>\n    </StyledControlPanel>\n  );\n}\n\nexport default memo(ControlPanel);\n","import { useState, useCallback, useMemo, memo } from 'react';\nimport Map, { ViewStateChangeEvent } from 'react-map-gl';\n// components\nimport { MapBoxProps } from '../../../../../components/map';\n//\nimport ControlPanel, { ModeProps } from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\nconst LeftMapStyle: React.CSSProperties = {\n  position: 'absolute',\n  width: '50%',\n  height: '100%',\n};\n\nconst RightMapStyle: React.CSSProperties = {\n  position: 'absolute',\n  left: '50%',\n  width: '50%',\n  height: '100%',\n};\n\n// ----------------------------------------------------------------------\n\nfunction MapSideBySide({ ...other }: MapBoxProps) {\n  const [viewState, setViewState] = useState({\n    longitude: -122.43,\n    latitude: 37.78,\n    zoom: 12,\n    pitch: 30,\n  });\n\n  const [mode, setMode] = useState<ModeProps>('side-by-side');\n\n  const [activeMap, setActiveMap] = useState<'left' | 'right'>('left');\n\n  const onLeftMoveStart = useCallback(() => setActiveMap('left'), []);\n\n  const onRightMoveStart = useCallback(() => setActiveMap('right'), []);\n\n  const onMove = useCallback((event: ViewStateChangeEvent) => setViewState(event.viewState), []);\n\n  const width = typeof window === 'undefined' ? 100 : window.innerWidth;\n\n  const leftMapPadding = useMemo(\n    () => ({ left: mode === 'split-screen' ? width / 2 : 0, top: 0, right: 0, bottom: 0 }),\n    [width, mode]\n  );\n\n  const rightMapPadding = useMemo(\n    () => ({ right: mode === 'split-screen' ? width / 2 : 0, top: 0, left: 0, bottom: 0 }),\n    [width, mode]\n  );\n\n  const handleChangeMode = (event: React.MouseEvent<HTMLElement>, newMode: ModeProps | null) => {\n    if (newMode !== null) {\n      setMode(newMode);\n    }\n  };\n\n  return (\n    <>\n      <Map\n        id=\"left-map\"\n        {...viewState}\n        padding={leftMapPadding}\n        onMoveStart={onLeftMoveStart}\n        onMove={(event) => {\n          if (activeMap === 'left') {\n            onMove(event);\n          }\n        }}\n        style={LeftMapStyle}\n        mapStyle=\"mapbox://styles/mapbox/light-v10\"\n        {...other}\n      />\n\n      <Map\n        id=\"right-map\"\n        {...viewState}\n        padding={rightMapPadding}\n        onMoveStart={onRightMoveStart}\n        onMove={(event) => {\n          if (activeMap === 'right') {\n            onMove(event);\n          }\n        }}\n        style={RightMapStyle}\n        mapStyle=\"mapbox://styles/mapbox/dark-v10\"\n        {...other}\n      />\n\n      <ControlPanel mode={mode} onModeChange={handleChangeMode} />\n    </>\n  );\n}\n\nexport default memo(MapSideBySide);\n","import { Helmet } from 'react-helmet-async';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Card, Stack, Container, CardHeader, CardContent } from '@mui/material';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// config\nimport { MAP_API } from '../../../config-global';\n// _mock_\nimport { cities as CITIES } from '../../../_mock/map/cities';\nimport { countries as COUNTRIES } from '../../../_mock/map/countries';\n// components\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\n// sections\nimport MapHeatmap from '../../../sections/_examples/extra/map/heatmap';\nimport MapClusters from '../../../sections/_examples/extra/map/clusters';\nimport MapInteraction from '../../../sections/_examples/extra/map/interaction';\nimport MapChangeTheme from '../../../sections/_examples/extra/map/change-theme';\nimport MapMarkersPopups from '../../../sections/_examples/extra/map/MapMarkersPopups';\nimport MapDraggableMarkers from '../../../sections/_examples/extra/map/draggable-markers';\nimport MapGeoJSONAnimation from '../../../sections/_examples/extra/map/MapGeoJSONAnimation';\nimport MapViewportAnimation from '../../../sections/_examples/extra/map/viewport-animation';\nimport MapHighlightByFilter from '../../../sections/_examples/extra/map/MapHighlightByFilter';\nimport MapSideBySide from '../../../sections/_examples/extra/map/side-by-side';\n\n// ----------------------------------------------------------------------\n\nconst THEMES = {\n  streets: 'mapbox://styles/mapbox/streets-v11',\n  outdoors: 'mapbox://styles/mapbox/outdoors-v11',\n  light: 'mapbox://styles/mapbox/light-v10',\n  dark: 'mapbox://styles/mapbox/dark-v10',\n  satellite: 'mapbox://styles/mapbox/satellite-v9',\n  satelliteStreets: 'mapbox://styles/mapbox/satellite-streets-v11',\n};\n\nconst baseSettings = {\n  mapboxAccessToken: MAP_API,\n  minZoom: 1,\n};\n\nconst StyledMapContainer = styled('div')(({ theme }) => ({\n  zIndex: 0,\n  height: 560,\n  overflow: 'hidden',\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  '& .mapboxgl-ctrl-logo, .mapboxgl-ctrl-bottom-right': {\n    display: 'none',\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function DemoMapPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Extra Components: Map | Minimal UI</title>\n      </Helmet>\n\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Map\"\n            links={[\n              {\n                name: 'Components',\n                href: PATH_PAGE.components,\n              },\n              { name: 'Map' },\n            ]}\n            moreLink={[\n              'http://visgl.github.io/react-map-gl',\n              'http://visgl.github.io/react-map-gl/examples',\n            ]}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Stack spacing={5}>\n          <Card>\n            <CardHeader title=\"Change Theme\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapChangeTheme {...baseSettings} themes={THEMES} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Markers & Popups\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapMarkersPopups {...baseSettings} data={COUNTRIES} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Draggable Markers\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapDraggableMarkers {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Geojson Animation\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapGeoJSONAnimation {...baseSettings} mapStyle={THEMES.satelliteStreets} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Clusters\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapClusters {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Interaction\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapInteraction {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Viewport Animation\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapViewportAnimation\n                  {...baseSettings}\n                  data={CITIES.filter((city) => city.state === 'Texas')}\n                  mapStyle={THEMES.light}\n                />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Highlight By Filter\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapHighlightByFilter {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Heatmap\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapHeatmap {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Side By Side\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapSideBySide {...baseSettings} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n        </Stack>\n      </Container>\n    </>\n  );\n}\n"],"names":["BreadcrumbsLink","link","activeLast","disabled","name","href","icon","styles","display","alignItems","color","cursor","pointerEvents","renderContent","Box","component","sx","mr","width","height","Link","RouterLink","to","CustomBreadcrumbs","links","action","heading","moreLink","other","lastLink","length","mb","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","flexShrink","mt","noWrap","target","rel","borderRadius","bgcolor","StyledMapControls","theme","useTheme","GlobalStyles","boxShadow","customShadows","z8","transform","borderTop","palette","divider","border","lineHeight","common","white","fontWeight","typography","fontWeightBold","backgroundImage","StyledPopup","styled","Popup","isRTL","maxWidth","padding","spacing","z20","shape","backgroundColor","grey","fontSize","opacity","right","left","outline","marginBottom","borderBottomColor","marginLeft","borderLeftColor","marginTop","borderTopColor","marginRight","borderRightColor","StyledControlPanel","bgBlur","zIndex","minWidth","position","top","MapPopup","children","anchor","MapMarker","viewBox","stroke","fill","error","main","d","MapControl","hideScaleControl","hideGeolocateControl","hideFullscreenControl","hideNavigationnControl","positionOptions","enableHighAccuracy","cities","city","population","image","state","latitude","longitude","countries","timezones","latlng","country_code","capital","photo","_mock","ControlPanel","startTime","endTime","allDays","selectedTime","onChangeTime","onChangeAllDays","day","days","Math","round","selectedDay","justifyContent","Switch","size","checked","onChange","event","fDate","Slider","min","step","max","value","handleChangeDays","memo","heatmapLayer","id","maxzoom","type","paint","MapHeatmap","useState","useAllDays","timeRange","setTimeRange","selectTime","earthquakes","setEarthQuakes","useEffect","fetch","then","resp","json","features","properties","time","catch","err","console","data","useMemo","featureCollection","date","Date","year","getFullYear","month","getMonth","getDate","filter","feature","featureDate","filterFeaturesByDay","initialViewState","zoom","clusterLayer","source","clusterCountLayer","layout","unclusteredPointLayer","MapClusters","mapRef","useRef","interactiveLayerIds","onClick","clusterId","cluster_id","current","getSource","getClusterExpansionZoom","geometry","easeTo","center","coordinates","Number","isNaN","duration","ref","cluster","clusterMaxZoom","clusterRadius","StyledRow","textTransform","camelPattern","formatSettingName","match","join","settings","Object","keys","InputBase","inputProps","py","textAlign","alpha","renderSetting","MapInteraction","minZoom","maxZoom","minPitch","maxPitch","dragPan","boxZoom","keyboard","touchZoom","dragRotate","scrollZoom","touchPitch","touchRotate","doubleClickZoom","touchZoomRotate","setSettings","updateSettings","useCallback","prevSettings","bearing","pitch","themes","selectTheme","onChangeTheme","RadioGroup","item","FormControlLabel","control","Radio","label","MapChangeTheme","setSelectTheme","handleChangeTheme","mapStyle","MapMarkersPopups","popupInfo","setPopupInfo","index","originalEvent","stopPropagation","onClose","backgroundSize","backgroundPosition","backgroundRepeat","toLowerCase","alt","src","ratio","EVENT_NAMES","round5","toFixed","events","lngLat","lng","lat","MapDraggableMarkers","marker","setMarker","logEvents","onMarkerDragStart","_events","onDragStart","onMarkerDrag","onDrag","onMarkerDragEnd","onDragEnd","draggable","MapGeoJSONAnimation","pointLayer","pointData","setPointData","animation","window","requestAnimationFrame","angle","radius","cos","sin","pointOnCircle","now","cancelAnimationFrame","selectedCity","onSelectCity","MapViewportAnimation","setSelectedCity","flyTo","MapHighlightByFilter","countiesLayer","highlightLayer","hoverInfo","setHoverInfo","onHover","county","countyName","COUNTY","selectedCounty","onMouseMove","url","beforeId","closeButton","mode","onModeChange","ToggleButtonGroup","exclusive","ToggleButton","LeftMapStyle","RightMapStyle","MapSideBySide","viewState","setViewState","setMode","activeMap","setActiveMap","onLeftMoveStart","onRightMoveStart","onMove","innerWidth","leftMapPadding","bottom","rightMapPadding","onMoveStart","style","newMode","THEMES","streets","outdoors","light","dark","satellite","satelliteStreets","baseSettings","mapboxAccessToken","MAP_API","StyledMapContainer","overflow","DemoMapPage","pt","pb","Container","PATH_PAGE","my","Card","CardHeader","title","CardContent","COUNTRIES","CITIES"],"sourceRoot":""}