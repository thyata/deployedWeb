{"version":3,"file":"static/js/865.4160e36b.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/events/utils.mjs","../node_modules/popmotion/dist/es/utils/is-point.mjs","../node_modules/popmotion/dist/es/utils/is-point-3d.mjs","../node_modules/popmotion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/popmotion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/style-value-types/dist/es/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/popmotion/dist/es/animations/inertia.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/features-max.mjs"],"sourcesContent":["function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","const isPoint = (point) => point.hasOwnProperty('x') && point.hasOwnProperty('y');\n\nexport { isPoint };\n","import { isPoint } from './is-point.mjs';\n\nconst isPoint3D = (point) => isPoint(point) && point.hasOwnProperty('z');\n\nexport { isPoint3D };\n","import { isPoint } from './is-point.mjs';\nimport { isPoint3D } from './is-point-3d.mjs';\nimport { isNum } from './inc.mjs';\n\nconst distance1D = (a, b) => Math.abs(a - b);\nfunction distance(a, b) {\n    if (isNum(a) && isNum(b)) {\n        return distance1D(a, b);\n    }\n    else if (isPoint(a) && isPoint(b)) {\n        const xDelta = distance1D(a.x, b.x);\n        const yDelta = distance1D(a.y, b.y);\n        const zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n    }\n}\n\nexport { distance };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { distance, pipe } from 'popmotion';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = getFrameData();\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = getFrameData();\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { mix, distance } from 'popmotion';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return distance(value, target) < maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { mix, progress, clamp } from 'popmotion';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from 'popmotion';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { linear } from './index.mjs';\n\nconst a = (a1, a2) => 1.0 - 3.0 * a2 + 3.0 * a1;\nconst b = (a1, a2) => 3.0 * a2 - 6.0 * a1;\nconst c = (a1) => 3.0 * a1;\nconst calcBezier = (t, a1, a2) => ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\nconst getSlope = (t, a1, a2) => 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 10;\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0.0) {\n            aB = currentT;\n        }\n        else {\n            aA = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nconst newtonIterations = 8;\nconst newtonMinSlope = 0.001;\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (let i = 0; i < newtonIterations; ++i) {\n        const currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) {\n            return aGuessT;\n        }\n        const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n}\nconst kSplineTableSize = 11;\nconst kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    if (mX1 === mY1 && mX2 === mY2)\n        return linear;\n    const sampleValues = new Float32Array(kSplineTableSize);\n    for (let i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    function getTForX(aX) {\n        let intervalStart = 0.0;\n        let currentSample = 1;\n        const lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        const dist = (aX - sampleValues[currentSample]) /\n            (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        const guessForT = intervalStart + dist * kSampleStepSize;\n        const initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= newtonMinSlope) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n        else if (initialSlope === 0.0) {\n            return guessForT;\n        }\n        else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n    }\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier, linear, easeIn, easeInOut, easeOut, circIn, circInOut, circOut, backIn, backInOut, backOut, anticipate, bounceIn, bounceInOut, bounceOut } from 'popmotion';\n\nconst easingLookup = {\n    linear,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n    bounceIn,\n    bounceInOut,\n    bounceOut,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { complex } from 'style-value-types';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isKeyframesTarget } from './is-keyframes-target.mjs';\n\nconst underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (to) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframes = (values) => ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values,\n});\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, to) => {\n    let transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return { to, ...transitionFactory(to) };\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\nconst maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\nfunction applyDefaultFilter(v) {\n    let [name, value] = v.slice(0, -1).split('(');\n    if (name === 'drop-shadow')\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, '');\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + '(' + defaultValue + unit + ')';\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(' ') : v;\n    } });\n\nexport { filter };\n","import { color, filter } from 'style-value-types';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { filter, complex } from 'style-value-types';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import sync, { cancelSync } from 'framesync';\n\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { inertia, animate } from 'popmotion';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from './easing.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { getDefaultTransition } from './default-transitions.mjs';\nimport { warning } from 'hey-listen';\nimport { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { delay } from '../../utils/delay.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nlet legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions({ ease, times, yoyo, flip, loop, ...transition }) {\n    const options = { ...transition };\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a, _b;\n    const valueTransition = getValueTransition(transition, key) || {};\n    return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = [...options.to];\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    if (Array.isArray(options.to) && transition.duration === undefined) {\n        transition.duration = 0.8;\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = {\n            ...transition,\n            ...getDefaultTransition(key, options.to),\n        };\n    }\n    return {\n        ...options,\n        ...convertTransitionToAnimationOptions(transition),\n    };\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    const valueTransition = getValueTransition(transition, key) || {};\n    let origin = valueTransition.from !== undefined ? valueTransition.from : value.get();\n    const isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    const isOriginAnimatable = isAnimatable(key, origin);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${key} from \"${origin}\" to \"${target}\". ${origin} is not an animatable value - to enable this animation set ${origin} to a value animatable to ${target} via the \\`style\\` property.`);\n    function start() {\n        const options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete,\n            onUpdate: (v) => value.set(v),\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? inertia({ ...options, ...valueTransition })\n            : animate({\n                ...getPopmotionAnimationOptions(valueTransition, options, key),\n                onUpdate: (v) => {\n                    options.onUpdate(v);\n                    valueTransition.onUpdate && valueTransition.onUpdate(v);\n                },\n                onComplete: () => {\n                    options.onComplete();\n                    valueTransition.onComplete && valueTransition.onComplete();\n                },\n            });\n    }\n    function set() {\n        const finalTarget = resolveFinalValueInKeyframes(target);\n        value.set(finalTarget);\n        onComplete();\n        valueTransition.onUpdate && valueTransition.onUpdate(finalTarget);\n        valueTransition.onComplete && valueTransition.onComplete();\n        return { stop: () => { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n */\nfunction startAnimation(key, value, target, transition = {}) {\n    if (instantAnimationState.current) {\n        transition = { type: false };\n    }\n    return value.start((onComplete) => {\n        let controls;\n        const animation = getAnimation(key, value, target, transition, onComplete);\n        const delayBy = getDelayFromTransition(transition, key);\n        const start = () => (controls = animation());\n        let cancelDelay;\n        if (delayBy) {\n            cancelDelay = delay(start, secondsToMilliseconds(delayBy));\n        }\n        else {\n            start();\n        }\n        return () => {\n            cancelDelay && cancelDelay();\n            controls && controls.stop();\n        };\n    });\n}\n\nexport { convertTransitionToAnimationOptions, getDelayFromTransition, getPopmotionAnimationOptions, getValueTransition, getZeroUnit, hydrateKeyframes, isTransitionDefined, isZero, startAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { getFrameData } from 'framesync';\n\nfunction inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate(Object.assign(Object.assign({}, options), { driver, onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            }, onComplete,\n            onStop }));\n    }\n    function startSpring(options) {\n        startAnimation(Object.assign({ type: \"spring\", stiffness: bounceStiffness, damping: bounceDamping, restDelta }, options));\n    }\n    if (isOutOfBounds(from)) {\n        startSpring({ from, velocity, to: boundaryNearest(from) });\n    }\n    else {\n        let target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = boundaryNearest(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, getFrameData().delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ from: v, to: boundary, velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from,\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { mix } from 'popmotion';\nimport { percent } from 'style-value-types';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            var _a;\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return startAnimation(axis, axisValue, 0, transition);\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a, _b;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { px } from 'style-value-types';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { mix } from 'popmotion';\nimport { complex } from 'style-value-types';\nimport { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import sync from 'framesync';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number, px, percent, degrees, vw, vh } from 'style-value-types';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color, complex } from 'style-value-types';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        let animation = startAnimation(key, value, valueTarget, valueTransition);\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { px, number } from 'style-value-types';\nimport { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { pipe } from 'popmotion';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import sync, { cancelSync } from 'framesync';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.onChange((latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.onRenderRequest(this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue);\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.6.12\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.6.12 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { SVGVisualElement };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { startAnimation } from './utils/transitions.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { mix, progress, circOut, linear } from 'popmotion';\nimport { percent, px } from 'style-value-types';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    var _a, _b, _c, _d;\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // (follow?.opacity as number) ?? 0,\n        // TODO Reinstate this if only child\n        (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, linear);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from 'popmotion';\nimport { percent } from 'style-value-types';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { distance } from 'popmotion';\nimport { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction isCloseTo(a, b, max = 0.1) {\n    return distance(a, b) <= max;\n}\n\nexport { aspectRatio, boxEquals, isCloseTo, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import sync, { cancelSync, flushSync } from 'framesync';\nimport { mix } from 'popmotion';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, isCloseTo, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isCloseTo(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { drag } from '../../motion/features/drag.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { domAnimation } from './features-animation.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\n/**\n * @public\n */\nconst domMax = {\n    ...domAnimation,\n    ...drag,\n    ...layoutFeatures,\n    projectionNodeConstructor: HTMLProjectionNode,\n};\n\nexport { domMax };\n"],"names":["isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","filterPrimaryPointer","eventHandler","button","defaultPagePoint","pageX","pageY","pointFromTouch","e","pointType","primaryTouch","changedTouches","point","x","y","pointFromMouse","extractEventInfo","wrapHandler","handler","shouldFilterPrimaryPointer","listener","secondsToMilliseconds","seconds","addDomEvent","target","eventName","options","passive","addEventListener","removeEventListener","useDomEvent","ref","useEffect","element","current","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","name","isBrowser","window","onpointerdown","ontouchstart","onmousedown","addPointerEvent","usePointerEvent","isPoint","hasOwnProperty","isPoint3D","distance1D","a","b","Math","abs","distance","isNum","xDelta","yDelta","zDelta","z","sqrt","pow","PanSession","handlers","transformPagePoint","this","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","offset","timestamp","getFrameData","push","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","sync","end","onEnd","onSessionEnd","panInfo","length","initialInfo","onSessionStart","removeListeners","pipe","cancelSync","subtractPoint","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","calcLength","axis","max","min","isNear","value","maxDistance","calcAxisDelta","source","origin","originPoint","mix","scale","isNaN","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","parent","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","undefined","calcViewportAxisConstraints","layoutAxis","constraintsAxis","AnimationType","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","_a","eachAxis","callback","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","values","has2DTranslate","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","translateAxis","transformAxis","transforms","key","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","transform","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","a1","a2","c","calcBezier","t","getSlope","kSampleStepSize","cubicBezier","mX1","mY1","mX2","mY2","linear","sampleValues","Float32Array","getTForX","aX","intervalStart","currentSample","kSplineTableSize","guessForT","initialSlope","aGuessT","currentSlope","newtonRaphsonIterate","aA","aB","currentX","currentT","binarySubdivide","easingLookup","easeIn","easeInOut","easeOut","circIn","circInOut","circOut","backIn","backInOut","backOut","anticipate","bounceIn","bounceInOut","bounceOut","easingDefinitionToFunction","definition","Array","isArray","invariant","isAnimatable","complex","startsWith","underDampedSpring","type","stiffness","damping","restSpeed","criticallyDampedSpring","to","linearTween","ease","duration","keyframes","defaultTransitions","rotateZ","opacity","backgroundColor","color","default","maxDefaults","Set","applyDefaultFilter","v","slice","split","match","floatRegex","number","unit","replace","defaultValue","has","functionRegex","filter","Object","assign","getAnimatableNone","functions","map","join","defaultValueTypes","numberValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","call","instantAnimationState","delay","timeout","start","performance","now","checkElapsed","elapsed","legacyRepeatWarning","convertTransitionToAnimationOptions","times","yoyo","flip","loop","transition","repeatDelay","isEasingArray","warning","repeatType","repeat","getDelayFromTransition","_b","getValueTransition","getPopmotionAnimationOptions","from","hydrateKeyframes","when","delayChildren","staggerChildren","staggerDirection","keys","isTransitionDefined","valueKey","transitionFactory","isKeyframesTarget","getDefaultTransition","getAnimation","onComplete","valueTransition","get","isTargetAnimatable","isZero","getZeroUnit","isOriginAnimatable","onUpdate","set","currentAnimation","power","timeConstant","bounceStiffness","bounceDamping","restDelta","modifyTarget","driver","onStop","isOutOfBounds","boundaryNearest","startAnimation","stop","animate","startSpring","prev","boundary","heading","velocityPerSecond","inertia","finalTarget","resolveFinalValueInKeyframes","parseFloat","indexOf","potentialUnitType","controls","cancelDelay","animation","delayBy","elementDragControls","WeakMap","VisualElementDragControls","visualElement","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","isPresent","stopAnimation","getProps","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","animationState","setActive","Drag","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","render","panSession","getTransformPagePoint","cancel","onDragEnd","_point","shouldDrag","axisValue","next","applyConstraints","dragConstraints","prevConstraints","isRefObject","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","Promise","all","then","dragKey","toUpperCase","externalMotionValue","getValue","initial","boxProgress","latest","sourceLength","targetLength","progress","clamp","calcOrigin","transformTemplate","style","updateScroll","updateLayout","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","motionValue","props","direction","lockThreshold","makeRenderlessComponent","hook","pan","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","useRef","useContext","MotionConfigContext","updateHandlers","useUnmountEffect","groupDragControls","dragControls","useConstant","subscribe","addListeners","usePresence","context","PresenceContext","onExitComplete","register","id","useId","pixelsToPercent","pixels","correctBorderRadius","correct","node","px","isCSSVariable","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","fallback","resolved","getComputedStyle","getPropertyValue","trim","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","includes","cssVariables","shadow","template","xScale","yScale","averageScale","output","cssVariable","MeasureLayoutWithContext","layoutGroup","switchLayoutGroup","layoutId","addScaleCorrector","defaultScaleCorrectors","group","add","didUpdate","safeToRemove","setOptions","globalProjectionState","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","remove","deregister","React__default","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","layoutFeatures","measureLayout","LayoutGroupContext","SwitchLayoutGroupContext","shallowCompare","prevLength","isZeroValueString","test","testValueType","dimensionValueTypes","degrees","vw","vh","parse","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","custom","resolveVariantFromProps","forEach","getCurrent","setMotionValue","hasValue","addValue","setTarget","makeTargetAnimatable","transitionEnd","getOriginFromTransition","isWillChangeMotionValue","Boolean","isMotionValue","animateVariant","variant","transitionOverride","animateTarget","resolve","getChildAnimations","variantChildren","size","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","valueTarget","shouldBlockAnimation","shouldReduceMotion","transformProps","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","InView","Focus","Hover","Tap","Exit","reversePriorityOrder","reverse","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","state","createTypeState","createState","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","prevResolvedValues","allKeys","markToAnimate","delete","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","exit","presenceContext","createHoverEvent","isNodeOrChild","parentElement","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","some","useIntersectionObserver","shouldObserve","rootMargin","margin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","env","warnOnce","requestAnimationFrame","BoundingBoxDimension","gestureAnimations","inView","whileInView","viewport","tap","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","onPointerUp","onPointerCancel","focus","whileFocus","hover","onHoverStart","onHoverEnd","whileHover","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","removeNonTranslationalTransform","removedTransforms","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","Element","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","featureDefinitions","numFeatures","propEventHandlers","VisualElement","reducedMotionConfig","visualState","children","isVariantNode","isControllingVariants","Map","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","latestValues","triggerBuild","renderInstance","renderState","scheduleRender","baseTarget","initialValues","scrapeMotionValuesFromProps","initialMotionValues","_props","mount","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","setProps","_c","unmount","clear","valueIsTransform","removeOnChange","onChange","latestValue","isTransformDirty","removeOnRenderRequest","onRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","preloadedFeatures","projectionId","ProjectionNodeConstructor","initialLayoutGroupConfig","features","isEnabled","Component","createElement","layoutScroll","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","on","nextValue","prevValue","existingValue","hasAnimated","getStaticValue","removeValue","updateMotionValuesFromProps","variants","getClosestVariantNode","startAtParent","numVariantProps","variantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","SubscriptionManager","args","DOMVisualElement","compareDocumentPosition","vars","isMounted","transformValues","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parsed","HTMLVisualElement","defaultType","computedStyle","buildHTMLStyles","styleProp","renderHTML","SVGVisualElement","camelCaseAttributes","camelToDash","getAttribute","buildSVGAttrs","renderSVG","domAnimation","renderer","isSVGComponent","enableHardwareAcceleration","isAnimating","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","_d","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","easing","p","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","removeItem","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","tagName","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","onPlay","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","flushSync","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","resolveMotionValue","emptyStyles","valuesToRender","applyTransformsToTarget","transformOrigin","scaleCorrectors","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","round","isCloseTo","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","domMax","projectionNodeConstructor"],"sourceRoot":""}