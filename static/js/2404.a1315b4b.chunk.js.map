{"version":3,"file":"static/js/2404.a1315b4b.chunk.js","mappings":"oYAyBe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAETC,GAAoBC,EAAAA,EAAAA,MAApBD,gBAEFE,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAAaG,SAAS,oBAC7BC,MAAOJ,EAAAA,KAAaG,SAAS,oBAC7BE,MAAOL,EAAAA,KAAaG,SAAS,oBAC7BG,MAAON,EAAAA,KAAaG,SAAS,oBAC7BI,MAAOP,EAAAA,KAAaG,SAAS,oBAC7BK,MAAOR,EAAAA,KAAaG,SAAS,sBAYzBM,GAAUC,EAAAA,EAAAA,IAAQ,CACtBC,KAAM,WACNC,UAAUC,EAAAA,EAAAA,GAAYd,GACtBe,cAZoB,CACpBZ,MAAO,GACPE,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,MAUPO,EAEEN,EAFFM,aAAa,EAEXN,EADFO,UAAaC,EAAY,EAAZA,aAAcC,EAAM,EAANA,OAGvBC,EAAQ,yCAAG,WAAOC,GAAqB,+FAEnC,IAAIC,SAAQ,SAACC,GAAO,OAAKC,WAAWD,EAAS,IAAI,IAAE,KAAD,EACxDE,QAAQC,IAAI,OAAQC,OAAOC,OAAOP,GAAMQ,KAAK,KAC7C/B,EAAgB,mBAChBF,EAASkC,EAAAA,GAAAA,MAAqB,gDAE9BL,QAAQM,MAAM,EAAD,IAAQ,yDAExB,gBATa,sCAWd,OACE,SAAC,KAAY,CAACrB,QAASA,EAASU,SAAUJ,EAAaI,GAAU,UAC/D,UAACY,EAAA,EAAK,CAACC,QAAS,EAAE,WAChB,SAAC,KAAQ,CAACC,QAAQ,OAAOC,OAAQ,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,cAE3EhB,EAAOhB,SACPgB,EAAOd,SACPc,EAAOb,SACPa,EAAOZ,SACPY,EAAOX,SACPW,EAAOV,SACT,SAAC2B,EAAA,EAAc,CAACL,OAAK,EAACM,GAAI,CAAEC,GAAI,GAAI,+BAKtC,SAACC,EAAA,EAAa,CACZC,WAAS,EACTC,KAAK,QACLC,KAAK,SACLC,QAAQ,YACRC,QAAS1B,EACTmB,GAAI,CAAEQ,GAAI,GAAI,wBAOxB,C,eCpFe,SAASC,IACtB,OACE,iCACE,SAAC,KAAM,WACL,4DAGF,SAAC,KAAc,CAACT,GAAI,CAAEU,GAAI,EAAGC,OAAQ,OAErC,SAACC,EAAA,EAAU,CAACN,QAAQ,KAAKO,WAAS,yCAIlC,SAACD,EAAA,EAAU,CAACZ,GAAI,CAAEc,MAAO,iBAAkBJ,GAAI,GAAI,kIAKnD,SAACpD,EAAkB,KAEnB,UAACsD,EAAA,EAAU,CAACN,QAAQ,QAAQN,GAAI,CAAEe,GAAI,GAAI,0CAExC,SAACC,EAAA,EAAI,CAACV,QAAQ,YAAW,6BAG3B,UAACU,EAAA,EAAI,CACHC,UAAWC,EAAAA,GACXC,GAAIC,EAAAA,GAAAA,MACJN,MAAM,UACNR,QAAQ,YACRN,GAAI,CACFqB,GAAI,OACJC,WAAY,SACZC,QAAS,eACT,WAEF,SAAC,IAAO,CAACC,KAAK,wBAAwBC,MAAO,KAAM,yBAK3D,C","sources":["sections/auth/AuthVerifyCodeForm.tsx","pages/auth/VerifyCodePage.tsx"],"sourcesContent":["import * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\n// form\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { Stack, FormHelperText } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// components\nimport { useSnackbar } from '../../components/snackbar';\nimport FormProvider, { RHFCodes } from '../../components/hook-form';\n\n// ----------------------------------------------------------------------\n\ntype FormValuesProps = {\n  code1: string;\n  code2: string;\n  code3: string;\n  code4: string;\n  code5: string;\n  code6: string;\n};\n\nexport default function AuthVerifyCodeForm() {\n  const navigate = useNavigate();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const VerifyCodeSchema = Yup.object().shape({\n    code1: Yup.string().required('Code is required'),\n    code2: Yup.string().required('Code is required'),\n    code3: Yup.string().required('Code is required'),\n    code4: Yup.string().required('Code is required'),\n    code5: Yup.string().required('Code is required'),\n    code6: Yup.string().required('Code is required'),\n  });\n\n  const defaultValues = {\n    code1: '',\n    code2: '',\n    code3: '',\n    code4: '',\n    code5: '',\n    code6: '',\n  };\n\n  const methods = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(VerifyCodeSchema),\n    defaultValues,\n  });\n\n  const {\n    handleSubmit,\n    formState: { isSubmitting, errors },\n  } = methods;\n\n  const onSubmit = async (data: FormValuesProps) => {\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      console.log('DATA', Object.values(data).join(''));\n      enqueueSnackbar('Verify success!');\n      navigate(PATH_DASHBOARD.root);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={3}>\n        <RHFCodes keyName=\"code\" inputs={['code1', 'code2', 'code3', 'code4', 'code5', 'code6']} />\n\n        {(!!errors.code1 ||\n          !!errors.code2 ||\n          !!errors.code3 ||\n          !!errors.code4 ||\n          !!errors.code5 ||\n          !!errors.code6) && (\n          <FormHelperText error sx={{ px: 2 }}>\n            Code is required\n          </FormHelperText>\n        )}\n\n        <LoadingButton\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          loading={isSubmitting}\n          sx={{ mt: 3 }}\n        >\n          Verify\n        </LoadingButton>\n      </Stack>\n    </FormProvider>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Link, Typography } from '@mui/material';\n// routes\nimport { PATH_AUTH } from '../../routes/paths';\n// components\nimport Iconify from '../../components/iconify';\n// sections\nimport AuthVerifyCodeForm from '../../sections/auth/AuthVerifyCodeForm';\n// assets\nimport { EmailInboxIcon } from '../../assets/icons';\n\n// ----------------------------------------------------------------------\n\nexport default function VerifyCodePage() {\n  return (\n    <>\n      <Helmet>\n        <title> Verify Code | Minimal UI</title>\n      </Helmet>\n\n      <EmailInboxIcon sx={{ mb: 5, height: 96 }} />\n\n      <Typography variant=\"h3\" paragraph>\n        Please check your email!\n      </Typography>\n\n      <Typography sx={{ color: 'text.secondary', mb: 5 }}>\n        We have emailed a 6-digit confirmation code to acb@domain, please enter the code in below\n        box to verify your email.\n      </Typography>\n\n      <AuthVerifyCodeForm />\n\n      <Typography variant=\"body2\" sx={{ my: 3 }}>\n        Donâ€™t have a code? &nbsp;\n        <Link variant=\"subtitle2\">Resend code</Link>\n      </Typography>\n\n      <Link\n        component={RouterLink}\n        to={PATH_AUTH.login}\n        color=\"inherit\"\n        variant=\"subtitle2\"\n        sx={{\n          mx: 'auto',\n          alignItems: 'center',\n          display: 'inline-flex',\n        }}\n      >\n        <Iconify icon=\"eva:chevron-left-fill\" width={16} />\n        Return to sign in\n      </Link>\n    </>\n  );\n}\n"],"names":["AuthVerifyCodeForm","navigate","useNavigate","enqueueSnackbar","useSnackbar","VerifyCodeSchema","Yup","shape","code1","required","code2","code3","code4","code5","code6","methods","useForm","mode","resolver","yupResolver","defaultValues","handleSubmit","formState","isSubmitting","errors","onSubmit","data","Promise","resolve","setTimeout","console","log","Object","values","join","PATH_DASHBOARD","error","Stack","spacing","keyName","inputs","FormHelperText","sx","px","LoadingButton","fullWidth","size","type","variant","loading","mt","VerifyCodePage","mb","height","Typography","paragraph","color","my","Link","component","RouterLink","to","PATH_AUTH","mx","alignItems","display","icon","width"],"sourceRoot":""}