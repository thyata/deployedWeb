{"version":3,"file":"static/js/6974.1bf60cfa.chunk.js","mappings":"oQAuBA,GAjB0BA,EAAAA,EAAAA,KAAO,SAACC,GAAqB,OACrD,SAACC,EAAA,GAAS,QAACC,QAAM,EAACC,YAAa,CAAEC,QAAQ,IAAYJ,GAAS,GADtCD,EAEvB,gBAAGM,EAAK,EAALA,MAAK,MAAQ,CACjB,aAAc,CACZC,QAAS,QAEX,YAAW,kBACND,EAAME,WAAWC,WAAS,IAC7BC,QAASJ,EAAMK,QAAQ,GAAK,EAAG,GAAK,GACpCC,aAAc,oBAEhB,2BAA4B,CAC1BC,aAAiD,IAAnCC,OAAOR,EAAMS,MAAMF,cACjCG,iBAAiBC,EAAAA,EAAAA,IAAMX,EAAMY,QAAQC,KAAK,KAAM,MAEnD,I,UCYD,GAvBwBnB,EAAAA,EAAAA,IAAOE,EAAAA,EAAW,CACxCkB,kBAAmB,SAACC,GAAI,MAAc,UAATA,CAAgB,GADvBrB,EAEd,gBAAGsB,EAAK,EAALA,MAAOhB,EAAK,EAALA,MAAK,MAAQ,CAC/B,aAAc,CACZC,QAAS,QAEX,2BAA4B,CAC1Be,MAAAA,EACAC,OAAO,aAAD,QAAeN,EAAAA,EAAAA,IAAMX,EAAMY,QAAQC,KAAK,KAAM,MACpDK,WAAYlB,EAAMmB,YAAYC,OAAO,CAAC,aAAc,SAAU,CAC5DC,SAAUrB,EAAMmB,YAAYE,SAASC,UAEvC,iBAAgB,QACdC,UAAWvB,EAAMwB,cAAcC,KAC3BT,IAAK,UACNhB,EAAM0B,YAAYC,GAAG,MAAQ,CAC5BX,MAAOA,EAAQ,OAKxB,I,+PCfc,SAASY,IACtB,MCNa,SAAsBC,GACnC,OAAkCC,EAAAA,EAAAA,UAAS,CACzCC,KAAM,KACNC,MAAO,KACPC,QAAS,KACTC,QAAS,OACT,eALKC,EAAS,KAAEC,EAAY,MAO9BC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAWC,aAAY,kBAAMC,GAAY,GAAE,KACjD,OAAO,kBAAMC,cAAcH,EAAU,CAEvC,GAAG,IAEH,IAAME,EAAa,WACjB,IAAME,EAAYb,EAEZc,EAAU,IAAIC,KAEdC,EAAgBH,EAAUI,UAAYH,EAAQG,UAE9CC,EAAUC,KAAKC,MAAMJ,EAAa,OAElCK,EAAW,WAAIF,KAAKC,MACvBJ,EAAa,MAAwB,OACpCM,OAAO,GAELC,EAAa,WAAIJ,KAAKC,MAAOJ,EAAa,KAAmB,MAAmBM,OAAO,GAEvFE,EAAa,WAAIL,KAAKC,MAAOJ,EAAa,IAAkB,MAAQM,OAAO,GAEjFf,EAAa,CACXL,KAAMgB,EAAQO,YAAc,MAC5BtB,MAAOkB,GAAY,MACnBjB,QAASmB,GAAc,MACvBlB,QAASmB,GAAc,OAE3B,EAEA,MAAO,CACLtB,KAAMI,EAAUJ,KAChBC,MAAOG,EAAUH,MACjBC,QAASE,EAAUF,QACnBC,QAASC,EAAUD,QAEvB,CDvC4CqB,CAAa,IAAIX,KAAK,qBAAxDb,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAASC,EAAO,EAAPA,QAE9B,OACE,iCACE,SAAC,KAAM,WACL,4DAGF,SAACsB,EAAA,EAAU,CAACC,QAAQ,KAAKC,WAAS,6BAIlC,SAACF,EAAA,EAAU,CAACG,GAAI,CAAEC,MAAO,kBAAmB,0DAI5C,SAAC,KAAsB,CAACD,GAAI,CAAEE,GAAI,GAAIC,OAAQ,QAE9C,UAACC,EAAA,EAAK,CACJC,UAAU,MACVC,eAAe,SACfC,SAAS,SAACC,EAAA,EAAG,CAACR,GAAI,CAAES,GAAI,CAAEC,GAAI,EAAGC,GAAI,MAAQ,eAC7CX,GAAI,CAAEzD,WAAY,MAAO,WAEzB,SAACqE,EAAS,CAACC,MAAM,OAAOC,MAAO1C,KAE/B,SAACwC,EAAS,CAACC,MAAM,QAAQC,MAAOzC,KAEhC,SAACuC,EAAS,CAACC,MAAM,UAAUC,MAAOxC,KAElC,SAACsC,EAAS,CAACC,MAAM,UAAUC,MAAOvC,QAGpC,SAAC,KAAe,CACdwC,WAAS,EACTC,YAAY,mBACZC,WAAY,CACVC,cACE,SAACC,EAAA,EAAc,CAACC,SAAS,MAAK,UAC5B,SAACC,EAAA,EAAM,CAACvB,QAAQ,YAAYwB,KAAK,QAAO,yBAK5CtB,GAAI,CAAEuB,GAAI,KAEZvB,GAAI,CAAEE,GAAI,MAGZ,SAACE,EAAA,EAAK,CAAC1D,QAAS,EAAG8E,WAAW,SAASlB,eAAe,SAASD,UAAU,MAAK,SAC3EoB,EAAAA,GAAAA,KAAa,SAACC,GAAM,OACnB,SAACC,EAAA,EAAU,CAET3B,GAAI,CACFC,MAAOyB,EAAOzB,MACd,UAAW,CACT2B,SAAS5E,EAAAA,EAAAA,IAAM0E,EAAOzB,MAAO,OAE/B,UAEF,SAAC,IAAO,CAAC4B,KAAMH,EAAOG,QARjBH,EAAOI,KASD,QAKvB,CASA,SAASlB,EAAU,GAAmC,IAAjCC,EAAK,EAALA,MAAOC,EAAK,EAALA,MAC1B,OACE,4BACE,UAACN,EAAA,EAAG,eAAGM,EAAK,QACZ,SAACN,EAAA,EAAG,CAACR,GAAI,CAAEC,MAAO,iBAAkB1D,WAAY,SAAU,SAAEsE,MAGlE,C","sources":["components/custom-input/CustomSmallSelect.tsx","components/custom-input/CustomTextField.tsx","pages/ComingSoonPage.tsx","hooks/useCountdown.ts"],"sourcesContent":["// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport { TextField, TextFieldProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst CustomSmallSelect = styled((props: TextFieldProps) => (\n  <TextField select SelectProps={{ native: true }} {...props} />\n))(({ theme }) => ({\n  '& fieldset': {\n    display: 'none',\n  },\n  '& select': {\n    ...theme.typography.subtitle2,\n    padding: theme.spacing(0.5, 0, 0.5, 1),\n    paddingRight: '28px !important',\n  },\n  '& .MuiOutlinedInput-root': {\n    borderRadius: Number(theme.shape.borderRadius) * 0.75,\n    backgroundColor: alpha(theme.palette.grey[500], 0.08),\n  },\n}));\n\nexport default CustomSmallSelect;\n","// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport { TextField, TextFieldProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ntype Props = TextFieldProps & {\n  width?: number;\n};\n\nconst CustomTextField = styled(TextField, {\n  shouldForwardProp: (prop) => prop !== 'width',\n})<Props>(({ width, theme }) => ({\n  '& fieldset': {\n    display: 'none',\n  },\n  '& .MuiOutlinedInput-root': {\n    width,\n    border: `solid 1px ${alpha(theme.palette.grey[500], 0.32)}`,\n    transition: theme.transitions.create(['box-shadow', 'width'], {\n      duration: theme.transitions.duration.shorter,\n    }),\n    '&.Mui-focused': {\n      boxShadow: theme.customShadows.z20,\n      ...(width && {\n        [theme.breakpoints.up('sm')]: {\n          width: width + 60,\n        },\n      }),\n    },\n  },\n}));\n\nexport default CustomTextField;\n","import { Helmet } from 'react-helmet-async';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Box, Stack, Button, Typography, IconButton, InputAdornment } from '@mui/material';\n// hooks\nimport useCountdown from '../hooks/useCountdown';\n// _mock\nimport { _socials } from '../_mock/arrays';\n// components\nimport Iconify from '../components/iconify';\nimport { CustomTextField } from '../components/custom-input';\n// assets\nimport { ComingSoonIllustration } from '../assets/illustrations';\n\n// ----------------------------------------------------------------------\n\nexport default function ComingSoonPage() {\n  const { days, hours, minutes, seconds } = useCountdown(new Date('07/07/2024 21:30'));\n\n  return (\n    <>\n      <Helmet>\n        <title> Coming Soon | Minimal UI</title>\n      </Helmet>\n\n      <Typography variant=\"h3\" paragraph>\n        Coming Soon!\n      </Typography>\n\n      <Typography sx={{ color: 'text.secondary' }}>\n        We are currently working hard on this page!\n      </Typography>\n\n      <ComingSoonIllustration sx={{ my: 10, height: 240 }} />\n\n      <Stack\n        direction=\"row\"\n        justifyContent=\"center\"\n        divider={<Box sx={{ mx: { xs: 1, sm: 2.5 } }}>:</Box>}\n        sx={{ typography: 'h2' }}\n      >\n        <TimeBlock label=\"Days\" value={days} />\n\n        <TimeBlock label=\"Hours\" value={hours} />\n\n        <TimeBlock label=\"Minutes\" value={minutes} />\n\n        <TimeBlock label=\"Seconds\" value={seconds} />\n      </Stack>\n\n      <CustomTextField\n        fullWidth\n        placeholder=\"Enter your email\"\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <Button variant=\"contained\" size=\"large\">\n                Notify Me\n              </Button>\n            </InputAdornment>\n          ),\n          sx: { pr: 0.5 },\n        }}\n        sx={{ my: 5 }}\n      />\n\n      <Stack spacing={1} alignItems=\"center\" justifyContent=\"center\" direction=\"row\">\n        {_socials.map((social) => (\n          <IconButton\n            key={social.name}\n            sx={{\n              color: social.color,\n              '&:hover': {\n                bgcolor: alpha(social.color, 0.08),\n              },\n            }}\n          >\n            <Iconify icon={social.icon} />\n          </IconButton>\n        ))}\n      </Stack>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ntype TimeBlockProps = {\n  label: string;\n  value: string;\n};\n\nfunction TimeBlock({ label, value }: TimeBlockProps) {\n  return (\n    <div>\n      <Box> {value} </Box>\n      <Box sx={{ color: 'text.secondary', typography: 'body1' }}>{label}</Box>\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\n\n// ----------------------------------------------------------------------\n\ntype ReturnType = {\n  days: string;\n  hours: string;\n  minutes: string;\n  seconds: string;\n};\n\nexport default function useCountdown(date: Date): ReturnType {\n  const [countdown, setCountdown] = useState({\n    days: '00',\n    hours: '00',\n    minutes: '00',\n    seconds: '00',\n  });\n\n  useEffect(() => {\n    const interval = setInterval(() => setNewTime(), 1000);\n    return () => clearInterval(interval);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const setNewTime = () => {\n    const startTime = date;\n\n    const endTime = new Date();\n\n    const distanceToNow = startTime.valueOf() - endTime.valueOf();\n\n    const getDays = Math.floor(distanceToNow / (1000 * 60 * 60 * 24));\n\n    const getHours = `0${Math.floor(\n      (distanceToNow % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n    )}`.slice(-2);\n\n    const getMinutes = `0${Math.floor((distanceToNow % (1000 * 60 * 60)) / (1000 * 60))}`.slice(-2);\n\n    const getSeconds = `0${Math.floor((distanceToNow % (1000 * 60)) / 1000)}`.slice(-2);\n\n    setCountdown({\n      days: getDays.toString() || '000',\n      hours: getHours || '000',\n      minutes: getMinutes || '000',\n      seconds: getSeconds || '000',\n    });\n  };\n\n  return {\n    days: countdown.days,\n    hours: countdown.hours,\n    minutes: countdown.minutes,\n    seconds: countdown.seconds,\n  };\n}\n\n// Usage\n// const countdown = useCountdown(new Date('07/07/2022 21:30'));\n"],"names":["styled","props","TextField","select","SelectProps","native","theme","display","typography","subtitle2","padding","spacing","paddingRight","borderRadius","Number","shape","backgroundColor","alpha","palette","grey","shouldForwardProp","prop","width","border","transition","transitions","create","duration","shorter","boxShadow","customShadows","z20","breakpoints","up","ComingSoonPage","date","useState","days","hours","minutes","seconds","countdown","setCountdown","useEffect","interval","setInterval","setNewTime","clearInterval","startTime","endTime","Date","distanceToNow","valueOf","getDays","Math","floor","getHours","slice","getMinutes","getSeconds","toString","useCountdown","Typography","variant","paragraph","sx","color","my","height","Stack","direction","justifyContent","divider","Box","mx","xs","sm","TimeBlock","label","value","fullWidth","placeholder","InputProps","endAdornment","InputAdornment","position","Button","size","pr","alignItems","_socials","social","IconButton","bgcolor","icon","name"],"sourceRoot":""}