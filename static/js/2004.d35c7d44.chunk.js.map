{"version":3,"file":"static/js/2004.d35c7d44.chunk.js","mappings":"0TAOe,SAASA,EAAc,GAOd,IANtBC,EAAK,EAALA,MACAC,EAAO,EAAPA,QACAC,EAAM,EAANA,OACAC,EAAI,EAAJA,KACAC,EAAO,EAAPA,QACGC,GAAK,YAER,OACE,UAACC,EAAA,GAAM,gBAACC,WAAS,EAACC,SAAS,KAAKL,KAAMA,EAAMC,QAASA,GAAaC,GAAK,eACrE,SAACI,EAAA,EAAW,CAACC,GAAI,CAAEC,GAAI,GAAI,SAAEX,IAE5BC,IAAW,UAACW,EAAA,EAAa,CAACF,GAAI,CAAEG,WAAY,SAAU,cAAGZ,EAAO,QAEjE,UAACa,EAAA,EAAa,WACXZ,GAED,SAACa,EAAA,EAAM,CAACC,QAAQ,WAAWC,MAAM,UAAUC,QAASd,EAAQ,0BAMpE,C,6JChBe,SAASe,EAAgB,GAAwC,IAAtCC,EAAI,EAAJA,KAAMC,EAAU,EAAVA,WAAYC,EAAQ,EAARA,SAClDC,EAAqBH,EAArBG,KAAMC,EAAeJ,EAAfI,KAAMC,EAASL,EAATK,KAEdC,GAAM,QACVC,QAAS,cACTC,WAAY,SACZX,MAAO,gBACHK,IACDD,GAAc,CACbQ,OAAQ,UACRC,cAAe,OACfb,MAAO,kBAIPc,GACJ,gCACGN,IACC,SAACO,EAAA,EAAG,CACFC,UAAU,OACVvB,GAAI,CACFwB,GAAI,EACJP,QAAS,UACT,QAAS,CAAEQ,MAAO,GAAIC,OAAQ,KAC9B,SAEDX,IAIJF,KAIL,OAAIC,GAEA,SAACa,EAAA,EAAI,CAACJ,UAAWK,EAAAA,GAAYC,GAAIf,EAAMd,GAAIgB,EAAO,SAC/CK,KAKA,UAACC,EAAA,EAAG,CAACtB,GAAIgB,EAAO,cAAGK,EAAa,MACzC,C,gECjDe,SAASS,EAAkB,GAQd,IAP1BC,EAAK,EAALA,MACAvC,EAAM,EAANA,OACAwC,EAAO,EAAPA,QACAC,EAAQ,EAARA,SACAtB,EAAU,EAAVA,WACAX,EAAE,EAAFA,GACGL,GAAK,YAEFuC,EAAWH,EAAMA,EAAMI,OAAS,GAAGtB,KAEzC,OACE,UAACS,EAAA,EAAG,CAACtB,IAAE,QAAIoC,GAAI,GAAMpC,GAAK,WACxB,UAACqC,EAAA,EAAK,CAACC,UAAU,MAAMpB,WAAW,SAAQ,WACxC,UAACI,EAAA,EAAG,CAACtB,GAAI,CAAEuC,SAAU,GAAI,UAEtBP,IACC,SAACQ,EAAA,EAAU,CAAClC,QAAQ,KAAKmC,cAAY,WAClCT,MAKFD,EAAMI,SACP,SAACO,EAAA,GAAW,gBAACC,WAAW,SAACC,EAAS,KAASjD,GAAK,aAC7CoC,EAAMc,KAAI,SAACnC,GAAI,OACd,SAAC,EAAQ,CAEPA,KAAMA,EACNC,WAAYA,EACZC,SAAUF,EAAKG,OAASqB,GAHnBxB,EAAKG,MAAQ,GAIlB,UAMTrB,IAAU,UAAC8B,EAAA,EAAG,CAACtB,GAAI,CAAE8C,WAAY,GAAI,cAAGtD,EAAM,YAI9CyC,IACD,SAACX,EAAA,EAAG,CAACtB,GAAI,CAAE+C,GAAI,GAAI,SAChBd,EAASY,KAAI,SAAC/B,GAAI,OACjB,SAACa,EAAA,EAAI,CACHqB,QAAM,EAENlC,KAAMA,EACNR,QAAQ,QACR2C,OAAO,SACPC,IAAI,WACJlD,GAAI,CAAEiB,QAAS,SAAU,SAExBH,GAPIA,EAQA,QAMnB,CAIA,SAAS8B,IACP,OACE,SAACtB,EAAA,EAAG,CACFC,UAAU,OACVvB,GAAI,CAAEyB,MAAO,EAAGC,OAAQ,EAAGyB,aAAc,MAAOC,QAAS,kBAG/D,C,iKClEe,SAASC,EAAa,GAA+D,IAA7D/D,EAAK,EAALA,MAAOgE,EAAW,EAAXA,YAAaC,EAAG,EAAHA,IAAKvD,EAAE,EAAFA,GAAOL,GAAK,YAC1E,OACE,UAAC0C,EAAA,GAAK,gBACJnB,WAAW,SACXsC,eAAe,SACfxD,IAAE,QACA0B,OAAQ,EACR+B,UAAW,SACXC,EAAG,SAACC,GAAK,OAAKA,EAAMC,QAAQ,EAAG,EAAE,GAC9B5D,IAEDL,GAAK,eAET,SAAC,IAAK,CACJkE,gBAAc,EACdC,IAAI,gBACJC,IAAKR,GAAO,uDACZvD,GAAI,CAAE0B,OAAQ,IAAKU,GAAI,MAGzB,SAACI,EAAA,EAAU,CAAClC,QAAQ,KAAKmC,cAAY,WAClCnD,IAGFgE,IACC,SAACd,EAAA,EAAU,CAAClC,QAAQ,QAAQN,GAAI,CAAEO,MAAO,kBAAmB,SACzD+C,OAKX,C,wBC1CO,SAASU,EAAUC,EAAcC,EAAqBC,GAC3D,OAAOF,EAAO,EAAIG,KAAKC,IAAI,GAAI,EAAIJ,GAAQC,EAAcC,GAAe,CAC1E,CAEA,SAASG,EAAwBC,EAAMC,EAAMC,GAC3C,OAAID,EAAEC,GAAWF,EAAEE,IACT,EAEND,EAAEC,GAAWF,EAAEE,GACV,EAEF,CACT,CAEO,SAASC,EACdC,EACAF,GAEA,MAAiB,SAAVE,EACH,SAACJ,EAAGC,GAAC,OAAKF,EAAqBC,EAAGC,EAAGC,EAAQ,EAC7C,SAACF,EAAGC,GAAC,OAAMF,EAAqBC,EAAGC,EAAGC,EAAS,CACrD,C,kOCNe,SAASG,EAASC,GAC/B,OAA0BC,EAAAA,EAAAA,YAAgB,OAALD,QAAK,IAALA,IAAAA,EAAOE,eAAa,eAAlDC,EAAK,KAAEC,EAAQ,KAEtB,GAA8BH,EAAAA,EAAAA,WAAc,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOK,iBAAkB,QAAO,eAAhET,EAAO,KAAEU,EAAU,KAE1B,GAA0BL,EAAAA,EAAAA,WAA8B,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOO,eAAgB,OAAM,eAAzET,EAAK,KAAEU,EAAQ,KAEtB,GAAwBP,EAAAA,EAAAA,WAAc,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOS,qBAAsB,GAAE,eAAzDrB,EAAI,KAAEsB,EAAO,KAEpB,GAAsCT,EAAAA,EAAAA,WAAc,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOW,qBAAsB,GAAE,eAAvEtB,EAAW,KAAEuB,EAAc,KAElC,GAAgCX,EAAAA,EAAAA,WAAwB,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOa,kBAAmB,IAAG,eAAzEC,EAAQ,KAAEC,EAAW,KAEtBC,GAASC,EAAAA,EAAAA,cACb,SAACC,GAEY,KAAPA,IACFV,EAFYZ,IAAYsB,GAAgB,QAAVpB,EAEb,OAAS,OAC1BQ,EAAWY,GAEf,GACA,CAACpB,EAAOF,IAGJuB,GAAcF,EAAAA,EAAAA,cAClB,SAACC,GACC,IAAME,EAAgBN,EAASO,QAAQH,GAEnCI,EAAwB,IAEL,IAAnBF,EACFE,EAAcA,EAAYC,OAAOT,EAAUI,GAChB,IAAlBE,EACTE,EAAcA,EAAYC,OAAOT,EAASU,MAAM,IACvCJ,IAAkBN,EAASxD,OAAS,EAC7CgE,EAAcA,EAAYC,OAAOT,EAASU,MAAM,GAAI,IAC3CJ,EAAgB,IACzBE,EAAcA,EAAYC,OACxBT,EAASU,MAAM,EAAGJ,GAClBN,EAASU,MAAMJ,EAAgB,KAGnCL,EAAYO,EACd,GACA,CAACR,IAGGW,GAAkBR,EAAAA,EAAAA,cAAY,SAACS,EAAkBC,GAEnDZ,EADEW,EACUC,EAGF,GACd,GAAG,IAEGC,GAAeX,EAAAA,EAAAA,cAAY,SAACY,EAAgBC,GAChDpB,EAAQoB,EACV,GAAG,IAEGC,GAAsBd,EAAAA,EAAAA,cAAY,SAACY,GACvCnB,EAAQ,GACRE,EAAeoB,SAASH,EAAMzD,OAAO6D,MAAO,KAC5CC,QAAQC,IAAI,8BAA8BN,EAAMzD,OAAO6D,MACzD,GAAG,IAEGG,GAAgBnB,EAAAA,EAAAA,cAAY,SAACY,GACjCzB,EAASyB,EAAMzD,OAAOsD,QACxB,GAAG,IAEH,MAAO,CACLvB,MAAAA,EACAL,MAAAA,EACAV,KAAAA,EACAQ,QAAAA,EACAP,YAAAA,EAEAyB,SAAAA,EACAK,YAAAA,EACAM,gBAAAA,EAEAT,OAAAA,EACAY,aAAAA,EACAQ,cAAAA,EACAL,oBAAAA,EAEArB,QAAAA,EACAN,SAAAA,EACAI,SAAAA,EACAF,WAAAA,EACAS,YAAAA,EACAH,eAAAA,EAEJ,C,gDClGe,SAASyB,EAAY,GAAwB,IAAtBC,EAAU,EAAVA,WACpC,OACE,SAAC,IAAQ,UACNA,GACC,SAAC,IAAS,CAACC,QAAS,GAAG,UACrB,SAAC,IAAY,CACX9H,MAAM,UACNU,GAAI,CACF,qBAAsB,CAAE0B,OAAQ,WAKtC,SAAC,IAAS,CAAC0F,QAAS,GAAIpH,GAAI,CAAE0D,EAAG,MAIzC,C,cClBe,SAAS2D,EAAe,GAA+B,IAA7BrD,EAAS,EAATA,UAAWtC,EAAM,EAANA,OAClD,OAAKsC,GAKH,SAAC,IAAQ,CACPhE,IAAE,UACI0B,GAAU,CACZA,OAAQA,EAASsC,IAEnB,UAEF,SAAC,IAAS,CAACoD,QAAS,MAXf,IAcX,C,+CCZME,EAAiB,CACrBC,OAAQ,EACRC,QAAS,EACTC,QAAS,EACThG,MAAO,MACPC,OAAQ,MACRgG,SAAU,SACVC,SAAU,WACVC,WAAY,SACZC,KAAM,iBAgBO,SAASC,EAAgB,GAS7B,IARTnD,EAAK,EAALA,MACAF,EAAO,EAAPA,QAAQ,EAAD,EACPsD,SAAAA,OAAQ,MAAG,EAAC,EACZC,EAAS,EAATA,UAAU,EAAD,EACTC,YAAAA,OAAW,MAAG,EAAC,EACfpC,EAAM,EAANA,OACAS,EAAe,EAAfA,gBACAtG,EAAE,EAAFA,GAEA,OACE,SAACkI,EAAA,EAAS,CAAClI,GAAIA,EAAG,UAChB,UAAC,IAAQ,WACNsG,IACC,SAAC,IAAS,CAACmB,QAAQ,WAAU,UAC3B,SAACU,EAAA,EAAQ,CACPC,cAAeH,EAAc,GAAKA,EAAcF,EAChDxB,QAASwB,EAAW,GAAKE,IAAgBF,EACzCM,SAAU,SAAC3B,GAA0C,OACnDJ,EAAgBI,EAAMzD,OAAOsD,QAAQ,MAM5CyB,EAAUnF,KAAI,SAACyF,GAAQ,OACtB,SAAC,IAAS,CAERC,MAAOD,EAASC,OAAS,OACzBC,cAAe/D,IAAY6D,EAASvC,IAAKpB,EACzC3E,GAAI,CAAEyB,MAAO6G,EAAS7G,MAAOgH,SAAUH,EAASG,UAAW,SAE1D5C,GACC,UAAC6C,EAAA,EAAc,CACbC,cAAY,EACZC,OAAQnE,IAAY6D,EAASvC,GAC7BzD,UAAWmC,IAAY6D,EAASvC,GAAKpB,EAAQ,MAC7CnE,QAAS,kBAAMqF,EAAOyC,EAASvC,GAAG,EAClC/F,GAAI,CAAE6I,cAAe,cAAe,UAEnCP,EAASQ,MAETrE,IAAY6D,EAASvC,IACpB,SAACzE,EAAA,EAAG,CAACtB,IAAE,UAAOsH,GAAiB,SAClB,SAAV3C,EAAmB,oBAAsB,qBAE1C,QAGN2D,EAASQ,OAtBNR,EAASvC,GAwBJ,QAKtB,C,yGClFe,SAASgD,EAAoB,GAQjC,IAPT/D,EAAK,EAALA,MACAxF,EAAM,EAANA,OACAuI,EAAQ,EAARA,SACAE,EAAW,EAAXA,YACA3B,EAAe,EAAfA,gBACAtG,EAAE,EAAFA,GACGL,GAAK,YAER,OAAKsI,GAKH,UAAC,KAAK,gBACJ3F,UAAU,MACVpB,WAAW,SACXlB,IAAE,gBACAgJ,GAAI,EACJC,GAAI,EACJC,IAAK,EACLC,KAAM,EACN1H,MAAO,EACP2H,OAAQ,EACR1H,OAAQ,GACRiG,SAAU,WACVvE,QAAS,mBACL4B,GAAS,CACXtD,OAAQ,KAEP1B,IAEDL,GAAK,eAET,SAACwI,EAAA,EAAQ,CACPC,cAAeH,EAAc,GAAKA,EAAcF,EAChDxB,QAASwB,EAAW,GAAKE,IAAgBF,EACzCM,SAAU,SAAC3B,GAA0C,OACnDJ,EAAgBI,EAAMzD,OAAOsD,QAAQ,KAIzC,UAAC/D,EAAA,EAAU,CACTlC,QAAQ,YACRN,IAAE,QACAqJ,GAAI,EACJ9G,SAAU,EACVhC,MAAO,gBACHyE,GAAS,CACXqE,GAAI,IAEN,UAEDpB,EAAW,wBAGbzI,GAAUA,MA9CN,IAiDX,C,2FCpDe,SAAS8J,EAAsB,GAMZ,IALhCtE,EAAK,EAALA,MACAiC,EAAa,EAAbA,cAAc,EAAD,EACbsC,mBAAAA,OAAkB,MAAG,CAAC,EAAG,GAAI,GAAG,IAAG,EACnCvJ,EAAE,EAAFA,GACGL,GAAK,YAER,OACE,UAAC2B,EAAA,EAAG,CAACtB,IAAE,QAAI2H,SAAU,YAAe3H,GAAK,WACvC,SAACwJ,EAAA,GAAe,QAACD,mBAAoBA,EAAoBhI,UAAU,OAAU5B,IAE5EsH,IACC,SAACwC,EAAA,EAAgB,CACfX,MAAM,QACNY,SAAS,SAACC,EAAA,EAAM,CAACpD,QAASvB,EAAOqD,SAAUpB,IAC3CjH,GAAI,CACFgJ,GAAI,EACJY,GAAI,IACJV,IAAK,EACLvB,SAAU,CACRkC,GAAI,iBAOlB,C,qaC8BMC,EAAiB,CACrB,MACA,YACA,WACA,YACA,UA0BIC,EAAa,CACjB,CAAEhE,GAAI,UAAW+C,MAAO,UAAWP,MAAO,QAC1C,CAAExC,GAAI,cAAe+C,MAAO,eAAgBP,MAAO,QACnD,CAAExC,GAAI,QAAS+C,MAAO,QAASP,MAAO,QACtC,CAAExC,GAAI,OAAQ+C,MAAO,OAAQP,MAAO,UACpC,CAAExC,GAAI,UAAW+C,MAAO,UAAWP,MAAO,UAC1C,CAAExC,GAAI,SAAU+C,MAAO,SAAUP,MAAO,QACxC,CAAExC,GAAI,KAKO,SAASiE,IACtB,OAiBIpF,EAAAA,EAAAA,MAhBFI,EAAK,EAALA,MACAf,EAAI,EAAJA,KACAU,EAAK,EAALA,MACAF,EAAO,EAAPA,QACAP,EAAW,EAAXA,YACAqB,EAAO,EAAPA,QAEAI,EAAQ,EAARA,SACAC,EAAW,EAAXA,YACAI,EAAW,EAAXA,YACAM,EAAe,EAAfA,gBAEAT,EAAM,EAANA,OACAoB,EAAa,EAAbA,cACAR,EAAY,EAAZA,aACAG,EAAmB,EAAnBA,oBAGMqD,GAAiBC,EAAAA,EAAAA,MAAjBD,aAEFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MAEjB,GAAkCxF,EAAAA,EAAAA,UAASyF,EAAAA,IAAU,eAA9CC,GAAS,KAAEC,GAAY,KAE9B,IAAoC3F,EAAAA,EAAAA,UAAS,IAAG,iBAAzC4F,GAAU,MAAEC,GAAa,MAChC,IAAoC7F,EAAAA,EAAAA,UAAS,IAAG,iBAAzC8F,GAAU,MAAEC,GAAa,MAChC,IAAoC/F,EAAAA,EAAAA,UAAS,IAAG,iBAAzCgG,GAAU,MAAEC,GAAa,MAChC,IAAoCjG,EAAAA,EAAAA,UAAS,IAAG,iBAAzCkG,GAAU,MAAEC,GAAa,MAChC,IAAwCnG,EAAAA,EAAAA,UAAS,OAAM,iBAAhDoG,GAAY,MAAEC,GAAe,MAEpC,IAAsCrG,EAAAA,EAAAA,WAAS,GAAM,iBAA9CsG,GAAW,MAAEC,GAAc,MAClC,IAAuCvG,EAAAA,EAAAA,UAA0B,IAAG,iBAA7DwG,GAAY,MAAEC,GAAc,MAEnC,IAAuCzG,EAAAA,EAAAA,UAAyB,IAAG,iBAA5D0G,GAAY,MAAEC,GAAc,MAEnC,IAAuC3G,EAAAA,EAAAA,UAA0B,IAAG,iBAA7D4G,GAAY,MAAEC,GAAc,MAEnC,IAA8B7G,EAAAA,EAAAA,UAAkB,CAC9CiB,GAAI,EACJlF,KAAM,GACN+K,YAAa,GACbC,KAAM,GACNC,OAAQ,KACR,iBANKC,GAAO,MAAEC,GAAU,MAQ1B,IAAgClH,EAAAA,EAAAA,UAAmB,CACjDiB,GAAI,EACJlF,KAAM,GACNoL,cAAe,KACf,iBAJKC,GAAQ,MAAEC,GAAW,MAM5B,IAAgCrH,EAAAA,EAAAA,UAAmB,CACjDiB,GAAI,EACJqG,SAAU,GACVC,SAAU,GACVxL,KAAM,GACNyL,OAAQ,GACRR,OAAQ,GACRS,SAAU,KACV,iBARKC,GAAQ,MAAEC,GAAW,MAU5B,IAAkEC,EAAAA,EAAAA,KAChE,SAACC,GAAK,OAAKA,EAAMC,QAAQ,IADnBC,GAAU,GAAVA,WAIFC,IAJuB,GAATC,UAAwB,GAAbC,cAA8B,GAAfC,gBAwXhD,SAAqB,GAajB,IAZFC,EAAS,EAATA,UACU,EAAVC,WACU,EAAVzC,WACY,EAAZQ,aACU,EAAVN,WAiCA,OAAOsC,CACT,CA3ZuBE,CAAY,CAC/BF,UAAWL,GACXM,YAAYzI,EAAAA,EAAAA,IAAcC,EAAOF,GACjCiG,WAAAA,GACAE,WAAAA,GACAM,aAAAA,MAIImC,GAAaP,GAAavN,QAE1B+N,GAActI,EAAQ,GAAK,GAE3BuI,GAA4B,KAAf7C,IAAoC,QAAfE,IAAyC,QAAjBM,GAE1D/D,IACJ2F,GAAavN,QAAQ4C,OAKfqL,IAAiB1H,EAAAA,EAAAA,cAAW,uBAAE,kHAEbuE,GAASoD,EAAAA,EAAAA,OAAe,KAAD,EAApCC,EAAI,OAEVjC,IAAe,OAAIiC,IAAM,gDAEzB3G,QAAQC,IAAI,EAAD,IAAK,yDAGjB,IAEG2G,IAAmB7H,EAAAA,EAAAA,cAAW,uBAAE,kHAEfuE,GAASuD,EAAAA,EAAAA,OAAiB,KAAD,EAAtCF,EAAI,OAEV/B,IAAe,OAAI+B,IAAM,gDAEzB3G,QAAQC,IAAI,EAAD,IAAK,yDAGjB,IAEG6G,IAAkB/H,EAAAA,EAAAA,cAAW,uBAAE,kHAEdgI,KAAqB,KAAD,EAAjCJ,EAAI,OACVnC,IAAe,OAAImC,IAAM,gDAEzB3G,QAAQC,IAAI,EAAD,IAAK,yDAGjB,KAEH+G,EAAAA,EAAAA,YAAU,WACR1D,GAAS2D,EAAAA,EAAAA,IAAc,CAAClC,OAAQ,SAChC/E,QAAQC,IAAI6F,GAGd,GAAG,KAEHkB,EAAAA,EAAAA,YAAU,WACRP,KACAG,KACAE,IAEF,GAAE,IAEJ,IAIMI,GAAqB,WACzB5C,IAAe,EACjB,EAIM6C,GAAsB,SAACC,GAAc,OAAK9D,GAAS+D,EAAAA,EAAAA,IAAeD,GAAS,EAE3EL,GAAqB,WAAH,OAASzD,GAASgE,EAAAA,EAAAA,MAAe,EAwBnDC,GAAgB,yCAAG,WAAO5H,EAAkC6H,GAAU,sEAC1ExD,GAAcwD,EAAE1N,MAChBsL,GAAYoC,GACF,IAAIC,KAGdnE,GAAS2D,EAAAA,EAAAA,IAAc,CAACS,UAAW1C,GAAQhG,GAAI2I,WAAYH,EAAExI,GAAI4I,WAAYnC,GAASzG,MAAM,2CAC7F,gBAPqB,wCAShB6I,GAAgB,yCAAG,WAAOlI,EAAkCmI,GAAS,4EAI5D,OAFbX,GAAoBW,EAAEhO,MACtBgK,GAAcgE,EAAEhO,MAChBmL,GAAW6C,GAAE,SAtCyBJ,EAuCYI,EAAE9I,GAvCQsE,GAASuD,EAAAA,EAAAA,IAAca,IAuC3B,KAAD,EAAjDf,EAAI,OACV/B,IAAe,OAAI+B,IACT,IAAIc,KAGdnE,GAAS2D,EAAAA,EAAAA,IAAc,CAACS,UAAUI,EAAE9I,GAAI2I,WAAYxC,GAASnG,GAAI4I,WAAYnC,GAASzG,MACtFgB,QAAQC,IAAI0E,IAAc,kCA7CW,IAAC+C,CA6CZ,UAC3B,gBAZqB,wCAwBhBK,GAAe,yCAAG,WAAO/I,GAAU,sEACvC,IACEsE,GAAS0E,EAAAA,EAAAA,IAAYhJ,IACrBsE,GAAS2D,EAAAA,EAAAA,IAAc,CAAClC,OAAQ,QAGlC,CAFE,MAAOkD,GACPjI,QAAQiI,MAAMA,EAChB,CASA,2CACD,gBAhBoB,sCA6ErB,OACE,iCACE,SAAC,KAAM,WACL,mEAGF,UAAC,IAAS,CAAClP,UAAUmK,GAAuB,KAAK,WAC/C,SAAC,IAAiB,CAChBjI,QAAQ,mBACRD,MAAO,CACL,CAAElB,KAAM,cAAeC,KAAMmO,EAAAA,GAAAA,MAC7B,CAAEpO,KAAM,qBAEVrB,QACE,SAAC,IAAM,CACL+B,UAAWK,EAAAA,GACXC,GAAIoN,EAAAA,GAAAA,KAAAA,IACJ3O,QAAQ,YACR4O,WAAW,SAAC,IAAO,CAACnO,KAAK,kBAAmB,gCAOlD,UAAC,IAAI,YACH,SAAC,IAAI,CACH+F,MAAOoE,GACP7C,SAhKiB,SAAC3B,EAA6CyI,GACvE9E,GAAS2D,EAAAA,EAAAA,IAAc,CAAClC,OAAOqD,KAC/BhE,GAAgBgE,EAClB,EA8JUnP,GAAI,CACFoP,GAAI,EACJhM,QAAS,sBACT,SAED0G,EAAejH,KAAI,SAACwM,GAAG,OACtB,SAAC,IAAG,CAAWvG,MAAOuG,EAAKvI,MAAOuI,GAAxBA,EAA+B,OAI7C,SAAC,IAAO,KAER,SAAC,IAAgB,CACf9B,WAAYA,GACZ7C,WAAYA,GACZE,WAAYA,GACZE,WAAYA,GACZE,WAAYA,GACZsE,YAAa9D,GACb+D,YAAa7D,GACb8D,YAAalE,GACbmE,aAjLe,SAAC/I,GACxB,IAX+ByH,EAW3BuB,GAAS,EACa,KAAvBhJ,EAAMzD,OAAO6D,OACd4I,GAAS,EACTxB,GAAoBxH,EAAMzD,OAAO6D,OACjC6D,GAAcjE,EAAMzD,OAAO6D,OAC3BiE,GAAc,IACdF,GAAc,IACdI,GAAc,IAlBekD,EAmBLzH,EAAMzD,OAAO6D,MAnBWuD,GAASsF,EAAAA,EAAAA,IAAmBxB,EAAQ,MAoBjE,IAAXuB,GAA0C,KAAvBhJ,EAAMzD,OAAO6D,QACxC6D,GAAcjE,EAAMzD,OAAO6D,OAC3BuD,GAAS2D,EAAAA,EAAAA,IAAc,CAAClC,OAAQ,SAChC4D,GAAS,EAEb,EAmKUE,aAAchB,GACdiB,aAAcvB,GACdwB,aA5Ie,SAACpJ,EAAkChD,GAE1DuH,GAAcvH,EAAE7C,MAChB4L,GAAY/I,GACF,IAAI8K,KAGdnE,GAAS2D,EAAAA,EAAAA,IAAc,CAACS,UAAW1C,GAAQhG,GAAI2I,WAAYxC,GAASnG,GAAI4I,WAAYjL,EAAEqC,KACxF,EAqIUgK,cA5FgB,WACxBpF,GAAc,IACdE,GAAc,IACdM,GAAgB,OAChBJ,GAAc,IACdE,GAAc,IACde,GAAW,CACTjG,GAAI,EACJlF,KAAM,GACN+K,YAAa,GACbC,KAAM,GACNC,OAAQ,KAGVK,GAAY,CACVpG,GAAI,EACJlF,KAAM,GACNoL,cAAe,KAGjBQ,GAAa,CACX1G,GAAI,EACJqG,SAAU,GACVC,SAAU,GACVxL,KAAM,GACNyL,OAAQ,GACRR,OAAQ,GACRS,SAAU,KAGZiB,KACAG,KACAE,KAEoB,QAAjB3C,IAAyC,KAAfN,IAAoC,KAAfF,IAAoC,KAAfI,IAAoC,KAAfE,IAC5FX,GAAS2D,EAAAA,EAAAA,IAAc,CAAClC,OAAQ,QAClC,KA2DQ,UAAC,IAAc,CAAC9L,GAAI,CAAE2H,SAAU,WAAYD,SAAU,SAAU,WAC9D,SAAC,KAAmB,CAClB1C,MAAOA,EACPiD,YAAatC,EAASxD,OACtB4F,SAAUyC,GAAUrI,OACpBmE,gBAAiB,SAACC,GAAO,OACvBD,EACEC,EACAiE,GAAU3H,KAAI,SAACmN,GAAG,OAAKA,EAAIjK,EAAE,IAC9B,EAEHvG,QACE,SAAC,IAAO,CAACF,MAAM,SAAQ,UACrB,SAAC,IAAU,CAACiB,MAAM,UAAUC,QAxNlB,WACxB6K,IAAe,EACjB,EAsNuE,UACrD,SAAC,IAAO,CAACtK,KAAK,+BAMtB,SAAC,IAAS,WACR,UAAC,IAAK,CAACkP,KAAMjL,EAAQ,QAAU,SAAUhF,GAAI,CAAEyI,SAAU,KAAM,WAC7D,SAAC,IAAe,CACd9D,MAAOA,EACPF,QAASA,EACTuD,UAAW+B,EACXhC,SAAUyC,GAAUrI,OACpB8F,YAAatC,EAASxD,OACtB0D,OAAQA,EACRS,gBAAiB,SAACC,GAAO,OACvBD,EACEC,EACAuG,GAAavN,QAAQsD,KAAI,SAACmN,GAAG,OAAKA,EAAIjK,EAAE,IACzC,KAIL,UAAC,IAAS,WACP+G,GAAavN,QACXsD,KAAI,SAACmN,GAAgB,OACpB,SAAC,IAAY,CAEXA,IAAKA,EACLrK,SAAUA,EAASuK,SAASF,EAAIjK,IAChCC,YAAa,kBAAMA,EAAYgK,EAAIjK,GAAG,EACtCoK,YAAa,kBAAMrB,GAAgBkB,EAAIjK,GAAG,EAC1CqK,UAAW,kBAjJVrK,EAiJ8BiK,EAAIK,QAAQC,cAhJ/DnG,EAAS8E,EAAAA,GAAAA,KAAAA,MAAyBsB,EAAAA,EAAAA,GAAUxK,KADxB,IAACA,CAiJmD,GAL/CiK,EAAIjK,GAMT,KAGN,SAAC,KAAc,CACbrE,OAAQ4L,GACRtJ,WAAWA,EAAAA,EAAAA,IAAUC,EAAMC,EAAasG,GAAUrI,WAGpD,SAAC,KAAW,CAACgF,WAAYA,iBAMjC,SAAC,KAAqB,CACpBqJ,MAAO1D,GAAa2D,cACpBxM,KAAMA,EACNC,YAAaA,EACbwM,aAAcjK,EACdkK,oBAAqB/J,EAErB5B,MAAOA,EACPiC,cAAeA,WAKrB,SAAC,IAAa,CACZxH,KAAM2L,GACN1L,QAASuO,GACT3O,MAAM,SACNC,SACE,gEAC8B,kCAAUoG,EAASxD,OAAM,OAAW,aAGpE3C,QACE,SAAC,IAAM,CACLc,QAAQ,YACRC,MAAM,QACNC,QAAS,YA3MM,SAACoQ,GACxB,IAAMC,EAAarG,GAAUsG,QAAO,SAACd,GAAG,OAAMY,EAAaV,SAASF,EAAIjK,GAAG,IAI3E,GAHAH,EAAY,IACZ6E,GAAaoG,GAET5M,EAAO,EACT,GAAI2M,EAAazO,SAAWkL,GAAWlL,OACrCoD,EAAQtB,EAAO,QACV,GAAI2M,EAAazO,SAAW2K,GAAavN,QAAQ4C,OACtDoD,EAAQ,QACH,GAAIqL,EAAazO,OAASkL,GAAWlL,OAAQ,CAClD,IAAMwE,EAAUvC,KAAK2M,MAAMvG,GAAUrI,OAASyO,EAAazO,QAAU+B,GAAe,EACpFqB,EAAQoB,EACV,CAEJ,CA6LYqK,CAAiBrL,GACjBsI,IACF,EAAE,wBAQd,C,qPC1gBe,SAASgD,EAAa,GAM1B,IALTjB,EAAG,EAAHA,IACArK,EAAQ,EAARA,SACAyK,EAAS,EAATA,UACApK,EAAW,EAAXA,YACAmK,EAAW,EAAXA,YAOA,GAAsCrL,EAAAA,EAAAA,WAAS,GAAM,eAA9CsG,EAAW,KAAEC,EAAc,KAElC,GAAsCvG,EAAAA,EAAAA,UAA6B,MAAK,eAAjEoM,EAAW,KAAEC,EAAc,KAc5BC,EAAqB,WACzBD,EAAe,KACjB,EAEA,OACE,iCACE,UAACE,EAAA,EAAQ,CAACC,OAAK,EAAC3L,SAAUA,EAAS,WACjC,SAAC4L,EAAA,EAAS,CAAC9J,QAAQ,WAAU,UAC3B,SAACU,EAAA,EAAQ,CAAC5B,QAASZ,EAAUnF,QAASwF,OAGxC,SAACuL,EAAA,EAAS,WACR,SAAClP,EAAA,EAAK,CAACC,UAAU,MAAMpB,WAAW,SAAS0C,QAAS,EAAE,UAGpD,SAACpB,EAAA,EAAU,CAAClC,QAAQ,YAAY0C,QAAM,WACnCgN,EAAIK,QAAQC,gBAKnB,SAACiB,EAAA,EAAS,CAAChJ,MAAM,OAAM,SAAEyH,EAAIK,QAAQmB,eAErC,SAACD,EAAA,EAAS,CAAChJ,MAAM,OAAOvI,GAAI,CAAE6I,cAAe,cAAe,SACzDmH,EAAIyB,YAAYC,SAenB,SAACH,EAAA,EAAS,CAAChJ,MAAM,OAAM,SAClByH,EAAI2B,QAGT,SAACJ,EAAA,EAAS,CAAChJ,MAAM,OAAM,SAClByH,EAAIyB,YAAYG,IAAI7F,QAAQlL,QAGjC,SAAC0Q,EAAA,EAAS,CAAChJ,MAAM,OAAM,UACrB,SAAC,IAAK,CACJjI,QAAQ,OAERN,GAAI,CAAE6I,cAAe,cAAe,SAEnCmH,EAAIlE,YAIT,SAACyF,EAAA,EAAS,CAAChJ,MAAM,QAAO,UACtB,SAACsJ,EAAA,EAAU,CAACtR,MAAO2Q,EAAc,UAAY,UAAW1Q,QA9DtC,SAACkG,GACzByK,EAAezK,EAAMoL,cACvB,EA4D2F,UACjF,SAAC,IAAO,CAAC/Q,KAAK,mCAKpB,UAAC,IAAW,CACVtB,KAAMyR,EACNxR,QAAS0R,EACTW,MAAM,YACN/R,GAAI,CAAEyB,MAAO,KAAM,WAEnB,UAACuQ,EAAA,EAAQ,CACPxR,QAAS,WAlFf6K,GAAe,GAoFP+F,GACF,EACApR,GAAI,CAAEO,MAAO,cAAe,WAE5B,SAAC,IAAO,CAACQ,KAAK,wBAAwB,aAIxC,UAACiR,EAAA,EAAQ,CACPxR,QAAS,WACP4P,IACAgB,GACF,EAAE,WAEF,SAAC,IAAO,CAACrQ,KAAK,kBAAkB,cAKpC,SAAC,IAAa,CACZtB,KAAM2L,EACN1L,QAtGqB,WACzB2L,GAAe,EACjB,EAqGM/L,MAAM,SACNC,QAAQ,+BACRC,QACE,SAACa,EAAA,EAAM,CAACC,QAAQ,YAAYC,MAAM,QAAQC,QAAS2P,EAAY,wBAOzE,C,0BC5Ee,SAAS8B,EAAiB,GAc9B,IAbT1E,EAAU,EAAVA,WACA7C,EAAU,EAAVA,WACAE,EAAU,EAAVA,WACA0E,EAAW,EAAXA,YACAxE,EAAU,EAAVA,WACAyE,EAAW,EAAXA,YACAvE,EAAU,EAAVA,WACAwE,EAAW,EAAXA,YACAC,EAAY,EAAZA,aACAG,EAAY,EAAZA,aACAC,EAAY,EAAZA,aACAE,EAAa,EAAbA,cACAD,EAAY,EAAZA,aAEA,OACE,UAACzN,EAAA,EAAK,CACJuB,QAAS,EACT1C,WAAW,SACXoB,UAAW,CACT4P,GAAI,SACJC,GAAI,OAENnS,GAAI,CAAEoP,GAAI,IAAKxF,GAAI,GAAI,WAEvB,SAACwI,EAAA,EAAS,CACRvS,WAAS,EACTwS,QAAM,EACNvJ,MAAM,UACNhC,MAAO8D,EAEP0H,YAAa,CACXC,UAAW,CACTC,WAAY,CACVxS,GAAI,CACFyS,UAAW,QAKnBzS,GAAI,CACFF,SAAU,CAAEqS,GAAI,KAChBtJ,cAAe,cACf,SAEDyG,EAAYzM,KAAI,SAAC6P,EAAQC,GAAC,OACzB,SAACX,EAAA,EAAQ,CAEPlL,MAAO4L,EAAO7R,KACdL,QAAS,SAACoS,GAAC,OAAKhD,EAAagD,EAAEF,EAAO,EACtC1S,GAAI,CACF6S,GAAI,EACJ1P,aAAc,IACdhD,WAAY,QACZ0I,cAAe,cACf,SAED6J,EAAO7R,MAVH8R,EAWI,OAIf,SAACP,EAAA,EAAS,CACRvS,WAAS,EACTwS,QAAM,EACNvJ,MAAM,WACNhC,MAAOgE,EACPwH,YAAa,CACXC,UAAW,CACTC,WAAY,CACVxS,GAAI,CACFyS,UAAW,QAKnBzS,GAAI,CACFF,SAAU,CAAEqS,GAAI,KAChBtJ,cAAe,cACf,SAED0G,EAAY1M,KAAI,SAAC6P,GAAM,OACtB,SAACV,EAAA,EAAQ,CAEPlL,MAAO4L,EAAO7R,KACdL,QAAS,SAACoS,GAAC,OAAK/C,EAAa+C,EAAGF,EAAO,EACvC1S,GAAI,CACF6S,GAAI,EACJ1P,aAAc,IACdhD,WAAY,QACZ0I,cAAe,cACf,SAED6J,EAAO7R,MAVH6R,EAAO3M,GAWH,OAIf,SAACqM,EAAA,EAAS,CACRvS,WAAS,EACTwS,QAAM,EACNvJ,MAAM,YACNhC,MAAOkE,EACPsH,YAAa,CACXC,UAAW,CACTC,WAAY,CACVxS,GAAI,CACFyS,UAAW,QAKnBzS,GAAI,CACFF,SAAU,CAAEqS,GAAI,KAChBtJ,cAAe,cACf,SAED2G,EAAY3M,KAAI,SAAC6P,GAAM,OACtB,SAACV,EAAA,EAAQ,CAEPlL,MAAO4L,EAAO7R,KACdL,QAAS,SAACoS,GAAC,OAAK9C,EAAa8C,EAAEF,EAAO,EACtC1S,GAAI,CACF6S,GAAI,EACJ1P,aAAc,IACdhD,WAAY,QACZ0I,cAAe,cACf,SAED6J,EAAO7R,MAVH6R,EAAO3M,GAWH,OAIf,SAACqM,EAAA,EAAS,CACRvS,WAAS,EACTiH,MAAO4D,EACPrC,SAAUoH,EACVqD,YAAY,YACZC,WAAY,CACVC,gBACE,SAACC,EAAA,EAAc,CAACtL,SAAS,QAAO,UAC9B,SAAC,IAAO,CAAC5G,KAAK,kBAAkBf,GAAI,CAAEO,MAAO,wBAMpDgN,IACC,SAAClN,EAAA,EAAM,CACLE,MAAM,QACNP,GAAI,CAAE8C,WAAY,GAClBtC,QAASuP,EACTb,WAAW,SAAC,IAAO,CAACnO,KAAK,wBAAyB,qBAO5D,C","sources":["components/confirm-dialog/ConfirmDialog.tsx","components/custom-breadcrumbs/LinkItem.tsx","components/custom-breadcrumbs/CustomBreadcrumbs.tsx","components/empty-content/EmptyContent.tsx","components/table/utils.ts","components/table/useTable.ts","components/table/TableNoData.tsx","components/table/TableEmptyRows.tsx","components/table/TableHeadCustom.tsx","components/table/TableSelectedAction.tsx","components/table/TablePaginationCustom.tsx","pages/dashboard/Appointment/AppointmentListPage.tsx","sections/@dashboard/appointment/list/UserTableRow.tsx","sections/@dashboard/appointment/list/UserTableToolbar.tsx"],"sourcesContent":["// @mui\nimport { Dialog, Button, DialogTitle, DialogActions, DialogContent } from '@mui/material';\n//\nimport { ConfirmDialogProps } from './types';\n\n// ----------------------------------------------------------------------\n\nexport default function ConfirmDialog({\n  title,\n  content,\n  action,\n  open,\n  onClose,\n  ...other\n}: ConfirmDialogProps) {\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose} {...other}>\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\n\n      {content && <DialogContent sx={{ typography: 'body2' }}> {content} </DialogContent>}\n\n      <DialogActions>\n        {action}\n\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link } from '@mui/material';\n//\nimport { BreadcrumbsLinkProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  link: BreadcrumbsLinkProps;\n  activeLast?: boolean;\n  disabled: boolean;\n};\n\nexport default function BreadcrumbsLink({ link, activeLast, disabled }: Props) {\n  const { name, href, icon } = link;\n\n  const styles = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    color: 'text.primary',\n    ...(disabled &&\n      !activeLast && {\n        cursor: 'default',\n        pointerEvents: 'none',\n        color: 'text.disabled',\n      }),\n  };\n\n  const renderContent = (\n    <>\n      {icon && (\n        <Box\n          component=\"span\"\n          sx={{\n            mr: 1,\n            display: 'inherit',\n            '& svg': { width: 20, height: 20 },\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n\n      {name}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link component={RouterLink} to={href} sx={styles}>\n        {renderContent}\n      </Link>\n    );\n  }\n\n  return <Box sx={styles}> {renderContent} </Box>;\n}\n","// @mui\nimport { Box, Link, Stack, Typography, Breadcrumbs } from '@mui/material';\n//\nimport { CustomBreadcrumbsProps } from './types';\nimport LinkItem from './LinkItem';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink,\n  activeLast,\n  sx,\n  ...other\n}: CustomBreadcrumbsProps) {\n  const lastLink = links[links.length - 1].name;\n\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          {/* HEADING */}\n          {heading && (\n            <Typography variant=\"h4\" gutterBottom>\n              {heading}\n            </Typography>\n          )}\n\n          {/* BREADCRUMBS */}\n          {!!links.length && (\n            <Breadcrumbs separator={<Separator />} {...other}>\n              {links.map((link) => (\n                <LinkItem\n                  key={link.name || ''}\n                  link={link}\n                  activeLast={activeLast}\n                  disabled={link.name === lastLink}\n                />\n              ))}\n            </Breadcrumbs>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\n      </Stack>\n\n      {/* MORE LINK */}\n      {!!moreLink && (\n        <Box sx={{ mt: 2 }}>\n          {moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Separator() {\n  return (\n    <Box\n      component=\"span\"\n      sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\n    />\n  );\n}\n","// @mui\nimport { Typography, Stack, StackProps } from '@mui/material';\n//\nimport Image from '../image';\n\n// ----------------------------------------------------------------------\n\ninterface EmptyContentProps extends StackProps {\n  title: string;\n  img?: string;\n  description?: string;\n}\n\nexport default function EmptyContent({ title, description, img, sx, ...other }: EmptyContentProps) {\n  return (\n    <Stack\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      sx={{\n        height: 1,\n        textAlign: 'center',\n        p: (theme) => theme.spacing(8, 2),\n        ...sx,\n      }}\n      {...other}\n    >\n      <Image\n        disabledEffect\n        alt=\"empty content\"\n        src={img || '/assets/illustrations/illustration_empty_content.svg'}\n        sx={{ height: 240, mb: 3 }}\n      />\n\n      <Typography variant=\"h5\" gutterBottom>\n        {title}\n      </Typography>\n\n      {description && (\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n          {description}\n        </Typography>\n      )}\n    </Stack>\n  );\n}\n","// ----------------------------------------------------------------------\n\nexport function emptyRows(page: number, rowsPerPage: number, arrayLength: number) {\n  return page > 0 ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function getComparator<Key extends keyof any>(\n  order: 'asc' | 'desc',\n  orderBy: Key\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n","import { useState, useCallback } from 'react';\n//\nimport { TableProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype ReturnType = TableProps;\n\nexport type UseTableProps = {\n  defaultDense?: boolean;\n  defaultOrder?: 'asc' | 'desc';\n  defaultOrderBy?: string;\n  defaultSelected?: string[];\n  defaultRowsPerPage?: number;\n  defaultCurrentPage?: number;\n};\n\nexport default function useTable(props?: UseTableProps): ReturnType {\n  const [dense, setDense] = useState(!!props?.defaultDense);\n\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\n\n  const [order, setOrder] = useState<'asc' | 'desc'>(props?.defaultOrder || 'asc');\n\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\n\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\n\n  const [selected, setSelected] = useState<string[]>(props?.defaultSelected || []);\n\n  const onSort = useCallback(\n    (id: string) => {\n      const isAsc = orderBy === id && order === 'asc';\n      if (id !== '') {\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(id);\n      }\n    },\n    [order, orderBy]\n  );\n\n  const onSelectRow = useCallback(\n    (id: string) => {\n      const selectedIndex = selected.indexOf(id);\n\n      let newSelected: string[] = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(\n          selected.slice(0, selectedIndex),\n          selected.slice(selectedIndex + 1)\n        );\n      }\n      setSelected(newSelected);\n    },\n    [selected]\n  );\n\n  const onSelectAllRows = useCallback((checked: boolean, newSelecteds: string[]) => {\n    if (checked) {\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  }, []);\n\n  const onChangePage = useCallback((event: unknown, newPage: number) => {\n    setPage(newPage);\n  }, []);\n\n  const onChangeRowsPerPage = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setPage(0);\n    setRowsPerPage(parseInt(event.target.value, 10));\n    console.log('onChangeRowsPerPage Is Here',event.target.value);\n  }, []);\n\n  const onChangeDense = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setDense(event.target.checked);\n  }, []);\n\n  return {\n    dense,\n    order,\n    page,\n    orderBy,\n    rowsPerPage,\n    //\n    selected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangePage,\n    onChangeDense,\n    onChangeRowsPerPage,\n    //\n    setPage,\n    setDense,\n    setOrder,\n    setOrderBy,\n    setSelected,\n    setRowsPerPage,\n  };\n}\n","// @mui\nimport { TableRow, TableCell } from '@mui/material';\n//\nimport EmptyContent from '../empty-content';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  isNotFound: boolean;\n};\n\nexport default function TableNoData({ isNotFound }: Props) {\n  return (\n    <TableRow>\n      {isNotFound ? (\n        <TableCell colSpan={12}>\n          <EmptyContent\n            title=\"No Data\"\n            sx={{\n              '& span.MuiBox-root': { height: 160 },\n            }}\n          />\n        </TableCell>\n      ) : (\n        <TableCell colSpan={12} sx={{ p: 0 }} />\n      )}\n    </TableRow>\n  );\n}\n","// @mui\nimport { TableRow, TableCell } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  height?: number;\n  emptyRows: number;\n};\n\nexport default function TableEmptyRows({ emptyRows, height }: Props) {\n  if (!emptyRows) {\n    return null;\n  }\n\n  return (\n    <TableRow\n      sx={{\n        ...(height && {\n          height: height * emptyRows,\n        }),\n      }}\n    >\n      <TableCell colSpan={9} />\n    </TableRow>\n  );\n}\n","// @mui\nimport { Theme } from '@mui/material/styles';\nimport {\n  Box,\n  SxProps,\n  Checkbox,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableSortLabel,\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst visuallyHidden = {\n  border: 0,\n  margin: -1,\n  padding: 0,\n  width: '1px',\n  height: '1px',\n  overflow: 'hidden',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  clip: 'rect(0 0 0 0)',\n} as const;\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  order?: 'asc' | 'desc';\n  orderBy?: string;\n  headLabel: any[];\n  rowCount?: number;\n  numSelected?: number;\n  onSort?: (id: string) => void;\n  onSelectAllRows?: (checked: boolean) => void;\n  sx?: SxProps<Theme>;\n};\n\nexport default function TableHeadCustom({\n  order,\n  orderBy,\n  rowCount = 0,\n  headLabel,\n  numSelected = 0,\n  onSort,\n  onSelectAllRows,\n  sx,\n}: Props) {\n  return (\n    <TableHead sx={sx}>\n      <TableRow>\n        {onSelectAllRows && (\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                onSelectAllRows(event.target.checked)\n              }\n            />\n          </TableCell>\n        )}\n\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align || 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\n          >\n            {onSort ? (\n              <TableSortLabel\n                hideSortIcon\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={() => onSort(headCell.id)}\n                sx={{ textTransform: 'capitalize' }}\n              >\n                {headCell.label}\n\n                {orderBy === headCell.id ? (\n                  <Box sx={{ ...visuallyHidden }}>\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            ) : (\n              headCell.label\n            )}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","// @mui\nimport { Checkbox, Typography, Stack, StackProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends StackProps {\n  dense?: boolean;\n  action?: React.ReactNode;\n  rowCount: number;\n  numSelected: number;\n  onSelectAllRows: (checked: boolean) => void;\n}\n\nexport default function TableSelectedAction({\n  dense,\n  action,\n  rowCount,\n  numSelected,\n  onSelectAllRows,\n  sx,\n  ...other\n}: Props) {\n  if (!numSelected) {\n    return null;\n  }\n\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        pl: 1,\n        pr: 2,\n        top: 0,\n        left: 0,\n        width: 1,\n        zIndex: 9,\n        height: 58,\n        position: 'absolute',\n        bgcolor: 'primary.lighter',\n        ...(dense && {\n          height: 38,\n        }),\n        ...sx,\n      }}\n      {...other}\n    >\n      <Checkbox\n        indeterminate={numSelected > 0 && numSelected < rowCount}\n        checked={rowCount > 0 && numSelected === rowCount}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n          onSelectAllRows(event.target.checked)\n        }\n      />\n\n      <Typography\n        variant=\"subtitle1\"\n        sx={{\n          ml: 2,\n          flexGrow: 1,\n          color: 'primary.main',\n          ...(dense && {\n            ml: 3,\n          }),\n        }}\n      >\n        {numSelected} sélectionné\n      </Typography>\n\n      {action && action}\n    </Stack>\n  );\n}\n","// @mui\nimport { Theme } from '@mui/material/styles';\nimport {\n  Box,\n  Switch,\n  SxProps,\n  TablePagination,\n  FormControlLabel,\n  TablePaginationProps,\n} from '@mui/material';\n//\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  dense?: boolean;\n  onChangeDense?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  sx?: SxProps<Theme>;\n};\n\nexport default function TablePaginationCustom({\n  dense,\n  onChangeDense,\n  rowsPerPageOptions = [5, 10, 20,25],\n  sx,\n  ...other\n}: Props & TablePaginationProps) {\n  return (\n    <Box sx={{ position: 'relative', ...sx }}>\n      <TablePagination rowsPerPageOptions={rowsPerPageOptions} component=\"div\" {...other} />\n\n      {onChangeDense && (\n        <FormControlLabel\n          label=\"Dense\"\n          control={<Switch checked={dense} onChange={onChangeDense} />}\n          sx={{\n            pl: 2,\n            py: 1.5,\n            top: 0,\n            position: {\n              md: 'absolute',\n            },\n          }}\n        />\n      )}\n    </Box>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\nimport { paramCase } from 'change-case';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// @mui\nimport {\n  Tab,\n  Tabs,\n  Card,\n  Table,\n  Button,\n  Tooltip,\n  Divider,\n  TableBody,\n  Container,\n  IconButton,\n  TableContainer,\n} from '@mui/material';\n// common\nimport { EventInput } from '@fullcalendar/common';\nimport { Appointment, Category, EventPage, Service } from 'src/@types/calendar';\n// routes\nimport { PATH_DASHBOARD } from 'src/routes/paths';\n// @types\nimport { IUserAccountGeneral } from 'src/@types/user';\n// _mock_\nimport { _userList } from 'src/_mock/arrays';\n// components\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\nimport ConfirmDialog from 'src/components/confirm-dialog';\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\nimport { useSettingsContext } from 'src/components/settings';\nimport {\n  useTable,\n  getComparator,\n  emptyRows,\n  TableNoData,\n  TableEmptyRows,\n  TableHeadCustom,\n  TableSelectedAction,\n  TablePaginationCustom,\n} from 'src/components/table';\n// sections\nimport { UserTableToolbar, UserTableRow } from 'src/sections/@dashboard/appointment/list';\n// redux\nimport { useDispatch, useSelector } from 'src/redux/store';\nimport {\n  getEventsPage,\n  createEvent,\n  searchPatients,\n  updateEvent,\n  deleteEvent,\n  selectEvent,\n  selectRange,\n  onOpenModal,\n  onCloseModal,\n  searchEvent,\n  getServices,\n  getCategories,\n  searchActByserviceIdAndCategoryId,\n  searchActs,\n  searchAppointments,\n  getProviders\n} from 'src/redux/slices/calendar';\n\ntype Provider = {\n  id: number,\n  username: string,\n  password: string,\n  name: string,\n  nameAr: string,\n  status: string,\n  userRole: string\n}\n\n// ----------------------------------------------------------------------\nconst STATUS_OPTIONS = [\n  'All', \n  'Scheduled',\n  'Attended',\n  'Cancelled',\n  'Missed'\n];\n\n// const ROLE_OPTIONS = [\n//   'Service 1',\n//   'Service 2',\n//   'Service 3',\n//   'Service 4',\n//   'Service 5'\n// ];\n\n\n// const Type_OPTIONS =[\n//   'Specialist',\n//   'Radiologie',\n//   'Laboratory',\n//   'Surgery'\n// ];\n\n// const Data_OPTIONS =[\n//   'Specialist 1',\n//   'Specialist 2',\n//   'Specialist 3',\n//   'Specialist 4'\n// ]\n\nconst TABLE_HEAD = [\n  { id: 'patient', label: 'Patient', align: 'left' },\n  { id: 'phoneNumber', label: 'Phone Number', align: 'left' },\n  { id: 'price', label: 'Price', align: 'left' },\n  { id: 'date', label: 'Date', align: 'center' },\n  { id: 'service', label: 'Service', align: 'center' },\n  { id: 'status', label: 'Status', align: 'left' },\n  { id: '' },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function AppointmentListPage() {\n  const {\n    dense,\n    page,\n    order,\n    orderBy,\n    rowsPerPage,\n    setPage,\n    //\n    selected,\n    setSelected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangeDense,\n    onChangePage,\n    onChangeRowsPerPage,\n  } = useTable();\n\n  const { themeStretch } = useSettingsContext();\n\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  const [tableData, setTableData] = useState(_userList);\n\n  const [filterName, setFilterName] = useState('');\n  const [filterRole, setFilterRole] = useState('');\n  const [filterType, setFilterType] = useState('');\n  const [filterData, setFilterData] = useState('');\n  const [filterStatus, setFilterStatus] = useState('All');\n  \n  const [openConfirm, setOpenConfirm] = useState(false);\n  const [Data_OPTIONS, setDataOptions] = useState<Array<Provider>>([]);\n  \n  const [ROLE_OPTIONS, setRoleOptions] = useState<Array<Service>>([]);\n\n  const [Type_OPTIONS, setTypeOptions] = useState<Array<Category>>([]);\n\n  const [service, setService] = useState<Service>({\n    id: 0,\n    name: '',\n    subServices: [],\n    team: [],\n    status: ''\n  })\n\n  const [category, setCategory] = useState<Category>({\n    id: 0,\n    name: '',\n    subCategories: []\n  })\n\n  const [provider, setProvider] = useState<Provider>({\n    id: 0,\n    username: '',\n    password: '',\n    name: '',\n    nameAr: '',\n    status: '',\n    userRole: ''\n  })\n\n  const { eventsPage, openModal, selectedRange, selectedEventId } = useSelector(\n    (state) => state.calendar\n  );\n\n  const dataFiltered = applyFilter({\n    inputData: eventsPage,\n    comparator: getComparator(order, orderBy),\n    filterName,\n    filterRole,\n    filterStatus,\n  });\n\n  // const dataInPage = dataFiltered.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n  const dataInPage = dataFiltered.content;\n\n  const denseHeight = dense ? 52 : 72;\n\n  const isFiltered = filterName !== '' || filterRole !== 'All' || filterStatus !== 'All';\n\n  const isNotFound =\n  (!dataFiltered.content.length)\n    // (!dataFiltered.content.length && !!filterName) ||\n    // (!dataFiltered.content.length && !!filterRole) ||\n    // (!dataFiltered.content.length && !!filterStatus);\n\n    const getAllServices = useCallback( async () => {\n      try{\n        const data = await dispatch(getServices());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        setRoleOptions([...data])\n      } catch(err){\n        console.log(err)\n      }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const getAllCategories = useCallback( async () => {\n      try{\n        const data = await dispatch(getCategories());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        setTypeOptions([...data])\n      } catch(err){\n        console.log(err)\n      }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const getAllProviders = useCallback( async () =>{\n      try{\n        const data = await handlegetProviders();\n        setDataOptions([...data])\n      } catch(err){\n        console.log(err)\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    \n    useEffect(() => {\n      dispatch(getEventsPage({status: 'All'}));\n      console.log(eventsPage)\n      // dispatch(getAllServices());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n      getAllServices()\n      getAllCategories()\n      getAllProviders()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[]);\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  \n  const handleSearchAppointment = (search: string) => dispatch(searchAppointments(search, 5));\n  const handleSearchPatient = (search: string) => dispatch(searchPatients(search));\n  const handlegetCategoriesByServiceId = (serviceId: number) => dispatch(getCategories(serviceId));\n  const handlegetProviders = () => dispatch(getProviders())\n\n  const handleFilterStatus = (event: React.SyntheticEvent<Element, Event>, newValue: string) => {\n    dispatch(getEventsPage({status:newValue}));\n    setFilterStatus(newValue);\n  };\n\n  const handleFilterName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let reload = true\n    if(event.target.value !== ''){\n      reload = true\n      handleSearchPatient(event.target.value)\n      setFilterName(event.target.value);\n      setFilterType('')\n      setFilterRole('')\n      setFilterData('')\n      handleSearchAppointment(event.target.value)\n    } else if(reload === true && event.target.value === '') {\n      setFilterName(event.target.value);\n      dispatch(getEventsPage({status: 'All'}))\n      reload = false\n    }\n  };\n\n  const handleFilterType = async (event: React.MouseEvent<Element>, c:Category) => {\n    setFilterType(c.name);\n    setCategory(c)\n    const d = new Date();\n    // const from = new Date(d.getFullYear(), d.getMonth()+1, 1).toISOString();\n    // const to = new Date(d.getFullYear(), d.getMonth()+2, 0).toISOString();\n    dispatch(getEventsPage({serviceId: service.id, categoryId: c.id, providerId: provider.id}));\n  };\n\n  const handleFilterRole = async (event: React.MouseEvent<Element>, s:Service) => {\n    // setPage(0);\n    handleSearchPatient(s.name)\n    setFilterRole(s.name);\n    setService(s)\n    const data = await handlegetCategoriesByServiceId(s.id);\n    setTypeOptions([...data])\n    const d = new Date();\n    // const from = new Date(d.getFullYear(), d.getMonth()+1, 1).toISOString();\n    // const to = new Date(d.getFullYear(), d.getMonth()+2, 0).toISOString();\n    dispatch(getEventsPage({serviceId:s.id, categoryId: category.id, providerId: provider.id}));\n    console.log(Type_OPTIONS);\n  };\n\n  const handleFilterData = (event: React.MouseEvent<Element>, p: Provider) => {\n    // setPage(0);\n    setFilterData(p.name);\n    setProvider(p)\n    const d = new Date();\n    // const from = new Date(d.getFullYear(), d.getMonth()+1, 1).toISOString();\n    // const to = new Date(d.getFullYear(), d.getMonth()+2, 0).toISOString();\n    dispatch(getEventsPage({serviceId: service.id, categoryId: category.id, providerId: p.id}));\n  };\n\n  const handleDeleteRow = async (id: string) => {\n    try {\n      dispatch(deleteEvent(id));\n      dispatch(getEventsPage({status: 'All'}))\n    } catch (error) {\n      console.error(error);\n    }\n    // const deleteRow = tableData.filter((row) => row.id !== id);\n    // setSelected([]);\n    // setTableData(deleteRow);\n\n    // if (page > 0) {\n    //   if (dataInPage.length < 2) {\n    //     setPage(page - 1);\n    //   }\n    // }\n  };\n\n  const handleDeleteRows = (selectedRows: string[]) => {\n    const deleteRows = tableData.filter((row) => !selectedRows.includes(row.id));\n    setSelected([]);\n    setTableData(deleteRows);\n\n    if (page > 0) {\n      if (selectedRows.length === dataInPage.length) {\n        setPage(page - 1);\n      } else if (selectedRows.length === dataFiltered.content.length) {\n        setPage(0);\n      } else if (selectedRows.length > dataInPage.length) {\n        const newPage = Math.ceil((tableData.length - selectedRows.length) / rowsPerPage) - 1;\n        setPage(newPage);\n      }\n    }\n  };\n\n  const handleEditRow = (id: string) => {\n    navigate(PATH_DASHBOARD.user.edit(paramCase(id)));\n  };\n\n  const handleResetFilter = () => {\n    setFilterName('');\n    setFilterRole('');\n    setFilterStatus('All');\n    setFilterType('');\n    setFilterData('');\n    setService({\n      id: 0,\n      name: '',\n      subServices: [],\n      team: [],\n      status: ''\n    })\n\n    setCategory({\n      id: 0,\n      name: '',\n      subCategories: []\n    })\n\n    setProvider(({\n      id: 0,\n      username: '',\n      password: '',\n      name: '',\n      nameAr: '',\n      status: '',\n      userRole: ''\n    }))\n\n    getAllServices()\n    getAllCategories()\n    getAllProviders()\n\n    if(filterStatus !== 'All' || filterRole !== '' || filterName !== '' || filterType !== '' || filterData !== '')\n    dispatch(getEventsPage({status: 'All'}))\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title> Appointment List | Yata Medical</title>\n      </Helmet>\n\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <CustomBreadcrumbs\n          heading=\"Appointment List\"\n          links={[\n            { name: 'Appointment', href: PATH_DASHBOARD.root },\n            { name: 'Appointment List' },\n          ]}\n          action={\n            <Button\n              component={RouterLink}\n              to={PATH_DASHBOARD.user.new}\n              variant=\"contained\"\n              startIcon={<Iconify icon=\"eva:plus-fill\" />}\n            >\n              New Appointment\n            </Button>\n          }\n        />\n\n        <Card>\n          <Tabs\n            value={filterStatus}\n            onChange={handleFilterStatus}\n            sx={{\n              px: 2,\n              bgcolor: 'background.neutral',\n            }}\n          >\n            {STATUS_OPTIONS.map((tab) => (\n              <Tab key={tab} label={tab} value={tab} />\n            ))}\n          </Tabs>\n\n          <Divider />\n\n          <UserTableToolbar\n            isFiltered={isFiltered}\n            filterName={filterName}\n            filterRole={filterRole}\n            filterType={filterType}\n            filterData={filterData}\n            optionsRole={ROLE_OPTIONS}\n            optionsType={Type_OPTIONS}\n            optionsData={Data_OPTIONS}\n            onFilterName={handleFilterName}\n            onFilterRole={handleFilterRole}\n            onFilterType={handleFilterType}\n            onFilterData={handleFilterData}\n            onResetFilter={handleResetFilter}\n          />\n\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\n            <TableSelectedAction\n              dense={dense}\n              numSelected={selected.length}\n              rowCount={tableData.length}\n              onSelectAllRows={(checked) =>\n                onSelectAllRows(\n                  checked,\n                  tableData.map((row) => row.id)\n                )\n              }\n              action={\n                <Tooltip title=\"Delete\">\n                  <IconButton color=\"primary\" onClick={handleOpenConfirm}>\n                    <Iconify icon=\"eva:trash-2-outline\" />\n                  </IconButton>\n                </Tooltip>\n              }\n            />\n\n            <Scrollbar>\n              <Table size={dense ? 'small' : 'medium'} sx={{ minWidth: 800 }}>\n                <TableHeadCustom\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={tableData.length}\n                  numSelected={selected.length}\n                  onSort={onSort}\n                  onSelectAllRows={(checked) =>\n                    onSelectAllRows(\n                      checked,\n                      dataFiltered.content.map((row) => row.id)\n                    )\n                  }\n                />\n\n                <TableBody>\n                  {dataFiltered.content\n                    .map((row: Appointment) => (\n                      <UserTableRow\n                        key={row.id}\n                        row={row}\n                        selected={selected.includes(row.id)}\n                        onSelectRow={() => onSelectRow(row.id)}\n                        onDeleteRow={() => handleDeleteRow(row.id)}\n                        onEditRow={() => handleEditRow(row.patient.fullName)}\n                      />\n                    ))}\n\n                  <TableEmptyRows\n                    height={denseHeight}\n                    emptyRows={emptyRows(page, rowsPerPage, tableData.length)}\n                  />\n\n                  <TableNoData isNotFound={isNotFound} />\n                </TableBody>\n              </Table>\n            </Scrollbar>\n          </TableContainer>\n\n          <TablePaginationCustom\n            count={dataFiltered.totalElements}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            onPageChange={onChangePage}\n            onRowsPerPageChange={onChangeRowsPerPage}\n            //\n            dense={dense}\n            onChangeDense={onChangeDense}\n          />\n        </Card>\n      </Container>\n\n      <ConfirmDialog\n        open={openConfirm}\n        onClose={handleCloseConfirm}\n        title=\"Delete\"\n        content={\n          <>\n            Are you sure want to delete <strong> {selected.length} </strong> items?\n          </>\n        }\n        action={\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            onClick={() => {\n              handleDeleteRows(selected);\n              handleCloseConfirm();\n            }}\n          >\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction applyFilter({\n  inputData,\n  comparator,\n  filterName,\n  filterStatus,\n  filterRole,\n}: {\n  // inputData: IUserAccountGeneral[];\n  inputData: EventPage;\n  comparator: (a: any, b: any) => number;\n  filterName: string;\n  filterStatus: string;\n  filterRole: string;\n}) {\n  // const stabilizedThis = inputData.map((el: any, index: any) => [el, index] as const);\n\n  // stabilizedThis.sort((a: number[], b: number[]) => {\n  //   const order = comparator(a[0], b[0]);\n  //   if (order !== 0) return order;\n  //   return a[1] - b[1];\n  // });\n\n  // inputData = stabilizedThis.map((el: any[]) => el[0]);\n\n  // if (filterName) {\n  //   inputData = inputData.filter(\n  //     (user: { name: string; }) => user.name.toLowerCase().indexOf(filterName.toLowerCase()) !== -1\n  //   );\n  // }\n\n  // if (filterStatus !== 'all') {\n  //   inputData = inputData.filter((user: { status: string; }) => user.status === filterStatus);\n  // }\n\n  // if (filterRole !== 'all') {\n  //   inputData = inputData.filter((user: { role: string; }) => user.role === filterRole);\n  // }\n\n  return inputData;\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  MenuItem,\n  TableCell,\n  IconButton,\n  Typography,\n} from '@mui/material';\n// common\nimport { EventInput } from '@fullcalendar/common';\nimport { Appointment } from 'src/@types/calendar';\n// @types\nimport { IUserAccountGeneral } from '../../../../@types/user';\n// components\nimport Label from '../../../../components/label';\nimport Iconify from '../../../../components/iconify';\nimport MenuPopover from '../../../../components/menu-popover';\nimport ConfirmDialog from '../../../../components/confirm-dialog';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  // row: IUserAccountGeneral;\n  row: Appointment;\n  selected: boolean;\n  onEditRow: VoidFunction;\n  onSelectRow: VoidFunction;\n  onDeleteRow: VoidFunction;\n};\n\nexport default function UserTableRow({\n  row,\n  selected,\n  onEditRow,\n  onSelectRow,\n  onDeleteRow,\n}: Props) {\n  // const { name, avatarUrl, company, role, isVerified, status } = row;\n\n  \n  // const { content, size, number} = row;\n\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  const [openPopover, setOpenPopover] = useState<HTMLElement | null>(null);\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const handleOpenPopover = (event: React.MouseEvent<HTMLElement>) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  return (\n    <>\n      <TableRow hover selected={selected}>\n        <TableCell padding=\"checkbox\">\n          <Checkbox checked={selected} onClick={onSelectRow} />\n        </TableCell>\n\n        <TableCell>\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n            {/* <Avatar alt={name} src={avatarUrl} /> */}\n\n            <Typography variant=\"subtitle2\" noWrap>\n              {row.patient.fullName}\n            </Typography>\n          </Stack>\n        </TableCell>\n\n        <TableCell align=\"left\">{row.patient.phoneNumber}</TableCell>\n\n        <TableCell align=\"left\" sx={{ textTransform: 'capitalize' }}>\n          {row.selectedFee.price}\n        </TableCell>\n\n        {/* <TableCell align=\"center\">\n           <Iconify\n            icon={isVerified ? 'eva:checkmark-circle-fill' : 'eva:clock-outline'}\n            sx={{\n              width: 20,\n              height: 20,\n              color: 'success.main',\n              ...(!isVerified && { color: 'warning.main' }),\n            }}\n          /> \n        </TableCell> */}\n\n        <TableCell align=\"left\">\n            {row.date}\n        </TableCell>\n\n        <TableCell align=\"left\">\n            {row.selectedFee.fee.service.name}\n        </TableCell>\n\n        <TableCell align=\"left\">\n          <Label\n            variant=\"soft\"\n            // color={(status === 'banned' && 'error') || 'success'}\n            sx={{ textTransform: 'capitalize' }}\n          >\n            {row.status}\n          </Label>\n        </TableCell>\n\n        <TableCell align=\"right\">\n          <IconButton color={openPopover ? 'inherit' : 'default'} onClick={handleOpenPopover}>\n            <Iconify icon=\"eva:more-vertical-fill\" />\n          </IconButton>\n        </TableCell>\n      </TableRow>\n\n      <MenuPopover\n        open={openPopover}\n        onClose={handleClosePopover}\n        arrow=\"right-top\"\n        sx={{ width: 140 }}\n      >\n        <MenuItem\n          onClick={() => {\n            handleOpenConfirm();\n            handleClosePopover();\n          }}\n          sx={{ color: 'error.main' }}\n        >\n          <Iconify icon=\"eva:trash-2-outline\" />\n          Delete\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            onEditRow();\n            handleClosePopover();\n          }}\n        >\n          <Iconify icon=\"eva:edit-fill\" />\n          Edit\n        </MenuItem>\n      </MenuPopover>\n\n      <ConfirmDialog\n        open={openConfirm}\n        onClose={handleCloseConfirm}\n        title=\"Delete\"\n        content=\"Are you sure want to delete?\"\n        action={\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","// @mui\nimport { Stack, InputAdornment, TextField, MenuItem, Button } from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  filterName: string;\n  filterRole: string;\n  filterType: string;\n  filterData: string;\n  optionsType: Array<Category>;\n  isFiltered: boolean;\n  optionsRole: Array<Service>;\n  optionsData: Array<Provider>;\n  onResetFilter: VoidFunction;\n  onFilterName: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onFilterRole: (event: React.MouseEvent<Element>,s: Service) => void;\n  onFilterType: (event: React.MouseEvent<Element>,c: Category) => void;\n  onFilterData: (event: React.MouseEvent<Element>, p: Provider) => void;\n};\n\ntype Patient = {\n  age: string,\n  birthDate: string,\n  doctors: [],\n  fullName: string,\n  gender: string,\n  id: number,\n  identification: string,\n  lastUpdate: string,\n  phoneNumber: string,\n  title?: string,\n};\n\ntype Service = {\n  id: number,\n  name: string,\n  subServices: [],\n  team: [],\n  status: string\n}\n\ntype Category = {\n  id: number,\n  name: string,\n  subCategories: [],\n}\n\ntype Act = {\n  id: number,\n  name: string,\n  service: Service,\n  reference: string,\n  defaultPrice: number,\n  basePrice: number,\n  type: string,\n  category: Category,\n  providers: [\n    {\n      id: number,\n      user: {\n          id: number,\n          username: string,\n          name: string,\n          nameAr: string,\n          status: string,\n          userRole: string\n      },\n      basePrice: number,\n      priceVariations: [\n          {\n              id: number,\n              name: string,\n              price: number\n          }\n      ]\n    }\n  ]\n}\n\ntype Provider = {\n  id: number,\n  username: string,\n  password: string,\n  name: string,\n  nameAr: string,\n  status: string,\n  userRole: string\n}\n\nexport default function UserTableToolbar({\n  isFiltered,\n  filterName,\n  filterRole,\n  optionsRole,\n  filterType,\n  optionsType,\n  filterData,\n  optionsData,\n  onFilterName,\n  onFilterRole,\n  onFilterType,\n  onResetFilter,\n  onFilterData\n}: Props) {\n  return (\n    <Stack\n      spacing={2}\n      alignItems=\"center\"\n      direction={{\n        xs: 'column',\n        sm: 'row',\n      }}\n      sx={{ px: 2.5, py: 3 }}\n    >\n      <TextField\n        fullWidth\n        select\n        label=\"Service\"\n        value={filterRole}\n        // onChange={}\n        SelectProps={{\n          MenuProps: {\n            PaperProps: {\n              sx: {\n                maxHeight: 260,\n              },\n            },\n          },\n        }}\n        sx={{\n          maxWidth: { sm: 240 },\n          textTransform: 'capitalize',\n        }}\n      >\n        {optionsRole.map((option, i) => (\n          <MenuItem\n            key={i}\n            value={option.name}\n            onClick={(e) => onFilterRole(e,option)}\n            sx={{\n              mx: 1,\n              borderRadius: 0.75,\n              typography: 'body2',\n              textTransform: 'capitalize',\n            }}\n          >\n            {option.name}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      <TextField\n        fullWidth\n        select\n        label=\"Category\"\n        value={filterType}\n        SelectProps={{\n          MenuProps: {\n            PaperProps: {\n              sx: {\n                maxHeight: 260,\n              },\n            },\n          },\n        }}\n        sx={{\n          maxWidth: { sm: 240 },\n          textTransform: 'capitalize',\n        }}\n      >\n        {optionsType.map((option) => (\n          <MenuItem\n            key={option.id}\n            value={option.name}\n            onClick={(e) => onFilterType(e, option)}\n            sx={{\n              mx: 1,\n              borderRadius: 0.75,\n              typography: 'body2',\n              textTransform: 'capitalize',\n            }}\n          >\n            {option.name}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      <TextField\n        fullWidth\n        select\n        label='Providers'\n        value={filterData}\n        SelectProps={{\n          MenuProps: {\n            PaperProps: {\n              sx: {\n                maxHeight: 260,\n              },\n            },\n          },\n        }}\n        sx={{\n          maxWidth: { sm: 240 },\n          textTransform: 'capitalize',\n        }}\n      >\n        {optionsData.map((option) => (\n          <MenuItem\n            key={option.id}\n            value={option.name}\n            onClick={(e) => onFilterData(e,option)}\n            sx={{\n              mx: 1,\n              borderRadius: 0.75,\n              typography: 'body2',\n              textTransform: 'capitalize',\n            }}\n          >\n            {option.name}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      <TextField\n        fullWidth\n        value={filterName}\n        onChange={onFilterName}\n        placeholder=\"Search...\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      {isFiltered && (\n        <Button\n          color=\"error\"\n          sx={{ flexShrink: 0 }}\n          onClick={onResetFilter}\n          startIcon={<Iconify icon=\"eva:trash-2-outline\" />}\n        >\n          Clear\n        </Button>\n      )}\n    </Stack>\n  );\n}\n"],"names":["ConfirmDialog","title","content","action","open","onClose","other","Dialog","fullWidth","maxWidth","DialogTitle","sx","pb","DialogContent","typography","DialogActions","Button","variant","color","onClick","BreadcrumbsLink","link","activeLast","disabled","name","href","icon","styles","display","alignItems","cursor","pointerEvents","renderContent","Box","component","mr","width","height","Link","RouterLink","to","CustomBreadcrumbs","links","heading","moreLink","lastLink","length","mb","Stack","direction","flexGrow","Typography","gutterBottom","Breadcrumbs","separator","Separator","map","flexShrink","mt","noWrap","target","rel","borderRadius","bgcolor","EmptyContent","description","img","justifyContent","textAlign","p","theme","spacing","disabledEffect","alt","src","emptyRows","page","rowsPerPage","arrayLength","Math","max","descendingComparator","a","b","orderBy","getComparator","order","useTable","props","useState","defaultDense","dense","setDense","defaultOrderBy","setOrderBy","defaultOrder","setOrder","defaultCurrentPage","setPage","defaultRowsPerPage","setRowsPerPage","defaultSelected","selected","setSelected","onSort","useCallback","id","onSelectRow","selectedIndex","indexOf","newSelected","concat","slice","onSelectAllRows","checked","newSelecteds","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","value","console","log","onChangeDense","TableNoData","isNotFound","colSpan","TableEmptyRows","visuallyHidden","border","margin","padding","overflow","position","whiteSpace","clip","TableHeadCustom","rowCount","headLabel","numSelected","TableHead","Checkbox","indeterminate","onChange","headCell","align","sortDirection","minWidth","TableSortLabel","hideSortIcon","active","textTransform","label","TableSelectedAction","pl","pr","top","left","zIndex","ml","TablePaginationCustom","rowsPerPageOptions","TablePagination","FormControlLabel","control","Switch","py","md","STATUS_OPTIONS","TABLE_HEAD","AppointmentListPage","themeStretch","useSettingsContext","navigate","useNavigate","dispatch","useDispatch","_userList","tableData","setTableData","filterName","setFilterName","filterRole","setFilterRole","filterType","setFilterType","filterData","setFilterData","filterStatus","setFilterStatus","openConfirm","setOpenConfirm","Data_OPTIONS","setDataOptions","ROLE_OPTIONS","setRoleOptions","Type_OPTIONS","setTypeOptions","subServices","team","status","service","setService","subCategories","category","setCategory","username","password","nameAr","userRole","provider","setProvider","useSelector","state","calendar","eventsPage","dataFiltered","openModal","selectedRange","selectedEventId","inputData","comparator","applyFilter","dataInPage","denseHeight","isFiltered","getAllServices","getServices","data","getAllCategories","getCategories","getAllProviders","handlegetProviders","useEffect","getEventsPage","handleCloseConfirm","handleSearchPatient","search","searchPatients","getProviders","handleFilterType","c","Date","serviceId","categoryId","providerId","handleFilterRole","s","handleDeleteRow","deleteEvent","error","PATH_DASHBOARD","startIcon","newValue","px","tab","optionsRole","optionsType","optionsData","onFilterName","reload","searchAppointments","onFilterRole","onFilterType","onFilterData","onResetFilter","row","size","includes","onDeleteRow","onEditRow","patient","fullName","paramCase","count","totalElements","onPageChange","onRowsPerPageChange","selectedRows","deleteRows","filter","ceil","handleDeleteRows","UserTableRow","openPopover","setOpenPopover","handleClosePopover","TableRow","hover","TableCell","phoneNumber","selectedFee","price","date","fee","IconButton","currentTarget","arrow","MenuItem","UserTableToolbar","xs","sm","TextField","select","SelectProps","MenuProps","PaperProps","maxHeight","option","i","e","mx","placeholder","InputProps","startAdornment","InputAdornment"],"sourceRoot":""}