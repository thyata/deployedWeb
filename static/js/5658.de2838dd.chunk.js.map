{"version":3,"file":"static/js/5658.de2838dd.chunk.js","mappings":"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","sources":["components/color-utils/ColorPreview.tsx","components/color-utils/Icon.tsx","components/color-utils/ColorMultiPicker.tsx","components/color-utils/ColorSinglePicker.tsx","components/confirm-dialog/ConfirmDialog.tsx","components/custom-breadcrumbs/LinkItem.tsx","components/custom-breadcrumbs/CustomBreadcrumbs.tsx","components/date-range-picker/useDateRangePicker.ts","components/date-range-picker/DateRangePicker.tsx","sections/@dashboard/calendar/styles.tsx","sections/@dashboard/calendar/CalendarForm.tsx","sections/@dashboard/calendar/CalendarToolbar.tsx","sections/@dashboard/calendar/CalendarFilterDrawer.tsx","pages/dashboard/Calendar/CalendarPage.tsx","sections/@dashboard/appointment/list/UserTableRow.tsx","sections/@dashboard/appointment/list/UserTableToolbar.tsx"],"sourcesContent":["// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Box, Typography, Stack } from '@mui/material';\n//\nimport { ColorPreviewProps } from './types';\n\n// ----------------------------------------------------------------------\n\nexport default function ColorPreview({ colors, limit = 3, sx }: ColorPreviewProps) {\n  const showColor = colors.slice(0, limit);\n\n  const moreColor = colors.length - limit;\n\n  return (\n    <Stack component=\"span\" direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\" sx={sx}>\n      {showColor.map((color, index) => (\n        <Box\n          key={color + index}\n          sx={{\n            ml: -0.75,\n            width: 16,\n            height: 16,\n            borderRadius: '50%',\n            border: (theme) => `solid 2px ${theme.palette.background.paper}`,\n            boxShadow: (theme) => `inset -1px 1px 2px ${alpha(theme.palette.common.black, 0.24)}`,\n            bgcolor: color,\n          }}\n        />\n      ))}\n\n      {colors.length > limit && <Typography variant=\"subtitle2\">{`+${moreColor}`}</Typography>}\n    </Stack>\n  );\n}\n","// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n//\nimport Iconify from '../iconify';\n//\nimport { ColorIconProps } from './types';\n\n// ----------------------------------------------------------------------\n\nexport default function Icon({ checked, whiteColor, sx, ...other }: ColorIconProps) {\n  const shadow = (\n    <Box\n      sx={{\n        width: 1,\n        height: 1,\n        opacity: 0.48,\n        borderRadius: '50%',\n        position: 'absolute',\n        boxShadow: '4px 4px 8px 0 currentColor',\n      }}\n    />\n  );\n\n  const icon = (\n    <Iconify\n      icon=\"eva:checkmark-fill\"\n      sx={{\n        opacity: 0,\n        ...(checked && {\n          opacity: 1,\n          color: 'common.white',\n          ...(whiteColor && {\n            color: 'common.black',\n          }),\n        }),\n      }}\n    />\n  );\n\n  return (\n    <Box\n      sx={{\n        width: 20,\n        height: 20,\n        display: 'flex',\n        borderRadius: '50%',\n        position: 'relative',\n        alignItems: 'center',\n        justifyContent: 'center',\n        bgcolor: 'currentColor',\n        transition: (theme) =>\n          theme.transitions.create('all', {\n            duration: theme.transitions.duration.shortest,\n          }),\n        ...(whiteColor && {\n          border: (theme) => `solid 1px ${theme.palette.divider}`,\n          boxShadow: (theme) => `4px 4px 8px 0 ${alpha(theme.palette.grey[500], 0.24)}`,\n        }),\n        ...(checked && {\n          transform: 'scale(1.4)',\n        }),\n        ...sx,\n      }}\n      {...other}\n    >\n      {checked && shadow}\n\n      {icon}\n    </Box>\n  );\n}\n","// @mui\nimport { Box, Checkbox } from '@mui/material';\n//\nimport Icon from './Icon';\nimport { ColorMultiPickerProps } from './types';\n\n// ----------------------------------------------------------------------\n\nexport default function ColorMultiPicker({\n  colors,\n  selected,\n  onChangeColor,\n  sx,\n  ...other\n}: ColorMultiPickerProps) {\n  return (\n    <Box sx={sx}>\n      {colors.map((color) => {\n        const whiteColor = color === '#FFFFFF' || color === 'white';\n\n        return (\n          <Checkbox\n            key={color}\n            size=\"small\"\n            value={color}\n            color=\"default\"\n            checked={selected.includes(color)}\n            onChange={() => onChangeColor(color)}\n            icon={<Icon whiteColor={whiteColor} />}\n            checkedIcon={<Icon checked whiteColor={whiteColor} />}\n            sx={{\n              color,\n              '&:hover': { opacity: 0.72 },\n              '& svg': { width: 12, height: 12 },\n            }}\n            {...other}\n          />\n        );\n      })}\n    </Box>\n  );\n}\n","import { forwardRef } from 'react';\n// @mui\nimport { Radio, RadioGroup } from '@mui/material';\n//\nimport Icon from './Icon';\nimport { ColorSinglePickerProps } from './types';\n\n// ----------------------------------------------------------------------\n\nconst ColorSinglePicker = forwardRef<HTMLDivElement, ColorSinglePickerProps>(\n  ({ colors, ...other }, ref) => (\n    <RadioGroup row ref={ref} {...other}>\n      {colors.map((color) => {\n        const whiteColor = color === '#FFFFFF' || color === 'white';\n\n        return (\n          <Radio\n            key={color}\n            value={color}\n            color=\"default\"\n            icon={<Icon whiteColor={whiteColor} />}\n            checkedIcon={<Icon checked whiteColor={whiteColor} />}\n            sx={{\n              color,\n              '&:hover': { opacity: 0.72 },\n              '& svg': { width: 12, height: 12 },\n            }}\n          />\n        );\n      })}\n    </RadioGroup>\n  )\n);\n\nexport default ColorSinglePicker;\n","// @mui\nimport { Dialog, Button, DialogTitle, DialogActions, DialogContent } from '@mui/material';\n//\nimport { ConfirmDialogProps } from './types';\n\n// ----------------------------------------------------------------------\n\nexport default function ConfirmDialog({\n  title,\n  content,\n  action,\n  open,\n  onClose,\n  ...other\n}: ConfirmDialogProps) {\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose} {...other}>\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\n\n      {content && <DialogContent sx={{ typography: 'body2' }}> {content} </DialogContent>}\n\n      <DialogActions>\n        {action}\n\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link } from '@mui/material';\n//\nimport { BreadcrumbsLinkProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  link: BreadcrumbsLinkProps;\n  activeLast?: boolean;\n  disabled: boolean;\n};\n\nexport default function BreadcrumbsLink({ link, activeLast, disabled }: Props) {\n  const { name, href, icon } = link;\n\n  const styles = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    color: 'text.primary',\n    ...(disabled &&\n      !activeLast && {\n        cursor: 'default',\n        pointerEvents: 'none',\n        color: 'text.disabled',\n      }),\n  };\n\n  const renderContent = (\n    <>\n      {icon && (\n        <Box\n          component=\"span\"\n          sx={{\n            mr: 1,\n            display: 'inherit',\n            '& svg': { width: 20, height: 20 },\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n\n      {name}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link component={RouterLink} to={href} sx={styles}>\n        {renderContent}\n      </Link>\n    );\n  }\n\n  return <Box sx={styles}> {renderContent} </Box>;\n}\n","// @mui\nimport { Box, Link, Stack, Typography, Breadcrumbs } from '@mui/material';\n//\nimport { CustomBreadcrumbsProps } from './types';\nimport LinkItem from './LinkItem';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink,\n  activeLast,\n  sx,\n  ...other\n}: CustomBreadcrumbsProps) {\n  const lastLink = links[links.length - 1].name;\n\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          {/* HEADING */}\n          {heading && (\n            <Typography variant=\"h4\" gutterBottom>\n              {heading}\n            </Typography>\n          )}\n\n          {/* BREADCRUMBS */}\n          {!!links.length && (\n            <Breadcrumbs separator={<Separator />} {...other}>\n              {links.map((link) => (\n                <LinkItem\n                  key={link.name || ''}\n                  link={link}\n                  activeLast={activeLast}\n                  disabled={link.name === lastLink}\n                />\n              ))}\n            </Breadcrumbs>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\n      </Stack>\n\n      {/* MORE LINK */}\n      {!!moreLink && (\n        <Box sx={{ mt: 2 }}>\n          {moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Separator() {\n  return (\n    <Box\n      component=\"span\"\n      sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\n    />\n  );\n}\n","import { useState } from 'react';\nimport { isSameDay, isSameMonth, getYear, isBefore } from 'date-fns';\n// utils\nimport { fDate } from '../../utils/formatTime';\n//\nimport { DateRangePickerProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype ReturnType = DateRangePickerProps;\n\nexport default function useDateRangePicker(start: Date | null, end: Date | null): ReturnType {\n  const [open, setOpen] = useState(false);\n\n  const [endDate, setEndDate] = useState(end);\n\n  const [startDate, setStartDate] = useState(start);\n\n  const isError =\n    (startDate && endDate && isBefore(new Date(endDate), new Date(startDate))) || false;\n\n  const currentYear = new Date().getFullYear();\n\n  const startDateYear = startDate ? getYear(startDate) : null;\n\n  const endDateYear = endDate ? getYear(endDate) : null;\n\n  const isCurrentYear = currentYear === startDateYear && currentYear === endDateYear;\n\n  const isSameDays =\n    startDate && endDate ? isSameDay(new Date(startDate), new Date(endDate)) : false;\n\n  const isSameMonths =\n    startDate && endDate ? isSameMonth(new Date(startDate), new Date(endDate)) : false;\n\n  const standardLabel = `${fDate(startDate)} - ${fDate(endDate)}`;\n\n  const getShortLabel = () => {\n    if (isCurrentYear) {\n      if (isSameMonths) {\n        if (isSameDays) {\n          return fDate(endDate, 'dd MMM yy');\n        }\n        return `${fDate(startDate, 'dd')} - ${fDate(endDate, 'dd MMM yy')}`;\n      }\n      return `${fDate(startDate, 'dd MMM')} - ${fDate(endDate, 'dd MMM yy')}`;\n    }\n    return `${fDate(startDate, 'dd MMM yy')} - ${fDate(endDate, 'dd MMM yy')}`;\n  };\n\n  const onChangeStartDate = (newValue: Date | null) => {\n    setStartDate(newValue);\n  };\n\n  const onChangeEndDate = (newValue: Date | null) => {\n    if (isError) {\n      setEndDate(null);\n    }\n    setEndDate(newValue);\n  };\n\n  const onReset = () => {\n    setStartDate(null);\n    setEndDate(null);\n  };\n\n  return {\n    startDate,\n    endDate,\n    onChangeStartDate,\n    onChangeEndDate,\n    //\n    open,\n    onOpen: () => setOpen(true),\n    onClose: () => setOpen(false),\n    onReset,\n    //\n    isSelected: !!startDate && !!endDate,\n    isError,\n    //\n    label: standardLabel || '',\n    shortLabel: getShortLabel() || '',\n    //\n    setStartDate,\n    setEndDate,\n  };\n}\n","// @mui\nimport {\n  Paper,\n  Stack,\n  Dialog,\n  Button,\n  TextField,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n  FormHelperText,\n} from '@mui/material';\nimport { DatePicker, CalendarPicker } from '@mui/x-date-pickers';\n// hooks\nimport useResponsive from '../../hooks/useResponsive';\n//\nimport { DateRangePickerProps } from './types';\n\n// ----------------------------------------------------------------------\n\nexport default function DateRangePicker({\n  title = 'Select date range',\n  variant = 'input',\n  //\n  startDate,\n  endDate,\n  //\n  onChangeStartDate,\n  onChangeEndDate,\n  //\n  open,\n  onClose,\n  //\n  isError,\n}: DateRangePickerProps) {\n  const isDesktop = useResponsive('up', 'md');\n\n  const isCalendarView = variant === 'calendar';\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth={isCalendarView ? false : 'xs'}\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: {\n          ...(isCalendarView && {\n            maxWidth: 720,\n          }),\n        },\n      }}\n    >\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\n\n      <DialogContent\n        sx={{\n          ...(isCalendarView &&\n            isDesktop && {\n              overflow: 'unset',\n            }),\n        }}\n      >\n        <Stack\n          spacing={isCalendarView ? 3 : 2}\n          direction={isCalendarView && isDesktop ? 'row' : 'column'}\n          justifyContent=\"center\"\n          sx={{\n            pt: 1,\n            '& .MuiCalendarPicker-root': {\n              ...(!isDesktop && {\n                width: 'auto',\n              }),\n            },\n          }}\n        >\n          {isCalendarView ? (\n            <>\n              <Paper\n                variant=\"outlined\"\n                sx={{ borderRadius: 2, borderColor: 'divider', borderStyle: 'dashed' }}\n              >\n                <CalendarPicker date={startDate} onChange={onChangeStartDate} />\n              </Paper>\n\n              <Paper\n                variant=\"outlined\"\n                sx={{ borderRadius: 2, borderColor: 'divider', borderStyle: 'dashed' }}\n              >\n                <CalendarPicker date={endDate} onChange={onChangeEndDate} />\n              </Paper>\n            </>\n          ) : (\n            <>\n              <DatePicker\n                label=\"Start date\"\n                value={startDate}\n                onChange={onChangeStartDate}\n                renderInput={(params) => <TextField {...params} />}\n              />\n\n              <DatePicker\n                label=\"End date\"\n                value={endDate}\n                onChange={onChangeEndDate}\n                renderInput={(params) => <TextField {...params} />}\n              />\n            </>\n          )}\n        </Stack>\n\n        {isError && (\n          <FormHelperText error sx={{ px: 2 }}>\n            End date must be later than start date\n          </FormHelperText>\n        )}\n      </DialogContent>\n\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Cancel\n        </Button>\n\n        <Button disabled={isError} variant=\"contained\" onClick={onClose}>\n          Apply\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { styled, alpha } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nconst StyledCalendar = styled('div')(({ theme }) => ({\n  width: 'calc(100% + 2px)',\n  marginLeft: -1,\n  marginBottom: -1,\n  '& .fc': {\n    '--fc-list-event-dot-width': '8px',\n    '--fc-border-color': theme.palette.divider,\n    '--fc-event-border-color': theme.palette.info.light,\n    '--fc-now-indicator-color': theme.palette.error.main,\n    '--fc-today-bg-color': theme.palette.action.selected,\n    '--fc-page-bg-color': theme.palette.background.default,\n    '--fc-neutral-bg-color': theme.palette.background.neutral,\n    '--fc-list-event-hover-bg-color': theme.palette.action.hover,\n    '--fc-highlight-color': alpha(theme.palette.primary.main, 0.08),\n  },\n\n  '& .fc .fc-license-message': { display: 'none' },\n  '& .fc a': { color: theme.palette.text.primary },\n\n  // Table Head\n  '& .fc .fc-col-header ': {\n    boxShadow: `inset 0 -1px 0 ${theme.palette.divider}`,\n    '& th': { borderColor: 'transparent' },\n    '& .fc-col-header-cell-cushion': {\n      ...theme.typography.subtitle2,\n      padding: '13px 0',\n    },\n  },\n\n  // Event\n  '& .fc .fc-event': {\n    borderColor: 'transparent',\n    backgroundColor: 'transparent',\n  },\n  '& .fc .fc-event .fc-event-main': {\n    padding: '2px 4px',\n    borderRadius: 4,\n    backgroundColor: theme.palette.common.white,\n    transition: theme.transitions.create('filter'),\n    '&:hover': { filter: 'brightness(0.92)' },\n    '&:before,&:after': {\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      content: \"''\",\n      borderRadius: 4,\n      position: 'absolute',\n      boxSizing: 'border-box',\n    },\n    '&:before': {\n      zIndex: 8,\n      opacity: 0.32,\n      border: 'solid 1px currentColor',\n    },\n    '&:after': {\n      zIndex: 7,\n      opacity: 0.24,\n      backgroundColor: 'currentColor',\n    },\n  },\n  '& .fc .fc-event .fc-event-main-frame': {\n    fontSize: 13,\n    lineHeight: '20px',\n    filter: 'brightness(0.24)',\n  },\n  '& .fc .fc-daygrid-event .fc-event-title': {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n  },\n  '& .fc .fc-event .fc-event-time': {\n    padding: 0,\n    overflow: 'unset',\n    fontWeight: theme.typography.fontWeightBold,\n  },\n\n  // Popover\n  '& .fc .fc-popover': {\n    border: 0,\n    overflow: 'hidden',\n    boxShadow: theme.customShadows.z20,\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: theme.palette.background.paper,\n  },\n  '& .fc .fc-popover-header': {\n    ...theme.typography.subtitle2,\n    padding: theme.spacing(1),\n    backgroundColor: alpha(theme.palette.grey[500], 0.12),\n    borderBottom: `solid 1px ${theme.palette.divider}`,\n  },\n  '& .fc .fc-popover-close': {\n    opacity: 0.48,\n    transition: theme.transitions.create('opacity'),\n    '&:hover': { opacity: 1 },\n  },\n  '& .fc .fc-more-popover .fc-popover-body': {\n    padding: theme.spacing(1.5),\n  },\n  '& .fc .fc-popover-body': {\n    '& .fc-daygrid-event.fc-event-start, & .fc-daygrid-event.fc-event-end': {\n      margin: '2px 0',\n    },\n  },\n\n  // Month View\n  '& .fc .fc-day-other .fc-daygrid-day-top': {\n    opacity: 1,\n    '& .fc-daygrid-day-number': {\n      color: theme.palette.text.disabled,\n    },\n  },\n  '& .fc .fc-daygrid-day-number': {\n    ...theme.typography.body2,\n    padding: theme.spacing(1, 1, 0),\n  },\n  '& .fc .fc-daygrid-event': {\n    marginTop: 4,\n  },\n  '& .fc .fc-daygrid-event.fc-event-start, & .fc .fc-daygrid-event.fc-event-end': {\n    marginLeft: 4,\n    marginRight: 4,\n  },\n  '& .fc .fc-daygrid-more-link': {\n    ...theme.typography.caption,\n    color: theme.palette.text.secondary,\n  },\n\n  // Week & Day View\n  '& .fc .fc-timegrid-axis-cushion': {\n    ...theme.typography.body2,\n    color: theme.palette.text.secondary,\n  },\n  '& .fc .fc-timegrid-slot-label-cushion': {\n    ...theme.typography.body2,\n  },\n\n  // Agenda View\n  '& .fc-direction-ltr .fc-list-day-text, .fc-direction-rtl .fc-list-day-side-text, .fc-direction-ltr .fc-list-day-side-text, .fc-direction-rtl .fc-list-day-text':\n    {\n      ...theme.typography.subtitle2,\n    },\n  '& .fc .fc-list-event': {\n    ...theme.typography.body2,\n    '& .fc-list-event-time': {\n      color: theme.palette.text.secondary,\n    },\n  },\n  '& .fc .fc-list-table': {\n    '& th, td': {\n      borderColor: 'transparent',\n    },\n  },\n}));\n\nexport default StyledCalendar;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport { useState, useEffect, useCallback, useRef, MouseEventHandler } from 'react';\nimport * as Yup from 'yup';\nimport merge from 'lodash/merge';\nimport { isBefore } from 'date-fns';\nimport { DateInput, EventInput } from '@fullcalendar/common';\n// form\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { Box, Stack, Button, Tooltip, TextField, IconButton, DialogActions, MenuItem, InputAdornment } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { MobileDateTimePicker } from '@mui/x-date-pickers';\n\n// redux\nimport { useDispatch } from 'src/redux/store';\n\n// calendar\n// import { getServices } from 'src/redux/slices/calendar';\n\nimport { defaultSettings } from '../../../components/settings/config-setting';\n\n// hooks\nimport useLocalStorage from '../../../hooks/useLocalStorage';\n// @types\nimport { ICalendarEvent } from '../../../@types/calendar';\n// components\nimport Iconify from '../../../components/iconify';\nimport { ColorSinglePicker } from '../../../components/color-utils';\nimport FormProvider, { RHFTextField, RHFSwitch, RHFSelect } from '../../../components/hook-form';\n// import { Provider } from 'react-redux';\n// import EmptyContent from '../../../components/empty-content/EmptyContent';\n\n// ----------------------------------------------------------------------\n\ntype FormValuesProps = ICalendarEvent;\n\ntype Props = {\n  colorOptions: string[];\n  event: null | undefined | EventInput;\n  range: {\n    start: Date;\n    end: Date;\n  } | null;\n  onCancel: VoidFunction;\n  onDeleteEvent: VoidFunction;\n  onGetServices: () => Promise<Array<Service>>;\n  onCreateUpdateEvent: (newEvent: EventSubmit, fullName: string) => void;\n  onSearchPatients: (search: string) => Promise<Array<Patient>>;\n  onSearchActs: (search: string) => Promise<Array<Act>>;\n  onCategoriesByServiceId: (serviceId: number) => Promise<Array<Category>>,\n  onActsByServiceIdAndCategoryId: (serviceId: number, categoryId: number) => Promise<Array<Act>>;\n};\n\ntype Patient = {\n  age: string,\n  birthDate: string,\n  doctors: [],\n  fullName: string,\n  gender: string,\n  id: number,\n  identification: string,\n  lastUpdate: string,\n  phoneNumber: string\n};\n\ntype Category = {\n  id: number,\n  name: string,\n  subCategories: []\n}\n\ntype Service = {\n  id: number,\n  name: string,\n  subServices: [],\n  team: [],\n  status: string\n}\n\ntype Act = {\n  id: number,\n  name: string,\n  service: Service,\n  reference: string,\n  defaultPrice: number,\n  basePrice: number,\n  type: string,\n  category: Category,\n  providers: Array<Provider>\n}\n\ntype Provider = {\n    id: number | undefined,\n    user: {\n        id: number,\n        username: string,\n        name: string,\n        nameAr: string,\n        status: string,\n        userRole: string\n    },\n    basePrice: number,\n    priceVariations: [\n        {\n            id: number,\n            name: string,\n            price: number\n        }\n    ]\n}\n\ntype EventSubmit = {\n  id?: number | string | null,\n  patient: {\n    id: number\n  },\n  status: string,\n  date: DateInput | null,\n  selectedFee: {\n    provider?: {\n      id: number \n    },\n    fee: {\n      id: number\n    },\n    price: string\n  }\n}\n\ntype Appointment = {\n  id: number | string,\n  patient: Patient,\n  status: string,\n  date: string | Date | null,\n  createdAt: string,\n  selectedFee: {\n      id: number,\n      provider: {\n          id: number,\n          username: string,\n          name: string,\n          nameAr: string,\n          status: string,\n          userRole: string\n      },\n      fee: Act,\n      price: number,\n      priceVariation: {\n          id: number,\n          name: string,\n          price: number\n      }\n  },\n  title?: string\n}\n\n// ----------------------------------------------------------------------\n\nconst getInitialValues = (\n  event: EventInput | null | undefined,\n  range: { start: Date; end: Date } | null\n  // range: { start: Date } | null\n) => {\n  const initialEvent: FormValuesProps = {\n    title: '',\n    description: '',\n    textColor: '#1890FF',\n    allDay: false,\n    start: range ? new Date(range.start).toISOString() : new Date().toISOString(),\n    end: range ? new Date(range.end).toISOString() : new Date().toISOString(),\n  };\n\n  if (event || range) {\n    return merge({}, initialEvent, event);\n  }\n\n  return initialEvent;\n};\n\n// ----------------------------------------------------------------------\n\nexport default function CalendarForm({\n  event,\n  range,\n  colorOptions,\n  onCreateUpdateEvent,\n  onSearchPatients,\n  onSearchActs,\n  onCategoriesByServiceId,\n  onActsByServiceIdAndCategoryId,\n  onGetServices,\n  onDeleteEvent,\n  onCancel,\n}: Props) {\n  const hasEventData = !!event;\n  \n  \n  const [settings, setSettings] = useLocalStorage('settings', defaultSettings);\n\n  const dispatch = useDispatch();\n\n  const [patient, setPatient] = useState('');\n  const [act, setAct] = useState('');\n  const [actObj, setActObj] = useState<Act>({\n    id: 0,\n    name: '',\n    service: {\n      id: 0,\n      name: '',\n      subServices: [],\n      team: [],\n      status: ''\n    },\n    reference: '',\n    defaultPrice: 0,\n    basePrice: 0,\n    type: '',\n    category: {\n      id: 0,\n      name: '',\n      subCategories: []\n    },\n    providers: []\n  });\n\n  const [provider, setProvider] = useState<Provider>({\n    id: 0,\n    user: {\n        id: 0,\n        username: '',\n        name: '',\n        nameAr: '',\n        status: '',\n        userRole: ''\n    },\n    basePrice: 0,\n    priceVariations: [\n        {\n            id: 0,\n            name: '',\n            price: 0\n        }\n    ]\n  })\n  const [isService, setIsService] = useState(false);\n  const [serviceId, setServiceId] = useState(0);\n  const [patientSelected, setPatientSelected] = useState(false);\n  const [closePatient, setClosePatient]= useState(false)  // const [patients, setPatients] = useState([]);\n\n  let patients:Array<Patient> = []\n  let actsSearch:Array<Act> = []\n\n  const [acts, setActs] = useState<Array<Act>>([]);\n\n  \n  // const ref = useRef<HTMLDivElement>();\n  const [isActOpen, setIsActOpen] = useState(false);\n  const [isPatientOpen, setIsPatientOpen] = useState(false);\n  const [isActObj, setIsActObj] = useState(false);\n  const [isProvider, setIsProvider] = useState(false);\n  const [isPriceVariation, setIsPriceVariation] = useState(false);\n  const [isFee, setIsFee] = useState(false);\n  const [isFeeOpen, setIsFeeOpen] = useState(false);\n  const [isInitialFee, setIsInitialFee] = useState(true);\n  const [isCategory, setIsCategory] = useState(false);\n  const [isRotate, setIsRotate] = useState(false);\n  const [isDropListOpen, setIsDropListOpen] = useState(false)\n\n  // const [filtredPatient, setFiltredPatient] = useState(patientSelected === false ? [] : patients[0].filter(p => p.fullName === patient));\n  // let searchPatient: Patient = {\n  //   age: '',\n  //   birthDate: '',\n  //   doctors: [],\n  //   fullName: '',\n  //   gender: '',\n  //   id: 0,\n  //   identification: '',\n  //   lastUpdate: '',\n  //   phoneNumber: ''\n  // }\n  const [searchP, setSearchP] = useState<Patient>({\n    age: '',\n    birthDate: '',\n    doctors: [],\n    fullName: '',\n    gender: '',\n    id: 0,\n    identification: '',\n    lastUpdate: '',\n    phoneNumber: ''\n  })\n  // const [searchFilter, setSearchFilter] = useState(patient === '' ? [] : patients.filter((p) =>  p.patient.match(patient)));\n  const [searchFilter, setSearchFilter] = useState(patient === '' ? [] : patients);\n  const [searchActFilter, setSearchActFilter] = useState(act === '' ? [] : acts.filter((p) =>  p.name.match(act)));\n  const [value, setValue] = useState('');\n  const [filterType, setFilterType] = useState('');\n  const span = document.querySelector('.span-custom');\n\n  const [filterService, setFilterService] = useState('');\n  const [filterFee, setFilterFee] = useState('');\n  const [optionsService, setOptionsService] = useState<Array<Service>>([])\n  const [priceVariation, setPriceVariation] = useState('')\n\n  const [optionsCategory, setOptionsCategory] = useState<Array<Category>>([])\n\n  const [filterStatus, setFilterStatus] = useState('Scheduled');\n  const optionsStatus = [\n    'Scheduled',\n    'Attended',\n    'Cancelled',\n    'Missed',\n  ];\n\n  const [filterData, setFilterData] = useState('');\n  const [filterPriceVariation, setFilterPriceVariation] = useState('');\n\n  const EventSchema = Yup.object().shape({\n    // title: Yup.string().max(255).required('Title is required'),\n    // description: Yup.string().max(5000),\n  });\n\n  const methods = useForm({\n    resolver: yupResolver(EventSchema),\n    defaultValues: getInitialValues(event, range),\n  });\n\n  const {\n    reset,\n    watch,\n    control,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const values = watch();\n  \n  \n  const getAllServices = useCallback( async () => {\n    try{\n      // let count = 0\n      if(event){\n        console.log(event)\n        setSearchP({...event?.patient})\n        setAct(event?.selectedFee?.fee.name)\n        setActObj({...event.selectedFee.fee})\n        setFilterStatus(event.status)\n        setPriceVariation(event?.selectedFee.price.toString())\n        provider.user.id = event?.selectedFee?.provider.id\n      }\n      const data = await onGetServices();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      setOptionsService([...data])\n    } catch(err){\n      console.log(err)\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const loadOne = useCallback(() => {\n    if(event && patientSelected === false && closePatient === false){\n      setPatientSelected(true)\n      setIsFee(true)\n      setValue(event.selectedFee.price.toString())\n      if(settings.themeMode === 'light') {\n        span?.classList.add('move-top-light')\n      }\n      else {\n        span?.classList.add('move-top-dark')\n      }\n    }\n  }, [event, patientSelected, closePatient, settings.themeMode, span])\n  \n  useEffect(() => {\n    getAllServices();\n    loadOne()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  // useEffect(() => {\n  //   console.log(event);\n  // }, [event]);\n\n  const onSubmit = async (data: FormValuesProps) => {\n    try {\n      let newEvent: EventSubmit = {\n        id: event?.id,\n        patient: {\n          id: searchP.id\n        },\n        status: filterStatus,\n        date: event?.date ? event?.date : data.start,\n        selectedFee: {\n          provider: {\n            id: provider.user.id\n          },\n          fee: {\n            id: actObj.id\n          },\n          price: priceVariation\n        }\n      };\n      if(provider.user.id === 0){\n        newEvent = {\n          id: event?.id,\n          patient: {\n            id: searchP.id\n          },\n          status: filterStatus,\n          date: event?.date ? event?.date : data.start,\n          selectedFee: {\n            fee: {\n              id: actObj.id\n            },\n            price: priceVariation\n          }\n        };\n      }\n      \n      console.log(newEvent)\n      console.log(provider)\n      onCreateUpdateEvent(newEvent, searchP.fullName);\n      onCancel();\n      reset();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  \n\n  const onFilterType = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFilterType(e.target.value);\n  };\n\n  const onFilterActObj = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFilterFee(e.target.value);\n  };\n\n  const onFilterStatus = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFilterStatus(e.target.value);\n  };\n\n  const onFilterData = (e: React.ChangeEvent<HTMLInputElement>) => {\n    // e.stopPropagation();\n    setFilterData(e.target.value);\n    setIsProvider(true);\n  };\n\n  const onFilterPriceVariation = (e: React.ChangeEvent<HTMLInputElement>) => {\n    // e.stopPropagation();\n    setFilterPriceVariation(e.target.value);\n  };\n\n  const OnSearchPatientsClick = (e: React.MouseEvent<HTMLInputElement>) => {\n    const ev = (e.target as HTMLInputElement);\n    if(ev.value !== '') setIsPatientOpen(true)\n  };\n\n  const onActObjClick = (e: React.MouseEvent<HTMLDivElement>, p: Provider) => {\n    // setValue(e.currentTarget.innerText)\n    setIsPriceVariation(!isPriceVariation)\n    // setIsFeeOpen(false)\n    setIsProvider(false)\n    // e.stopPropagation();\n    // setIsActObj(true);\n    // console.log(isPriceVariation)\n    setProvider({...p})\n  };\n\n  // useEffect(() => console.log('UseEffect says:',isPriceVariation));\n\n  const preventPropagation = (e:React.MouseEvent<HTMLElement>) => {\n    e.stopPropagation();\n    e.preventDefault()\n    console.log(e.isPropagationStopped())\n}\n\n  const handleSearchpatients = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    try {\n      setPatient(e.target.value);\n      if(e.target.value !== '') {\n        const search: string = e.target.value\n        const data = await onSearchPatients(search);\n        // console.log('data', data)\n        patients = data\n        console.log('patients', patients)\n        setIsPatientOpen(true)\n        // filter = patients.filter((p) =>  p.patient.match(e.target.value));\n        setSearchFilter([...patients])\n        // console.log(filter)\n      }\n      else {\n        const filter: Array<Patient> = []\n        setSearchFilter([...filter])\n        // console.log(e.target.value)\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSearchActs = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    setAct(e.target.value);\n    if(e.target.value !== '') {\n      const search: string = e.target.value\n      // let filter: Array<Act> = acts\n      const data = await onSearchActs(search);\n      actsSearch = data\n      // filter = acts.filter((p) =>  p.name.match(e.target.value));\n      setSearchActFilter([...actsSearch])\n      // console.log(filter)\n    }\n    else {\n      const filter: Array<Patient> = []\n      setSearchFilter([...filter])\n      // console.log(e.target.value)\n    }\n  };\n\n  const handleActFieldClick = (e: React.MouseEvent<HTMLHeadingElement>) => {\n    setIsActOpen(true);\n    // console.log(isActOpen)\n  }\n\n  const handleFormClick = (e: React.MouseEvent<HTMLHeadingElement>) => {\n    const classNames = [\"content\", \"search-act\", \"MuiInputBase-input\", \"iconify\"]\n    const classCount =classNames.find((c) => (e.target as Element).classList.contains(c)) \n    // console.log((e.target as Element).classList)\n    if(classCount === undefined) setIsActOpen(false)\n  }\n\n  const handleActClick = (e: React.MouseEvent<HTMLHeadingElement>) => {\n    setIsActOpen(true);\n    // console.log(ref.current)\n    // ref.current.focus();\n  }\n\n  const handleActNameClick = (e: React.MouseEvent<HTMLHeadingElement>, a:Act) => {\n    setAct(a.name);\n    setActObj(a)\n    setIsActOpen(false);\n    setIsFee(true)\n    console.log(actObj)\n  }\n\n  // useEffect(() => {\n  //   console.log(actObj)\n  // }, [actObj]);  \n\n  const handleServiceClick = async (e: React.MouseEvent<HTMLHeadingElement>, s:Service) => {\n    if(s.subServices.length > 0) {\n      setOptionsService([...s.subServices])\n      console.log(optionsService)\n    }\n    else{\n      setIsService(true);\n      setServiceId(s.id)\n      const data = await onCategoriesByServiceId(s.id);\n      setOptionsCategory([...data])\n      console.log(optionsCategory);\n    }\n  }\n\n  const handleCategoryClick = async (e: React.MouseEvent<HTMLHeadingElement>, c: Category) => {\n    if(c.subCategories.length > 0) {\n      setOptionsCategory([...c.subCategories])\n      console.log([optionsCategory])\n    }\n    else{\n      setIsCategory(true);\n      const data = await onActsByServiceIdAndCategoryId(serviceId,c.id);\n      setActs([...data])\n      console.log(acts);\n    }\n    // console.log(e.currentTarget.innerText);\n  }\n\n  const handleClick = (e: React.MouseEvent<HTMLHeadingElement>, s:Patient) => {\n    console.log('s',s)\n    setPatientSelected(true)\n    const text = e.currentTarget.innerText\n    setPatient(text)\n    // const filter = [...searchFilter.filter(s => s.fullName === text)]\n    // setSearchFilter([...filter])\n    // searchPatient = {...s}\n    setSearchP({...s})\n    console.log('text',text)\n    console.log('searchP',searchP)\n  };\n\n  const handleFeeClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    setIsInitialFee(false)\n    if(e.currentTarget.innerText !== 'providers') {\n      setIsFeeOpen(false)\n      setIsProvider(false)\n      setValue(e.currentTarget.innerText)\n    }\n    else {\n      setIsProvider(true)\n    }\n  }\n\n  const handleFeeClickPrice = (e: React.MouseEvent<HTMLDivElement>, p: number) => {\n    setPriceVariation(`${p}`)\n    if(isPriceVariation === false){\n      const prvdr: Provider = {\n        id: 0,\n        user: {\n            id: 0,\n            username: '',\n            name: '',\n            nameAr: '',\n            status: '',\n            userRole: ''\n        },\n        basePrice: 0,\n        priceVariations: [\n            {\n                id: 0,\n                name: '',\n                price: 0\n            }\n        ]\n      }\n      setProvider({...prvdr})\n    }\n    setIsInitialFee(false)\n    if(e.currentTarget.innerText !== 'providers') {\n      setIsFeeOpen(false)\n      setIsProvider(false)\n      setValue(e.currentTarget.innerText)\n    }\n    else {\n      setIsProvider(true)\n    }\n  }\n\n  const handleBackService = (e: React.MouseEvent<HTMLHeadingElement>) => {\n    setIsService(false);\n    // console.log(service);\n  }\n\n  const handleBackProvider = (e: React.MouseEvent<HTMLHeadingElement>) => {\n    setIsProvider(false)\n    setIsInitialFee(true)\n  }\n\n  const handleBackPriceVariation = (e: React.MouseEvent<HTMLHeadingElement>) => {\n    setIsPriceVariation(false)\n    setIsProvider(true)\n  }\n\n  const handleBackAct = (e: React.MouseEvent<HTMLHeadingElement>) => {\n    setIsCategory(false);\n    // console.log(service);\n  }\n\n  const returnClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    // console.log(e.currentTarget.innerText)\n    setPatientSelected(false);\n    setClosePatient(true);\n    setPatient('');\n  };\n\n  const handleCustomSelect = (e: React.MouseEvent<HTMLElement>) => {\n    setIsFeeOpen(!isFeeOpen);\n    console.log(isPriceVariation)\n    if (isProvider === false && isPriceVariation === false) setIsInitialFee(true)\n    // else if(isPriceVariation === false) setIsProvider(true)\n    else setIsPriceVariation(true)\n    // const span = document.querySelector('.span-custom');\n    const customSelect = document.querySelector('.custom-select')\n    span?.classList.add('move-top')\n    // console.log(span?.classList)\n    if(settings.themeMode === 'light') {\n      customSelect?.classList.add('custom-select-border-light')\n      span?.classList.add('move-top-light')\n    }\n    else {\n      customSelect?.classList.add('custom-select-border-dark')\n      span?.classList.add('move-top-dark')\n    }\n\n    setIsRotate(!isRotate)\n  }\n\n  const handleCustomSelectBlur = (e: React.FocusEvent<HTMLElement>) => {\n    // const span = document.querySelector('.span-custom');\n    const customSelect = document.querySelector('.custom-select')\n    span?.classList.remove('move-top')\n    span?.classList.remove('move-top-dark')\n    console.log(span?.classList)\n    if(settings.themeMode === 'light') {\n      customSelect?.classList.remove('custom-select-border-light')\n      span?.classList.remove('move-top-light')\n    }\n    else {\n      customSelect?.classList.remove('custom-select-border-dark')\n      span?.classList.remove('move-top-dark')\n    }\n\n    setIsRotate(false)\n  }\n\n  const handleOnActBlur = (e: React.FocusEvent<HTMLDivElement>) => {\n    console.log(e)\n    setIsActOpen(false)\n  }\n\n  document.addEventListener(\"mousedown\", (e) => {\n    const a = document.querySelector('.act')\n    const p = document.querySelector('.patient')\n    const f = document.querySelector('.fee')\n    if (!a?.contains(e.target as HTMLElement)) setIsActOpen(false)\n    if (!p?.contains(e.target as HTMLElement)) setIsPatientOpen(false)\n    if (!f?.contains(e.target as HTMLElement)) {\n      // const span = document.querySelector('.span-custom');\n      const v = document.querySelector('.value') as HTMLElement\n      const customSelect = document.querySelector('.custom-select')\n      // console.log(v.innerText)\n      if(v.innerText === ''){\n      span?.classList.remove('move-top')\n      span?.classList.remove('move-top-dark')\n      }\n      // console.log(span?.classList)\n      if(settings.themeMode === 'light') {\n        customSelect?.classList.remove('custom-select-border-light')\n        if(value === '') span?.classList.remove('move-top-light')\n      }\n      else {\n        customSelect?.classList.remove('custom-select-border-dark')\n        if(value === '') span?.classList.remove('move-top-dark')\n      }\n  \n      setIsRotate(false)\n      }\n  });\n\n\n  const isDateError =\n    !values.allDay && values.start && values.end\n      ? isBefore(new Date(values.end), new Date(values.start))\n      : false;\n\n  return (\n    // <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"w-full\">\n        <Stack spacing={3} sx={{ px: 3 }}>\n          <div className=\"flex relative\" >\n            <div className='w-full patient'>\n              {(patientSelected === false) ? \n                  (<TextField\n                    label=\"patient\"\n                    fullWidth\n                    value={patient}\n                    onChange={handleSearchpatients}\n                    onClick={OnSearchPatientsClick}\n                    placeholder=\"Search patient...\"\n                    InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n                    </InputAdornment>\n                  ),\n                  }} />)\n                  :(\n                <div \n                className={`relative card ${settings.themeMode === 'light' ? 'card-light': 'card-dark'}`}>\n                      <div className=\"return\" onClick={returnClick}>\n                        X\n                      </div>\n                      {/* {(event !== undefined || event !== null && searchP.fullName === '') ?\n                        (\n                          <> */}\n                            {/* <div>\n                              <p>nom: {event?.patient.fullName}</p>\n                              <p className=\"w-50\">tel: {event?.patient.phoneNumber}</p>\n                            </div>\n                            <div>\n                                <p>age: {event?.patient.age}</p>\n                                <p>birthDate: {event?.patient.birthDate}</p>\n                            </div> */}\n                          {/* </>\n                        ):(\n                          <> */}\n                            <div>\n                              <p>nom: {searchP.fullName}</p>\n                              <p className=\"w-50\">tel: {searchP.phoneNumber}</p>\n                            </div>\n                            <div>\n                                <p>age: {searchP.age}</p>\n                                <p>birthDate: {searchP.birthDate}</p>\n                            </div>\n                          {/* </>\n                        )\n                      } */}\n                </div>)\n              }\n              {\n                (searchFilter.length !== 0 && patientSelected === false && isPatientOpen === true) && \n                (\n                  <div className={`search-patient ${settings.themeMode === 'light' ? 'card-light': 'card-dark'}`}>\n                    {searchFilter.map((s,i) => \n                      (\n                        // eslint-disable-next-line jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events\n                        <div key={i} onClick={(e) => handleClick(e,s)}>\n                          {s.fullName}\n                        </div>\n                      )\n                    )}\n                    <button type='button' className=\"btn-add w-full\">Add Patient</button>\n                  </div>\n                )\n              }\n            </div>\n\n            <div className='w-full act'>\n              <TextField\n                fullWidth\n                label=\"act\"\n                value={act}\n                onChange={handleSearchActs}\n                onClick={handleActClick}\n                placeholder=\"Search act...\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n                    </InputAdornment>\n                  ),\n                  }}\n                />\n              {\n                (isActOpen) && \n                (\n                  <div className={`search-act search-acts ${settings.themeMode === 'light' ? 'card-light': 'card-dark'}`}>\n                  \n                    {(act === '') ? (\n                      <>\n                        {(isService === false) &&\n                          <div>\n                            <p>Services</p>\n                          </div>\n                        }\n                        {(isService === false) && optionsService.map((s,i) => \n                        (\n                          // eslint-disable-next-line jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events\n                            <div className=\"content\" key={i} onClick={(e) => handleServiceClick(e,s)}>\n                              {s.name}\n                            </div>\n                        ))}\n                      </>\n                      ):\n                      (\n                        searchActFilter.map((a,i) => \n                          (\n                            // eslint-disable-next-line jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events\n                            <div className=\"content\" key={i} onClick={(e) => handleActNameClick(e,a)}>\n                              {a.name}\n                            </div>\n                          ))\n                      )\n                    }\n\n                    {(act === '' && isService !== false && isCategory === false) && (\n                      <>\n                        <div>\n                          <Iconify icon=\"material-symbols:arrow-back\" sx={{ color: 'text.disabled' }} onClick={handleBackService} />\n                        </div>\n                        <p>Categories</p>\n                        {optionsCategory.map((c,i) => \n                          (\n                            // eslint-disable-next-line jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events\n                              <div className=\"content\" key={i} onClick={(e) => handleCategoryClick(e,c)}>\n                                {c.name}\n                              </div>\n                        ))}\n                      </>\n                      )\n                    }\n\n                    {(isCategory === true) && (\n                      <>\n                        <div>\n                          <Iconify icon=\"material-symbols:arrow-back\" sx={{ color: 'text.disabled' }} onClick={handleBackAct} />\n                        </div>\n                        <p>Acts</p>\n                        {acts.map((a,i) => \n                          (\n                            // eslint-disable-next-line jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events\n                              <div className=\"content\" key={i} onClick={(e) => handleActNameClick(e,a)}>\n                                {a.name}\n                              </div>\n                        ))}\n                      </>\n                      )\n                    }\n                  </div>\n                )\n              }\n            </div>\n          </div>\n\n          <div className=\"flex\">\n            <Controller\n              name=\"start\"\n              control={control}\n              render={({ field }) => (\n                <MobileDateTimePicker\n                  {...field}\n                  onChange={(newValue: Date | null) =>{ field.onChange(newValue)}}\n                  label=\"Start date\"\n                  value={event?.date}\n                  inputFormat=\"dd/MM/yyyy hh:mm a\"\n                  renderInput={(params) => <TextField {...params} fullWidth />}\n                />\n              )}\n            />\n            \n            {(isFee === true) &&\n            <div className={`custom-select relative fee ${settings.themeMode === 'light' ? 'border-light': 'border-dark'}`}>\n            <span className={`span-custom ${settings.themeMode === 'light' ? 'span-light': 'span-dark'} ${(event !== null && event !== undefined) ? 'move-top-dark move-top' : ''}`}>Fee</span>\n              <div className=\"fee-click\" onClick={handleCustomSelect}>\n                {(value !== '') &&\n                  <span className={`value ${settings.themeMode === 'light' ? 'value-light': 'value-dark'}`}>{value}</span>\n                }\n                <div className='flex-end icon-end'>\n                  <InputAdornment position=\"end\">\n                      <Iconify icon=\"material-symbols:keyboard-arrow-down\" sx={{ color: 'text.disabled', transform: isRotate === true ? \"rotate(180deg)\" : \"rotate(0)\"}} />\n                  </InputAdornment>\n                </div>\n              </div>\n                {(isFeeOpen === true) && \n                  <div className={`search-fee search-fees ${settings.themeMode === 'light' ? 'card-light': 'card-dark'}`}>\n                      {(isInitialFee === true) && (\n                        <>\n                            <div>\n                              <p>Fees</p>\n                            </div>\n                            <div className=\"content\" onClick={(e) => handleFeeClickPrice(e,actObj?.defaultPrice)}>\n                              default Price: &nbsp; {actObj?.defaultPrice}\n                            </div>\n                            <div className=\"content\" onClick={(e) => handleFeeClickPrice(e,actObj?.basePrice)}>\n                              base Price: &nbsp; {actObj?.basePrice}\n                            </div>\n\n                            {(actObj.providers.length > 0) &&\n                              <div className=\"content\" onClick={handleFeeClick}>\n                                providers\n                              </div>\n                            }\n                        </>\n                      )}\n\n                      {   \n                        (isProvider === true) && (\n                          <>\n                            <div>\n                              <Iconify icon=\"material-symbols:arrow-back\" sx={{ color: 'text.disabled' }} onClick={handleBackProvider} />\n                            </div>\n                            <div>\n                              Providers\n                            </div>\n                            {actObj.providers.map((p,i) => (\n                              <div key={i} className=\"content\" onClick={(e) => onActObjClick(e,p)}>\n                                {p.user.name} | base Price = {p.basePrice}\n                              </div>)\n                            )}\n                          </>)\n                      }\n\n                      {\n                        (isPriceVariation === true) && (\n                          <>\n                            <div>\n                              <Iconify icon=\"material-symbols:arrow-back\" sx={{ color: 'text.disabled' }} onClick={handleBackPriceVariation} />\n                            </div>\n                            <div>\n                              Price Variations\n                            </div>\n                            {\n                            provider.priceVariations.map((p,i) => (\n                              <div key={i} className=\"content\" onClick={(e) => handleFeeClickPrice(e,p.price)}>\n                                {p.name} | Price = {p.price}\n                              </div>\n                            ))}\n                          </>\n                        )\n                      }\n                  </div>\n                }\n            </div>\n            }\n\n            {/* {(isFee === true) &&\n              <TextField\n              fullWidth\n              select\n              label=\"Fee\"\n              value={filterFee}\n              onChange={onFilterActObj}\n              >\n                  <MenuItem\n                    value={actObj?.defaultPrice}\n                    sx={{\n                      mx: 1,\n                      borderRadius: 0.75,\n                      typography: 'body2',\n                      textTransform: 'capitalize',\n                    }}\n                  >\n                    default Price: &nbsp; {actObj?.defaultPrice}\n                  </MenuItem>\n\n                  <MenuItem\n                    value={actObj?.basePrice}\n                    sx={{\n                      mx: 1,\n                      borderRadius: 0.75,\n                      typography: 'body2',\n                      textTransform: 'capitalize',\n                    }}\n                  >\n                    base Price: &nbsp; {actObj?.basePrice}\n                  </MenuItem>\n                    \n                  {(actObj?.providers?.length > 0) &&\n                  <MenuItem\n                    value=\"providers\"\n                    sx={{\n                      mx: 1,\n                      borderRadius: 0.75,\n                      typography: 'body2',\n                      textTransform: 'capitalize',\n                    }}\n                  >\n                    providers\n                  </MenuItem>}\n            </TextField>\n            } */}\n          </div>\n\n          <div className=\"flex\">\n            <TextField\n              fullWidth\n              select\n              label=\"Status\"\n              value={filterStatus}\n              onChange={onFilterStatus}\n              >\n                {optionsStatus.map((option) => (\n                  <MenuItem\n                    key={option}\n                    value={option}\n                    sx={{\n                      mx: 1,\n                      borderRadius: 0.75,\n                      typography: 'body2',\n                      textTransform: 'capitalize',\n                    }}\n                  >\n                    {option}\n                  </MenuItem>\n                ))}\n            </TextField>\n\n            {/* {   \n              (filterFee === 'providers') && (\n                <TextField\n                  fullWidth\n                  select\n                  label=\"Providers\"\n                  value={filterData}\n                  onChange={onFilterData}\n                  onClick={preventPropagation}\n                  >\n                    {actObj.providers.map((p) => (\n                      <MenuItem\n                        key={p.id}\n                        value={p.user.name}\n                        onClick={(e) => onActObjClick(e,p)}\n                        sx={{\n                          mx: 1,\n                          borderRadius: 0.75,\n                          typography: 'body2',\n                          textTransform: 'capitalize',\n                        }}\n                      >\n                        {p.user.name} | base Price = {p.basePrice}\n                      </MenuItem>)\n                     \n                    )}\n                </TextField>)\n            } */}\n          </div>\n\n          <div className='flex'>\n            {/* <RHFTextField name=\"note\" label=\"Note\" multiline rows={3} /> */}\n\n            {/* {\n              (filterFee === 'providers' && isProvider === true) && \n                <TextField\n                  fullWidth\n                  select\n                  label=\"price Variations\"\n                  value={filterPriceVariation}\n                  onChange={onFilterPriceVariation}\n                  onClick={preventPropagation}\n                  >\n                    \n                    {\n                    provider.priceVariations.map((p) => (\n                      <MenuItem\n                        key={p.id}\n                        value={p.name}\n                        sx={{\n                          mx: 1,\n                          borderRadius: 0.75,\n                          typography: 'body2',\n                          textTransform: 'capitalize',\n                        }}\n                      >\n                        {p.name} | Price = {p.price}\n                      </MenuItem>\n                    ))}\n                </TextField>\n            } */}\n          </div>\n          \n\n          {/* <RHFSwitch name=\"allDay\" label=\"All day\" /> */}\n\n          {/* <Stack direction=\"row\" spacing={3} sx={{ px: 3 }}>\n            <Controller\n              name=\"start\"\n              control={control}\n              render={({ field }) => (\n                <MobileDateTimePicker\n                  {...field}\n                  onChange={(newValue: Date | null) => field.onChange(newValue)}\n                  label=\"Start date\"\n                  inputFormat=\"dd/MM/yyyy hh:mm a\"\n                  renderInput={(params) => <TextField {...params} fullWidth />}\n                />\n              )}\n            />\n\n            <Controller\n              name=\"end\"\n              control={control}\n              render={({ field }) => (\n                <MobileDateTimePicker\n                  {...field}\n                  onChange={(newValue: Date | null) => field.onChange(newValue)}\n                  label=\"End date\"\n                  inputFormat=\"dd/MM/yyyy hh:mm a\"\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      fullWidth\n                      error={!!isDateError}\n                      helperText={isDateError && 'End date must be later than start date'}\n                    />\n                  )}\n                />\n              )}\n            />\n          </Stack> */}\n          <Controller\n            name=\"textColor\"\n            control={control}\n            render={({ field }) => (\n              <ColorSinglePicker\n                value={field.value}\n                onChange={field.onChange}\n                colors={colorOptions}\n              />\n            )}\n          />\n        </Stack>\n      </div>\n      \n\n      <DialogActions>\n        {hasEventData && (\n          <Tooltip title=\"Delete Event\">\n            <IconButton onClick={onDeleteEvent}>\n              <Iconify icon=\"eva:trash-2-outline\" />\n            </IconButton>\n          </Tooltip>\n        )}\n\n        <Box sx={{ flexGrow: 1 }} />\n\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onCancel}>\n          Cancel\n        </Button>\n\n        <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n          {hasEventData ? 'Update' : 'Add'}\n        </LoadingButton>\n      </DialogActions>\n    </FormProvider>\n  );\n}\n","// @mui\nimport { Stack, Button, Tooltip, Typography, IconButton, ToggleButton } from '@mui/material';\n// utils\nimport { fDate } from '../../../utils/formatTime';\n// hooks\nimport useResponsive from '../../../hooks/useResponsive';\n// @types\nimport { ICalendarViewValue } from '../../../@types/calendar';\n// components\nimport Iconify from '../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nconst VIEW_OPTIONS = [\n  { value: 'dayGridMonth', label: 'Month', icon: 'ic:round-view-module' },\n  { value: 'timeGridWeek', label: 'Week', icon: 'ic:round-view-week' },\n  { value: 'timeGridDay', label: 'Day', icon: 'ic:round-view-day' },\n  { value: 'listWeek', label: 'Agenda', icon: 'ic:round-view-agenda' },\n] as const;\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  date: Date;\n  view: ICalendarViewValue;\n  onToday: VoidFunction;\n  onNextDate: VoidFunction;\n  onPrevDate: VoidFunction;\n  onOpenFilter: VoidFunction;\n  onChangeView: (newView: ICalendarViewValue) => void;\n};\n\nexport default function CalendarToolbar({\n  date,\n  view,\n  onToday,\n  onNextDate,\n  onPrevDate,\n  onChangeView,\n  onOpenFilter,\n}: Props) {\n  const isDesktop = useResponsive('up', 'sm');\n\n  return (\n    <Stack\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      direction={{ xs: 'column', sm: 'row' }}\n      sx={{ p: 2.5 }}\n    >\n      {isDesktop && (\n        <Stack direction=\"row\" spacing={1}>\n          {VIEW_OPTIONS.map((viewOption) => (\n            <Tooltip key={viewOption.value} title={viewOption.label}>\n              <ToggleButton\n                size=\"small\"\n                value={view}\n                selected={viewOption.value === view}\n                onChange={() => onChangeView(viewOption.value)}\n              >\n                <Iconify icon={viewOption.icon} />\n              </ToggleButton>\n            </Tooltip>\n          ))}\n        </Stack>\n      )}\n\n      <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n        <IconButton onClick={onPrevDate}>\n          <Iconify icon=\"eva:arrow-ios-back-fill\" />\n        </IconButton>\n\n        <Typography variant=\"h5\">{fDate(date)}</Typography>\n\n        <IconButton onClick={onNextDate}>\n          <Iconify icon=\"eva:arrow-ios-forward-fill\" />\n        </IconButton>\n      </Stack>\n\n      <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n        {isDesktop && (\n          <Button size=\"small\" color=\"error\" variant=\"contained\" onClick={onToday}>\n            Today\n          </Button>\n        )}\n\n        <IconButton onClick={onOpenFilter}>\n          <Iconify icon=\"ic:round-filter-list\" />\n        </IconButton>\n      </Stack>\n    </Stack>\n  );\n}\n","import orderBy from 'lodash/orderBy';\nimport { EventInput } from '@fullcalendar/common';\n// @mui\nimport { DatePicker } from '@mui/x-date-pickers';\nimport {\n  Box,\n  Stack,\n  Drawer,\n  Divider,\n  Tooltip,\n  TextField,\n  Typography,\n  IconButton,\n  ListItemText,\n  ListItemButton,\n} from '@mui/material';\n// config\nimport { NAV } from '../../../config-global';\n// utils\nimport { fDateTime } from '../../../utils/formatTime';\n// components\nimport Iconify from '../../../components/iconify';\nimport Scrollbar from '../../../components/scrollbar';\nimport { ColorMultiPicker } from '../../../components/color-utils';\nimport { DateRangePickerProps } from '../../../components/date-range-picker';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  open: boolean;\n  events: EventInput[];\n  onResetFilter: VoidFunction;\n  onClose: VoidFunction;\n  colorOptions: string[];\n  filterEventColor: string[];\n  picker: DateRangePickerProps;\n  onSelectEvent: (eventId: string) => void;\n  onFilterEventColor: (eventColor: string) => void;\n};\n\nexport default function CalendarFilterDrawer({\n  open,\n  events,\n  picker,\n  onClose,\n  onResetFilter,\n  colorOptions,\n  onSelectEvent,\n  filterEventColor,\n  onFilterEventColor,\n}: Props) {\n  return (\n    <Drawer\n      anchor=\"right\"\n      open={open}\n      onClose={onClose}\n      BackdropProps={{\n        invisible: true,\n      }}\n      PaperProps={{\n        sx: { width: NAV.W_BASE },\n      }}\n    >\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        sx={{ pl: 2, pr: 1, py: 2 }}\n      >\n        <Typography variant=\"subtitle1\">Filters</Typography>\n\n        <Tooltip title=\"Reset\">\n          <IconButton onClick={onResetFilter}>\n            <Iconify icon=\"eva:trash-2-outline\" />\n          </IconButton>\n        </Tooltip>\n      </Stack>\n\n      <Divider />\n\n      <Typography\n        variant=\"caption\"\n        sx={{\n          color: 'text.secondary',\n          fontWeight: 'fontWeightMedium',\n          p: (theme) => theme.spacing(2, 2, 1, 2),\n        }}\n      >\n        Colors\n      </Typography>\n\n      <ColorMultiPicker\n        colors={colorOptions}\n        selected={filterEventColor}\n        onChangeColor={onFilterEventColor}\n        sx={{ maxWidth: 36 * 4, mx: 2 }}\n      />\n\n      <Typography\n        variant=\"caption\"\n        sx={{ p: 2, color: 'text.secondary', fontWeight: 'fontWeightMedium' }}\n      >\n        Range\n      </Typography>\n\n      <Stack spacing={2} sx={{ px: 2 }}>\n        <DatePicker\n          label=\"Start date\"\n          value={picker.startDate}\n          onChange={picker.onChangeStartDate}\n          renderInput={(params) => <TextField size=\"small\" {...params} />}\n        />\n\n        <DatePicker\n          label=\"End date\"\n          value={picker.endDate}\n          onChange={picker.onChangeEndDate}\n          renderInput={(params) => <TextField size=\"small\" {...params} />}\n        />\n      </Stack>\n\n      <Typography\n        variant=\"caption\"\n        sx={{\n          p: 2,\n          color: 'text.secondary',\n          fontWeight: 'fontWeightMedium',\n        }}\n      >\n        Events ({events.length})\n      </Typography>\n\n      <Scrollbar sx={{ height: 1 }}>\n        {orderBy(events, ['end'], ['desc']).map((event) => (\n          <ListItemButton key={event.id} onClick={() => onSelectEvent(event.id as string)}>\n            <Box\n              sx={{\n                top: 0,\n                left: 0,\n                width: 0,\n                height: 0,\n                position: 'absolute',\n                borderRight: '8px solid transparent',\n                borderTop: `8px solid ${event.textColor}`,\n              }}\n            />\n\n            <ListItemText\n              disableTypography\n              primary={\n                <Typography variant=\"subtitle2\" sx={{ fontSize: 13, mt: 0.5 }}>\n                  {event.title}\n                </Typography>\n              }\n              secondary={\n                <Typography\n                  variant=\"caption\"\n                  component=\"div\"\n                  sx={{ fontSize: 11, color: 'text.disabled' }}\n                >\n                  {event.allDay ? (\n                    fDateTime(event.start as Date, 'dd MMM yy')\n                  ) : (\n                    <>\n                      {fDateTime(event.start as Date, 'dd MMM yy p')} {' - '}\n                      {fDateTime(event.end as Date, 'dd MMM yy p')}\n                    </>\n                  )}\n                </Typography>\n              }\n              sx={{ display: 'flex', flexDirection: 'column-reverse' }}\n            />\n          </ListItemButton>\n        ))}\n      </Scrollbar>\n    </Drawer>\n  );\n}\n","import FullCalendar, { DateSelectArg, EventClickArg, EventDropArg } from '@fullcalendar/react'; // => request placed at the top\nimport interactionPlugin, { EventResizeDoneArg } from '@fullcalendar/interaction';\nimport listPlugin from '@fullcalendar/list';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport timelinePlugin from '@fullcalendar/timeline';\nimport { DateInput, EventInput } from '@fullcalendar/common';\n//\nimport { Helmet } from 'react-helmet-async';\nimport { useState, useRef, useEffect, useCallback } from 'react';\n// @mui\nimport { Card, Button, Container, DialogTitle, Dialog, Divider, Tab, Tabs } from '@mui/material';\n\n// User toolbar\nimport { UserTableToolbar } from 'src/sections/@dashboard/appointment/list';\n// import Tabs from 'src/theme/overrides/Tabs';\n// redux\nimport { useDispatch, useSelector } from 'src/redux/store';\nimport {\n  getEvents,\n  createEvent,\n  searchPatients,\n  updateEvent,\n  deleteEvent,\n  selectEvent,\n  selectRange,\n  onOpenModal,\n  onCloseModal,\n  searchEvent,\n  getServices,\n  getCategories,\n  searchActByserviceIdAndCategoryId,\n  searchActs,\n  getProviders,\n  searchAppointments,\n} from 'src/redux/slices/calendar';\n// routes\nimport { PATH_DASHBOARD } from 'src/routes/paths';\n// utils\nimport { fTimestamp } from 'src/utils/formatTime';\n// hooks\nimport useResponsive from 'src/hooks/useResponsive';\n// @types\nimport { ICalendarEvent, ICalendarViewValue } from 'src/@types/calendar';\n// components\nimport Iconify from 'src/components/iconify';\nimport { useSnackbar } from 'src/components/snackbar';\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\nimport { useSettingsContext } from 'src/components/settings';\nimport { useDateRangePicker } from 'src/components/date-range-picker';\n// sections\nimport {\n  CalendarForm,\n  StyledCalendar,\n  CalendarToolbar,\n  CalendarFilterDrawer,\n} from 'src/sections/@dashboard/calendar';\n// user list\nimport { _userList } from 'src/_mock/arrays';\n\n// ----------------------------------------------------------------------\n\nconst COLOR_OPTIONS = [\n  '#00AB55', // theme.palette.primary.main,\n  '#1890FF', // theme.palette.info.main,\n  '#54D62C', // theme.palette.success.main,\n  '#FFC107', // theme.palette.warning.main,\n  '#FF4842', // theme.palette.error.main\n  '#04297A', // theme.palette.info.darker\n  '#7A0C2E', // theme.palette.error.darker\n];\n\ntype Patient = {\n  age: string;\n  birthDate: string;\n  doctors: [];\n  fullName: string;\n  gender: string;\n  id: number;\n  identification: string;\n  lastUpdate: string;\n  phoneNumber: string;\n  title?: string;\n};\n\ntype Service = {\n  id: number;\n  name: string;\n  subServices: [];\n  team: [];\n  status: string;\n};\n\ntype Category = {\n  id: number;\n  name: string;\n  subCategories: [];\n};\n\ntype Act = {\n  id: number;\n  name: string;\n  service: Service;\n  reference: string;\n  defaultPrice: number;\n  basePrice: number;\n  type: string;\n  category: Category;\n  providers: [\n    {\n      id: number;\n      user: {\n        id: number;\n        username: string;\n        name: string;\n        nameAr: string;\n        status: string;\n        userRole: string;\n      };\n      basePrice: number;\n      priceVariations: [\n        {\n          id: number;\n          name: string;\n          price: number;\n        }\n      ];\n    }\n  ];\n};\n\ntype Provider = {\n  id: number;\n  username: string;\n  password: string;\n  name: string;\n  nameAr: string;\n  status: string;\n  userRole: string;\n};\n\ntype EventSubmit = {\n  id?: number | string | null;\n  patient: {\n    id: number;\n  };\n  status: string;\n  date?: DateInput | null;\n  selectedFee: {\n    provider?: {\n      id: number;\n    };\n    fee: {\n      id: number;\n    };\n    price: string;\n  };\n  start?: string;\n};\n\nexport default function CalendarPage() {\n  const initialDate = new Date();\n  let from = new Date(initialDate.getFullYear(), initialDate.getMonth(), 2)\n    .toISOString()\n    .split('T')[0];\n  let to = new Date(initialDate.getFullYear(), initialDate.getMonth() + 1, 1)\n    .toISOString()\n    .split('T')[0];\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { themeStretch } = useSettingsContext();\n\n  const dispatch = useDispatch();\n\n  const isDesktop = useResponsive('up', 'sm');\n\n  const calendarRef = useRef<FullCalendar>(null);\n\n  const { events, openModal, selectedRange, selectedEventId } = useSelector(\n    (state) => state.calendar\n  );\n\n  // let { events } = useSelector(\n  //   (state) => state.calendar\n  // );\n\n  const selectedEvent = useSelector(() => {\n    if (selectedEventId) {\n      // console.log(events.find((event) => event?.id?.toString() === selectedEventId?.toString()))\n      return events.find((event) => event.id?.toString() === selectedEventId?.toString());\n    }\n\n    return null;\n  });\n\n  const picker = useDateRangePicker(null, null);\n\n  const [date, setDate] = useState(new Date());\n\n  const [openFilter, setOpenFilter] = useState(false);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [filterEventColor, setFilterEventColor] = useState<string[]>([]);\n\n  const [view, setView] = useState<ICalendarViewValue>(isDesktop ? 'dayGridMonth' : 'listWeek');\n\n  // toolBar\n  const [tableData, setTableData] = useState(_userList);\n\n  const [filterName, setFilterName] = useState('');\n\n  const [filterRole, setFilterRole] = useState('');\n\n  const [service, setService] = useState<Service>({\n    id: 0,\n    name: '',\n    subServices: [],\n    team: [],\n    status: '',\n  });\n\n  const [category, setCategory] = useState<Category>({\n    id: 0,\n    name: '',\n    subCategories: [],\n  });\n\n  const [provider, setProvider] = useState<Provider>({\n    id: 0,\n    username: '',\n    password: '',\n    name: '',\n    nameAr: '',\n    status: '',\n    userRole: '',\n  });\n\n  const [filterType, setFilterType] = useState('');\n\n  const [Data_OPTIONS, setDataOptions] = useState<Array<Provider>>([]);\n\n  const [filterData, setFilterData] = useState('');\n\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  const [filterStatus, setFilterStatus] = useState('All');\n  const [optionsService, setOptionsService] = useState<Array<Service>>([]);\n\n  const [Type_OPTIONS, setTypeOptions] = useState<Array<Category>>([]);\n\n  const isFiltered = filterName !== '' || filterRole !== 'All' || filterStatus !== 'All';\n\n  const STATUS_OPTIONS = ['All', 'Scheduled', 'Attended', 'Cancelled', 'Missed'];\n\n  const ROLE_OPTIONS = ['Service 1', 'Service 2', 'Service 3', 'Service 4', 'Service 5'];\n\n  // const Type_OPTIONS =[\n  //   'Specialist',\n  //   'Radiologie',\n  //   'Laboratory',\n  //   'Surgery'\n  // ];\n\n  // const Data_OPTIONS =[\n  //   'Specialist 1',\n  //   'Specialist 2',\n  //   'Specialist 3',\n  //   'Specialist 4'\n  // ]\n\n  const getAllServices = useCallback(async () => {\n    try {\n      const data = await handlegetServices();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      setOptionsService([...data]);\n    } catch (err) {\n      console.log(err);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getAllCategories = useCallback(async () => {\n    try {\n      const data = await handlegetCategories();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      setTypeOptions([...data]);\n    } catch (err) {\n      console.log(err);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getAllProviders = useCallback(async () => {\n    try {\n      const data = await handlegetProviders();\n      setDataOptions([...data]);\n    } catch (err) {\n      console.log(err);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleFilterStatus = (event: React.SyntheticEvent<Element, Event>, newValue: string) => {\n    // const d = new Date();\n    from = new Date(initialDate.getFullYear(), initialDate.getMonth(), 2)\n      .toISOString()\n      .split('T')[0];\n    to = new Date(initialDate.getFullYear(), initialDate.getMonth() + 1, 1)\n      .toISOString()\n      .split('T')[0];\n\n    dispatch(getEvents({ from, to }, { status: newValue }));\n    setFilterStatus(newValue);\n  };\n\n  const handleFilterName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    handleSearchPatient(event.target.value);\n    setFilterName(event.target.value);\n    setFilterType('');\n    setFilterRole('');\n    setFilterData('');\n    handleSearchAppointment(event.target.value);\n  };\n\n  const handleFilterService = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFilterName(event.target.value);\n  };\n\n  const handleFilterType = async (event: React.MouseEvent<Element>, c: Category) => {\n    // setPage(0);\n    setFilterType(c.name);\n    setCategory(c);\n    // const d = new Date();\n    from = new Date(initialDate.getFullYear(), initialDate.getMonth(), 2)\n      .toISOString()\n      .split('T')[0];\n    to = new Date(initialDate.getFullYear(), initialDate.getMonth() + 1, 1)\n      .toISOString()\n      .split('T')[0];\n    dispatch(\n      getEvents({ from, to }, { serviceId: service.id, categoryId: c.id, providerId: provider.id })\n    );\n    // const data = await handlegetProviders();\n    // setDataOptions([...data])\n    // console.log(data);\n  };\n\n  const handleFilterRole = async (event: React.MouseEvent<Element>, s: Service) => {\n    // setPage(0);\n    handleSearchPatient(s.name);\n    setFilterRole(s.name);\n    setService(s);\n    const data = await handlegetCategoriesByServiceId(s.id);\n    setTypeOptions([...data]);\n    // const d = new Date();\n    from = new Date(initialDate.getFullYear(), initialDate.getMonth(), 2)\n      .toISOString()\n      .split('T')[0];\n    to = new Date(initialDate.getFullYear(), initialDate.getMonth() + 1, 1)\n      .toISOString()\n      .split('T')[0];\n    dispatch(\n      getEvents({ from, to }, { serviceId: s.id, categoryId: category.id, providerId: provider.id })\n    );\n    console.log(Type_OPTIONS);\n  };\n\n  const handleFilterData = (event: React.MouseEvent<Element>, p: Provider) => {\n    // setPage(0);\n    setFilterData(p.name);\n    setProvider(p);\n    // const d = new Date();\n    from = new Date(initialDate.getFullYear(), initialDate.getMonth(), 2)\n      .toISOString()\n      .split('T')[0];\n    to = new Date(initialDate.getFullYear(), initialDate.getMonth() + 1, 1)\n      .toISOString()\n      .split('T')[0];\n    dispatch(\n      getEvents({ from, to }, { serviceId: service.id, categoryId: category.id, providerId: p.id })\n    );\n  };\n\n  const handleResetFilter = () => {\n    setFilterName('');\n    setFilterRole('');\n    setFilterStatus('All');\n    setFilterType('');\n    setFilterData('');\n    setService({\n      id: 0,\n      name: '',\n      subServices: [],\n      team: [],\n      status: '',\n    });\n\n    setCategory({\n      id: 0,\n      name: '',\n      subCategories: [],\n    });\n\n    setProvider({\n      id: 0,\n      username: '',\n      password: '',\n      name: '',\n      nameAr: '',\n      status: '',\n      userRole: '',\n    });\n\n    getAllServices();\n    getAllCategories();\n    getAllProviders();\n    // const d = new Date();\n    from = new Date(initialDate.getFullYear(), initialDate.getMonth(), 2)\n      .toISOString()\n      .split('T')[0];\n    to = new Date(initialDate.getFullYear(), initialDate.getMonth() + 1, 1)\n      .toISOString()\n      .split('T')[0];\n    if (\n      filterStatus !== 'All' ||\n      filterRole !== '' ||\n      filterName !== '' ||\n      filterType !== '' ||\n      filterData !== ''\n    )\n      dispatch(getEvents({ from, to }));\n  };\n  // end toolbar\n  useEffect(() => {\n    const d = new Date();\n    const beginnig = new Date(d.getFullYear(), d.getMonth(), 2).toISOString().split('T')[0];\n    const end = new Date(d.getFullYear(), d.getMonth() + 1, 1).toISOString().split('T')[0];\n    // console.log(beginnig, end)\n    dispatch(getEvents({ from: beginnig, to: end }, { status: filterStatus }));\n    // dispatch(getServices());\n  }, [dispatch, filterStatus]);\n\n  useEffect(() => {\n    getAllServices();\n    getAllCategories();\n    getAllProviders();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // useEffect(() => {\n  //   console.log(events.find((event) => event.id === selectedEventId?.toString()))\n  // },[events, selectedEventId]);\n\n  useEffect(() => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      const newView = isDesktop ? 'dayGridMonth' : 'listWeek';\n      calendarApi.changeView(newView);\n      setView(newView);\n    }\n  }, [isDesktop]);\n\n  const handleOpenFilter = () => {\n    setOpenFilter(true);\n  };\n\n  const handleCloseFilter = () => {\n    setOpenFilter(false);\n  };\n\n  const handleClickToday = () => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.today();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleChangeView = (newView: ICalendarViewValue) => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.changeView(newView);\n      setView(newView);\n    }\n  };\n\n  const handleClickDatePrev = () => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.prev();\n      from = new Date(calendarApi.getDate().getFullYear(), calendarApi.getDate().getMonth(), 2)\n        .toISOString()\n        .split('T')[0];\n      to = new Date(calendarApi.getDate().getFullYear(), calendarApi.getDate().getMonth() + 1, 1)\n        .toISOString()\n        .split('T')[0];\n      console.log(from, to);\n      dispatch(getEvents({ from, to }, { status: 'All' }));\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleClickDateNext = () => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      from = new Date(calendarApi.getDate().getFullYear(), calendarApi.getDate().getMonth() + 1, 2)\n        .toISOString()\n        .split('T')[0];\n      to = new Date(calendarApi.getDate().getFullYear(), calendarApi.getDate().getMonth() + 2, 1)\n        .toISOString()\n        .split('T')[0];\n      console.log(from, to);\n      dispatch(getEvents({ from, to }, { status: 'All' }));\n      calendarApi.next();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleSelectRange = (arg: DateSelectArg) => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.unselect();\n    }\n    dispatch(\n      selectRange({\n        start: arg.start,\n        end: arg.end,\n      })\n    );\n  };\n\n  const handleSelectEvent = (arg: EventClickArg) => {\n    dispatch(selectEvent(arg.event.id));\n  };\n\n  const handleResizeEvent = async ({ event }: EventResizeDoneArg) => {\n    try {\n      const e = {\n        id: event.id,\n        date: event?.start,\n      };\n\n      console.log('event', event);\n      console.log('e', e);\n      dispatch(updateEvent(e));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDropEvent = async ({ event }: EventDropArg) => {\n    try {\n      const e = {\n        id: event.id,\n        date: event?.start,\n      };\n\n      console.log('event', event);\n      console.log('e', e);\n      dispatch(updateEvent(e, event._def.extendedProps.patient.fullName));\n      dispatch(updateEvent(e, event._def.extendedProps.patient.fullName));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleOpenModal = () => {\n    dispatch(onOpenModal());\n  };\n\n  const handleCloseModal = () => {\n    dispatch(onCloseModal());\n  };\n\n  const handleCreateUpdateEvent = (newEvent: EventSubmit, fullName: string) => {\n    newEvent.id = selectedEventId;\n    if (selectedEventId) {\n      dispatch(updateEvent(newEvent, fullName));\n      enqueueSnackbar('Update success!');\n    } else {\n      dispatch(createEvent(newEvent, fullName));\n      enqueueSnackbar('Create success!');\n    }\n  };\n\n  const handleSearchPatient = (search: string) => dispatch(searchPatients(search));\n  const handleSearchAppointment = (search: string) => dispatch(searchAppointments(search));\n  const handlegetServices = () => dispatch(getServices());\n  const handlegetCategoriesByServiceId = (serviceId: number) => dispatch(getCategories(serviceId));\n  const handlegetProviders = () => dispatch(getProviders());\n  const handlegetCategories = () => dispatch(getCategories());\n  const handlegetAcByServiceIdAndCategoryId = (serviceId: number, categoryId: number) =>\n    dispatch(searchActByserviceIdAndCategoryId(serviceId, categoryId));\n  const handleSearchAct = (search: string) => dispatch(searchActs(search));\n\n  const handleDeleteEvent = async () => {\n    try {\n      if (selectedEventId) {\n        dispatch(deleteEvent(selectedEventId));\n        dispatch(getEvents({ from, to }, { status: 'All' }));\n        handleCloseModal();\n        enqueueSnackbar('Delete success!');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleFilterEventColor = (eventColor: string) => {\n    const checked = filterEventColor.includes(eventColor)\n      ? filterEventColor.filter((value) => value !== eventColor)\n      : [...filterEventColor, eventColor];\n\n    setFilterEventColor(checked);\n  };\n\n  const dataFiltered = applyFilter({\n    inputData: events,\n    filterEventColor,\n    filterStartDate: picker.startDate,\n    filterEndDate: picker.endDate,\n    isError: !!picker.isError,\n  });\n\n  return (\n    <>\n      <Helmet>\n        <title> Appointements</title>\n      </Helmet>\n\n      <Container maxWidth={themeStretch ? false : 'xl'}>\n        <CustomBreadcrumbs\n          heading=\"Appointments\"\n          links={[\n            {\n              name: 'Appointment',\n              href: '',\n            },\n            {\n              name: 'Appointment',\n            },\n          ]}\n          action={\n            <Button\n              variant=\"contained\"\n              startIcon={<Iconify icon=\"eva:plus-fill\" />}\n              onClick={handleOpenModal}\n            >\n              New Appointment\n            </Button>\n          }\n        />\n\n        <Card>\n          <Tabs\n            value={filterStatus}\n            onChange={handleFilterStatus}\n            sx={{\n              px: 2,\n              bgcolor: 'background.neutral',\n            }}\n          >\n            {STATUS_OPTIONS.map((tab) => (\n              <Tab key={tab} label={tab} value={tab} />\n            ))}\n          </Tabs>\n\n          <Divider />\n\n          <UserTableToolbar\n            isFiltered={isFiltered}\n            filterName={filterName}\n            filterRole={filterRole}\n            filterType={filterType}\n            filterData={filterData}\n            optionsRole={optionsService}\n            optionsType={Type_OPTIONS}\n            optionsData={Data_OPTIONS}\n            onFilterName={handleFilterName}\n            onFilterRole={handleFilterRole}\n            onFilterType={handleFilterType}\n            onFilterData={handleFilterData}\n            onResetFilter={handleResetFilter}\n          />\n\n          <Divider />\n\n          <StyledCalendar>\n            <CalendarToolbar\n              date={date}\n              view={view}\n              onNextDate={handleClickDateNext}\n              onPrevDate={handleClickDatePrev}\n              onToday={handleClickToday}\n              onChangeView={handleChangeView}\n              onOpenFilter={handleOpenFilter}\n            />\n            <FullCalendar\n              weekends\n              editable\n              droppable\n              selectable\n              allDayMaintainDuration\n              eventResizableFromStart\n              fixedWeekCount={false}\n              showNonCurrentDates={false}\n              startParam={from}\n              endParam={to}\n              events={dataFiltered}\n              initialEvents={events}\n              ref={calendarRef}\n              initialDate={date}\n              initialView={view}\n              dayMaxEventRows={3}\n              eventDisplay=\"block\"\n              headerToolbar={false}\n              select={handleSelectRange}\n              eventDrop={handleDropEvent}\n              eventClick={handleSelectEvent}\n              eventResize={handleResizeEvent}\n              height={isDesktop ? 720 : 'auto'}\n              plugins={[\n                listPlugin,\n                dayGridPlugin,\n                timelinePlugin,\n                timeGridPlugin,\n                interactionPlugin,\n              ]}\n            />\n          </StyledCalendar>\n        </Card>\n      </Container>\n\n      <Dialog fullWidth maxWidth=\"md\" open={openModal} onClose={handleCloseModal}>\n        <DialogTitle>{selectedEvent ? 'Edit Appointment' : 'Add Appointment'}</DialogTitle>\n\n        <CalendarForm\n          event={selectedEvent}\n          range={selectedRange}\n          onCancel={handleCloseModal}\n          onCreateUpdateEvent={handleCreateUpdateEvent}\n          onSearchPatients={handleSearchPatient}\n          onSearchActs={handleSearchAct}\n          onCategoriesByServiceId={handlegetCategoriesByServiceId}\n          onActsByServiceIdAndCategoryId={handlegetAcByServiceIdAndCategoryId}\n          onGetServices={handlegetServices}\n          onDeleteEvent={handleDeleteEvent}\n          colorOptions={COLOR_OPTIONS}\n        />\n      </Dialog>\n\n      <CalendarFilterDrawer\n        events={events}\n        picker={picker}\n        open={openFilter}\n        onClose={handleCloseFilter}\n        colorOptions={COLOR_OPTIONS}\n        filterEventColor={filterEventColor}\n        onFilterEventColor={handleFilterEventColor}\n        onResetFilter={() => {\n          const { setStartDate, setEndDate } = picker;\n          setFilterEventColor([]);\n          if (setStartDate && setEndDate) {\n            setStartDate(null);\n            setEndDate(null);\n          }\n        }}\n        onSelectEvent={(eventId: string) => {\n          console.log('hey');\n          if (eventId) {\n            handleOpenModal();\n            dispatch(selectEvent(eventId));\n          }\n        }}\n      />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction applyFilter({\n  inputData,\n  filterEventColor,\n  filterStartDate,\n  filterEndDate,\n  isError,\n}: {\n  inputData: EventInput[];\n  filterEventColor: string[];\n  filterStartDate: Date | null;\n  filterEndDate: Date | null;\n  isError: boolean;\n}) {\n  const stabilizedThis = inputData.map((el, index) => [el, index] as const);\n\n  inputData = stabilizedThis.map((el) => el[0]);\n\n  if (filterEventColor.length) {\n    inputData = inputData.filter((event: EventInput) =>\n      filterEventColor.includes(event.textColor as string)\n    );\n  }\n\n  if (filterStartDate && filterEndDate && !isError) {\n    inputData = inputData.filter(\n      (event) =>\n        fTimestamp(event?.start as Date) >= fTimestamp(filterStartDate) &&\n        fTimestamp(event.end as Date) <= fTimestamp(filterEndDate)\n    );\n  }\n\n  return inputData;\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  MenuItem,\n  TableCell,\n  IconButton,\n  Typography,\n} from '@mui/material';\n// common\nimport { EventInput } from '@fullcalendar/common';\nimport { Appointment } from 'src/@types/calendar';\n// @types\nimport { IUserAccountGeneral } from '../../../../@types/user';\n// components\nimport Label from '../../../../components/label';\nimport Iconify from '../../../../components/iconify';\nimport MenuPopover from '../../../../components/menu-popover';\nimport ConfirmDialog from '../../../../components/confirm-dialog';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  // row: IUserAccountGeneral;\n  row: Appointment;\n  selected: boolean;\n  onEditRow: VoidFunction;\n  onSelectRow: VoidFunction;\n  onDeleteRow: VoidFunction;\n};\n\nexport default function UserTableRow({\n  row,\n  selected,\n  onEditRow,\n  onSelectRow,\n  onDeleteRow,\n}: Props) {\n  // const { name, avatarUrl, company, role, isVerified, status } = row;\n\n  \n  // const { content, size, number} = row;\n\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  const [openPopover, setOpenPopover] = useState<HTMLElement | null>(null);\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const handleOpenPopover = (event: React.MouseEvent<HTMLElement>) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  return (\n    <>\n      <TableRow hover selected={selected}>\n        <TableCell padding=\"checkbox\">\n          <Checkbox checked={selected} onClick={onSelectRow} />\n        </TableCell>\n\n        <TableCell>\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n            {/* <Avatar alt={name} src={avatarUrl} /> */}\n\n            <Typography variant=\"subtitle2\" noWrap>\n              {row.patient.fullName}\n            </Typography>\n          </Stack>\n        </TableCell>\n\n        <TableCell align=\"left\">{row.patient.phoneNumber}</TableCell>\n\n        <TableCell align=\"left\" sx={{ textTransform: 'capitalize' }}>\n          {row.selectedFee.price}\n        </TableCell>\n\n        {/* <TableCell align=\"center\">\n           <Iconify\n            icon={isVerified ? 'eva:checkmark-circle-fill' : 'eva:clock-outline'}\n            sx={{\n              width: 20,\n              height: 20,\n              color: 'success.main',\n              ...(!isVerified && { color: 'warning.main' }),\n            }}\n          /> \n        </TableCell> */}\n\n        <TableCell align=\"left\">\n            {row.date}\n        </TableCell>\n\n        <TableCell align=\"left\">\n            {row.selectedFee.fee.service.name}\n        </TableCell>\n\n        <TableCell align=\"left\">\n          <Label\n            variant=\"soft\"\n            // color={(status === 'banned' && 'error') || 'success'}\n            sx={{ textTransform: 'capitalize' }}\n          >\n            {row.status}\n          </Label>\n        </TableCell>\n\n        <TableCell align=\"right\">\n          <IconButton color={openPopover ? 'inherit' : 'default'} onClick={handleOpenPopover}>\n            <Iconify icon=\"eva:more-vertical-fill\" />\n          </IconButton>\n        </TableCell>\n      </TableRow>\n\n      <MenuPopover\n        open={openPopover}\n        onClose={handleClosePopover}\n        arrow=\"right-top\"\n        sx={{ width: 140 }}\n      >\n        <MenuItem\n          onClick={() => {\n            handleOpenConfirm();\n            handleClosePopover();\n          }}\n          sx={{ color: 'error.main' }}\n        >\n          <Iconify icon=\"eva:trash-2-outline\" />\n          Delete\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            onEditRow();\n            handleClosePopover();\n          }}\n        >\n          <Iconify icon=\"eva:edit-fill\" />\n          Edit\n        </MenuItem>\n      </MenuPopover>\n\n      <ConfirmDialog\n        open={openConfirm}\n        onClose={handleCloseConfirm}\n        title=\"Delete\"\n        content=\"Are you sure want to delete?\"\n        action={\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","// @mui\nimport { Stack, InputAdornment, TextField, MenuItem, Button } from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  filterName: string;\n  filterRole: string;\n  filterType: string;\n  filterData: string;\n  optionsType: Array<Category>;\n  isFiltered: boolean;\n  optionsRole: Array<Service>;\n  optionsData: Array<Provider>;\n  onResetFilter: VoidFunction;\n  onFilterName: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onFilterRole: (event: React.MouseEvent<Element>,s: Service) => void;\n  onFilterType: (event: React.MouseEvent<Element>,c: Category) => void;\n  onFilterData: (event: React.MouseEvent<Element>, p: Provider) => void;\n};\n\ntype Patient = {\n  age: string,\n  birthDate: string,\n  doctors: [],\n  fullName: string,\n  gender: string,\n  id: number,\n  identification: string,\n  lastUpdate: string,\n  phoneNumber: string,\n  title?: string,\n};\n\ntype Service = {\n  id: number,\n  name: string,\n  subServices: [],\n  team: [],\n  status: string\n}\n\ntype Category = {\n  id: number,\n  name: string,\n  subCategories: [],\n}\n\ntype Act = {\n  id: number,\n  name: string,\n  service: Service,\n  reference: string,\n  defaultPrice: number,\n  basePrice: number,\n  type: string,\n  category: Category,\n  providers: [\n    {\n      id: number,\n      user: {\n          id: number,\n          username: string,\n          name: string,\n          nameAr: string,\n          status: string,\n          userRole: string\n      },\n      basePrice: number,\n      priceVariations: [\n          {\n              id: number,\n              name: string,\n              price: number\n          }\n      ]\n    }\n  ]\n}\n\ntype Provider = {\n  id: number,\n  username: string,\n  password: string,\n  name: string,\n  nameAr: string,\n  status: string,\n  userRole: string\n}\n\nexport default function UserTableToolbar({\n  isFiltered,\n  filterName,\n  filterRole,\n  optionsRole,\n  filterType,\n  optionsType,\n  filterData,\n  optionsData,\n  onFilterName,\n  onFilterRole,\n  onFilterType,\n  onResetFilter,\n  onFilterData\n}: Props) {\n  return (\n    <Stack\n      spacing={2}\n      alignItems=\"center\"\n      direction={{\n        xs: 'column',\n        sm: 'row',\n      }}\n      sx={{ px: 2.5, py: 3 }}\n    >\n      <TextField\n        fullWidth\n        select\n        label=\"Service\"\n        value={filterRole}\n        // onChange={}\n        SelectProps={{\n          MenuProps: {\n            PaperProps: {\n              sx: {\n                maxHeight: 260,\n              },\n            },\n          },\n        }}\n        sx={{\n          maxWidth: { sm: 240 },\n          textTransform: 'capitalize',\n        }}\n      >\n        {optionsRole.map((option, i) => (\n          <MenuItem\n            key={i}\n            value={option.name}\n            onClick={(e) => onFilterRole(e,option)}\n            sx={{\n              mx: 1,\n              borderRadius: 0.75,\n              typography: 'body2',\n              textTransform: 'capitalize',\n            }}\n          >\n            {option.name}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      <TextField\n        fullWidth\n        select\n        label=\"Category\"\n        value={filterType}\n        SelectProps={{\n          MenuProps: {\n            PaperProps: {\n              sx: {\n                maxHeight: 260,\n              },\n            },\n          },\n        }}\n        sx={{\n          maxWidth: { sm: 240 },\n          textTransform: 'capitalize',\n        }}\n      >\n        {optionsType.map((option) => (\n          <MenuItem\n            key={option.id}\n            value={option.name}\n            onClick={(e) => onFilterType(e, option)}\n            sx={{\n              mx: 1,\n              borderRadius: 0.75,\n              typography: 'body2',\n              textTransform: 'capitalize',\n            }}\n          >\n            {option.name}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      <TextField\n        fullWidth\n        select\n        label='Providers'\n        value={filterData}\n        SelectProps={{\n          MenuProps: {\n            PaperProps: {\n              sx: {\n                maxHeight: 260,\n              },\n            },\n          },\n        }}\n        sx={{\n          maxWidth: { sm: 240 },\n          textTransform: 'capitalize',\n        }}\n      >\n        {optionsData.map((option) => (\n          <MenuItem\n            key={option.id}\n            value={option.name}\n            onClick={(e) => onFilterData(e,option)}\n            sx={{\n              mx: 1,\n              borderRadius: 0.75,\n              typography: 'body2',\n              textTransform: 'capitalize',\n            }}\n          >\n            {option.name}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      <TextField\n        fullWidth\n        value={filterName}\n        onChange={onFilterName}\n        placeholder=\"Search...\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      {isFiltered && (\n        <Button\n          color=\"error\"\n          sx={{ flexShrink: 0 }}\n          onClick={onResetFilter}\n          startIcon={<Iconify icon=\"eva:trash-2-outline\" />}\n        >\n          Clear\n        </Button>\n      )}\n    </Stack>\n  );\n}\n"],"names":["ColorPreview","colors","limit","sx","showColor","slice","moreColor","length","Stack","component","direction","alignItems","justifyContent","map","color","index","Box","ml","width","height","borderRadius","border","theme","palette","background","paper","boxShadow","alpha","common","black","bgcolor","Typography","variant","Icon","checked","whiteColor","other","shadow","opacity","position","icon","display","transition","transitions","create","duration","shortest","divider","grey","transform","ColorMultiPicker","selected","onChangeColor","Checkbox","size","value","includes","onChange","checkedIcon","forwardRef","ref","RadioGroup","row","Radio","ConfirmDialog","title","content","action","open","onClose","Dialog","fullWidth","maxWidth","DialogTitle","pb","DialogContent","typography","DialogActions","Button","onClick","BreadcrumbsLink","link","activeLast","disabled","name","href","styles","cursor","pointerEvents","renderContent","mr","Link","RouterLink","to","CustomBreadcrumbs","links","heading","moreLink","lastLink","mb","flexGrow","gutterBottom","Breadcrumbs","separator","Separator","flexShrink","mt","noWrap","target","rel","useDateRangePicker","start","end","useState","setOpen","endDate","setEndDate","startDate","setStartDate","isError","isBefore","Date","currentYear","getFullYear","startDateYear","getYear","endDateYear","isCurrentYear","isSameDays","isSameDay","isSameMonths","isSameMonth","standardLabel","fDate","onChangeStartDate","newValue","onChangeEndDate","onOpen","onReset","isSelected","label","shortLabel","DateRangePicker","isDesktop","useResponsive","isCalendarView","PaperProps","overflow","spacing","pt","Paper","borderColor","borderStyle","CalendarPicker","date","DatePicker","renderInput","params","TextField","FormHelperText","error","px","styled","marginLeft","marginBottom","info","light","main","default","neutral","hover","primary","text","subtitle2","padding","backgroundColor","white","filter","top","left","boxSizing","zIndex","fontSize","lineHeight","whiteSpace","textOverflow","fontWeight","fontWeightBold","customShadows","z20","shape","borderBottom","margin","body2","marginTop","marginRight","caption","secondary","getInitialValues","event","range","initialEvent","description","textColor","allDay","toISOString","merge","CalendarForm","colorOptions","onCreateUpdateEvent","onSearchPatients","onSearchActs","onCategoriesByServiceId","onActsByServiceIdAndCategoryId","onGetServices","onDeleteEvent","onCancel","hasEventData","useLocalStorage","defaultSettings","settings","useDispatch","patient","setPatient","act","setAct","id","service","subServices","team","status","reference","defaultPrice","basePrice","type","category","subCategories","providers","actObj","setActObj","user","username","nameAr","userRole","priceVariations","price","provider","setProvider","isService","setIsService","serviceId","setServiceId","patientSelected","setPatientSelected","closePatient","setClosePatient","patients","actsSearch","acts","setActs","isActOpen","setIsActOpen","isPatientOpen","setIsPatientOpen","isProvider","setIsProvider","isPriceVariation","setIsPriceVariation","isFee","setIsFee","isFeeOpen","setIsFeeOpen","isInitialFee","setIsInitialFee","isCategory","setIsCategory","isRotate","setIsRotate","age","birthDate","doctors","fullName","gender","identification","lastUpdate","phoneNumber","searchP","setSearchP","searchFilter","setSearchFilter","p","match","searchActFilter","setSearchActFilter","setValue","span","document","querySelector","optionsService","setOptionsService","priceVariation","setPriceVariation","optionsCategory","setOptionsCategory","filterStatus","setFilterStatus","EventSchema","Yup","methods","useForm","resolver","yupResolver","defaultValues","reset","watch","control","handleSubmit","isSubmitting","formState","values","getAllServices","useCallback","console","log","selectedFee","fee","toString","data","loadOne","themeMode","classList","add","useEffect","onSubmit","newEvent","handleSearchpatients","e","search","handleSearchActs","handleActNameClick","a","handleServiceClick","s","handleCategoryClick","c","handleFeeClickPrice","currentTarget","innerText","addEventListener","f","contains","v","customSelect","remove","className","placeholder","InputProps","startAdornment","InputAdornment","i","handleClick","render","field","MobileDateTimePicker","inputFormat","undefined","onActObjClick","select","option","MenuItem","mx","textTransform","Tooltip","IconButton","LoadingButton","loading","VIEW_OPTIONS","CalendarToolbar","view","onToday","onNextDate","onPrevDate","onChangeView","onOpenFilter","xs","sm","viewOption","ToggleButton","CalendarFilterDrawer","events","picker","onResetFilter","onSelectEvent","filterEventColor","onFilterEventColor","Drawer","anchor","BackdropProps","invisible","NAV","pl","pr","py","Divider","orderBy","ListItemButton","borderRight","borderTop","ListItemText","disableTypography","fDateTime","flexDirection","COLOR_OPTIONS","CalendarPage","initialDate","from","getMonth","split","enqueueSnackbar","useSnackbar","themeStretch","useSettingsContext","dispatch","calendarRef","useRef","useSelector","state","calendar","openModal","selectedRange","selectedEventId","selectedEvent","find","setDate","openFilter","setOpenFilter","setFilterEventColor","setView","_userList","filterName","setFilterName","filterRole","setFilterRole","setService","setCategory","password","filterType","setFilterType","Data_OPTIONS","setDataOptions","filterData","setFilterData","Type_OPTIONS","setTypeOptions","isFiltered","handlegetServices","getAllCategories","handlegetCategories","getAllProviders","handlegetProviders","handleFilterType","getEvents","categoryId","providerId","handleFilterRole","handleSearchPatient","handlegetCategoriesByServiceId","d","beginnig","calendarEl","current","calendarApi","getApi","newView","changeView","handleResizeEvent","updateEvent","handleDropEvent","_def","extendedProps","handleOpenModal","onOpenModal","handleCloseModal","onCloseModal","searchPatients","handleSearchAppointment","searchAppointments","getServices","getCategories","getProviders","handleDeleteEvent","deleteEvent","dataFiltered","inputData","filterStartDate","filterEndDate","stabilizedThis","el","fTimestamp","applyFilter","Container","startIcon","Card","Tabs","tab","Tab","optionsRole","optionsType","optionsData","onFilterName","onFilterRole","onFilterType","onFilterData","getDate","next","prev","today","weekends","editable","droppable","selectable","allDayMaintainDuration","eventResizableFromStart","fixedWeekCount","showNonCurrentDates","startParam","endParam","initialEvents","initialView","dayMaxEventRows","eventDisplay","headerToolbar","arg","unselect","selectRange","eventDrop","eventClick","selectEvent","eventResize","plugins","listPlugin","dayGridPlugin","timelinePlugin","timeGridPlugin","interactionPlugin","createEvent","searchActs","searchActByserviceIdAndCategoryId","eventColor","eventId","UserTableRow","onEditRow","onSelectRow","onDeleteRow","openConfirm","setOpenConfirm","openPopover","setOpenPopover","handleClosePopover","TableRow","TableCell","align","arrow","UserTableToolbar","SelectProps","MenuProps","maxHeight"],"sourceRoot":""}